'\" t
.\"     Title: PLOT3
.\"    Author:
.\" Generator: DocBook XSL-NS Stylesheets v1.76.1 <http://docbook.sf.net/>
.\"      Date: 12/04/2012
.\"    Manual: BRL-CAD
.\"    Source: BRL-CAD
.\"  Language: English
.\"
.TH "PLOT3" "5" "12/04/2012" "BRL\-CAD" "BRL\-CAD"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
plot3 \- 3\-D and color graphic plotting interface
.SH "DESCRIPTION"
.PP
Files of this format are produced by programs such as
\fBpixhist3d-pl\fR(1), using the routines described in
\fBlibplot3\fR(3)
and are interpreted for various devices by standard programs described in
\fBplot\fR(1G), as well as additional programs such as
\fBpl-fb\fR(1)\&. The format of output from
\fIlibplot3\fR
differs from that of
\fIlibplot\fR
only in the addition of 3\-D primitives and color\&. A graphics file is a stream of plotting instructions\&. Each instruction consists of an
ASCII

letter usually followed by bytes of binary information\&. The instructions are executed in order\&. A point is designated by four bytes representing the
\fBx\fR
and
\fBy\fR
values; each value is a signed 16\-bit integer\&. These integers are written with the most significant byte first\&. Three\-dimensional data have an additional
\fBz\fR
value, which is assumed to be zero for two\-dimensional instructions\&. The last designated point in an
\fBl\fR,
\fBm\fR,
\fBn\fR,
\fBp\fR,
\fBL\fR,
\fBM\fR,
\fBN\fR, or
\fBP\fR
instruction becomes the "current point" for the next instruction\&.
.PP
Each of the following descriptions begins with the name of the corresponding routine in
\fBlibplot3\fR(3)\&.
.PP
\fBm\fR
.RS 4
move: The next four bytes give a new current point\&.
.RE
.PP
\fBn\fR
.RS 4
cont: Draw a line from the current point to the point given by the next four bytes\&. See
\fBplot\fR(1G)\&.
.RE
.PP
\fBp\fR
.RS 4
point: Plot the point given by the next four bytes\&.
.RE
.PP
\fBl\fR
.RS 4
line: Draw a line from the point given by the next four bytes to the point given by the following four bytes\&.
.RE
.PP
\fBt\fR
.RS 4
label: Place the following
ASCII

string so that its first character falls on the current point\&. The string is terminated by a new\-line\&.
.RE
.PP
\fBa\fR
.RS 4
arc: The first four bytes give the center, the next four give the starting point, and the last four give the end point of a circular arc\&. The least significant coordinate of the end point is used only to determine the quadrant\&. The arc is drawn counter\-clockwise\&.
.RE
.PP
\fBc\fR
.RS 4
circle: The first four bytes give the center of the circle, the next two the radius\&. Circles and arcs are not supported on all devices\&.
.RE
.PP
\fBe\fR
.RS 4
erase: Start another frame of output\&.
.RE
.PP
\fBf\fR
.RS 4
linmod: Take the following string, up to a new\-line, as the style for drawing further lines\&. The styles are "dotted", "solid", "longdashed", "shortdashed", and "dotdashed"\&. Effective only for the
\fB\-T4014\fR
and
\fB\-Tver\fR
options of
\fBplot\fR(1G)
(
TEKTRONIX

4014 terminal and Versatec plotter)\&.
.RE
.PP
\fBs\fR
.RS 4
space: The next four bytes give the lower left corner of the plotting area; the following four give the upper right corner\&. The plot will be magnified or reduced to fit the device as closely as possible\&.
.RE
.PP
The following were added at BRL\&. Three\-dimensional primitives have their
\fBz\fR
values ignored when displayed on two\-dimensional devices\&.
.PP
\fBC\fR
.RS 4
color: The next three bytes give respectively the intensities (0\&.\&.255) of the three color components (additive colors red, green, and blue if a terminal; subtractive colors cyan, magenta, and yellow if hardcopy) to be used for subsequent plotting\&. The initial color is assumed to be (255,255,255), which is white on a terminal and black on hardcopy\&. Color specifications are ignored for black\-and\-white devices\&.
.RE
.PP
\fBM\fR
.RS 4
3move: The next six bytes give a new current point\&.
.RE
.PP
\fBN\fR
.RS 4
3cont: Draw a line from the current point to the point given by the next six bytes\&. See
\fBplot\fR(1G)\&.
.RE
.PP
\fBP\fR
.RS 4
3point: Plot the point given by the next six bytes\&.
.RE
.PP
\fBL\fR
.RS 4
3line: Draw a line from the point given by the next six bytes to the point given by the following six bytes\&.
.RE
.PP
\fBS\fR
.RS 4
3space: The next six bytes give the minimum corner of the plotting area; the following six give the maximum corner\&. The plot will be magnified or reduced to fit the device as closely as possible\&.
.RE
.PP
\fBF\fR
.RS 4
3flush:
.RE
.PP
\fBx\fR
.RS 4
double_point: The double\-precision version of point\&.
.RE
.PP
\fBv\fR
.RS 4
double_line: The double\-precision version of line\&.
.RE
.PP
\fBo\fR
.RS 4
double_move: The double\-precision version of move\&.
.RE
.PP
\fBq\fR
.RS 4
double_cont: The double\-precision version of cont\&.
.RE
.PP
\fBw\fR
.RS 4
double_space: The double\-precision version of space\&.
.RE
.PP
\fBi\fR
.RS 4
double_circle: The double\-precision version of circle\&.
.RE
.PP
\fBr\fR
.RS 4
double_arc: The double\-precision version of arc\&.
.RE
.PP
\fBW\fR
.RS 4
double_3space: The double\-precision, 3_D version of space\&.
.RE
.PP
\fBX\fR
.RS 4
double_3point: The double\-precision, 3_D version of point\&.
.RE
.PP
\fBO\fR
.RS 4
double_3move: The double\-precision, 3_D version of move\&.
.RE
.PP
\fBQ\fR
.RS 4
double_3cont: The double\-precision, 3_D version of cont\&.
.RE
.PP
\fBV\fR
.RS 4
double_3line: The double\-precision, 3_D version of line\&.
.RE
.PP
Space settings that exactly fill the plotting area with unity scaling appear below for devices supported by the filters of
\fBplot\fR(1G)\&. The upper limit is just outside the plotting area, except for the Megatek which displays the entire range of possible coordinates\&. In every case the plotting area is taken to be square; points outside may be displayable on devices whose face is not square\&.
.PP
\fIDASI 300\fR
.RS 4
space(0, 0, 4096, 4096);
.RE
.PP
\fIDASI 300s\fR
.RS 4
space(0, 0, 4096, 4096);
.RE
.PP
\fIDASI 450\fR
.RS 4
space(0, 0, 4096, 4096);
.RE
.PP
TEKTRONIX 4014
.RS 4
space(0, 0, 3120, 3120);
.RE
.PP
Versatec plotter
.RS 4
space(0, 0, 2048, 2048);
.RE
.PP
Megatek display
.RS 4
space(\-32768, \-32768, 32767, 32767);
.RE
.SH "SEE ALSO"
.PP
\fBlibplot3\fR(3),
\fBplot\fR(3),
\fBplot\fR(5)\&.
.PP
\fBgraph\fR(1G),
\fBplot\fR(1G)
in the
\fI\fR\fIUNIX\fR\fI\fR\fI System User Reference Manual\fR\&.
.SH "AUTHOR"
.PP
Douglas A\&. Gwyn made the 3\-D and color extensions to UNIX\-plot\&.
.SH "COPYRIGHT"
.PP
This software is Copyright (c) 1989\-2012 by the United States Government as represented by U\&.S\&. Army Research Laboratory\&.
.SH "BUG REPORTS"
.PP
Reports of bugs or problems should be submitted via electronic mail to <devs@brlcad\&.org>\&.
.SH "AUTHOR"
.br
.RS 4
Author.
.RE
