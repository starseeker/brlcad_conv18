<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"/usr/share/sgml/docbook/xml-dtd-4.5/docbookx.dtd">
<article class='specification'>
  <articleinfo>
    <title>BRL-CAD Database Format</title>
    <subtitle>Version 5 (DRAFT)</subtitle>
    <authorgroup>
      <author>
        <firstname>Lee</firstname>
        <surname>Butler</surname>
        <othername role='mi'>A</othername>
        <affiliation>
          <shortaffil>U.S. Army Research Laboratory</shortaffil>
          <orgdiv>Survivability/Lethality Analysis Directorate</orgdiv>
          <address>
            Aberdeen Proving Ground
            <state>MD</state> 
            <postcode>21005-5068</postcode>
          </address>
        </affiliation>
      </author>
      <author>
        <firstname>Michael</firstname>
        <surname>Muuss</surname>
        <othername role='mi'>John</othername>
        <affiliation>
          <shortaffil>U.S. Army Research Laboratory</shortaffil>
          <orgdiv>Survivability/Lethality Analysis Directorate</orgdiv>
          <address>
            Aberdeen Proving Ground
            <state>MD</state> 
            <postcode>21005-5068</postcode>
          </address>
        </affiliation>
      </author>
      <author>
        <firstname>Paul</firstname>
        <surname>Tanenbaum</surname>
        <othername role='mi'>J</othername>
        <affiliation>
          <shortaffil>U.S. Army Research Laboratory</shortaffil>
          <orgdiv>Survivability/Lethality Analysis Directorate</orgdiv>
          <address>
            Aberdeen Proving Ground
            <state>MD</state> 
            <postcode>21005-5068</postcode>
          </address>
        </affiliation>
      </author>
      <author>
        <firstname>John</firstname>
        <surname>Anderson</surname>
        <othername role='mi'>R</othername>
        <affiliation>
          <shortaffil>U.S. Army Research Laboratory</shortaffil>
          <orgdiv>Survivability/Lethality Analysis Directorate</orgdiv>
          <address>
            Aberdeen Proving Ground
            <state>MD</state> 
            <postcode>21005-5068</postcode>
          </address>
        </affiliation>
      </author>
      <author>
        <firstname>Robert</firstname>
        <surname>Parker</surname>
        <othername role='mi'>G</othername>
        <affiliation>
          <shortaffil>U.S. Army Research Laboratory</shortaffil>
          <orgdiv>Survivability/Lethality Analysis Directorate</orgdiv>
          <address>
            Aberdeen Proving Ground
            <state>MD</state> 
            <postcode>21005-5068</postcode>
          </address>
        </affiliation>
      </author>
      <author>
        <firstname>Ronald</firstname>
        <surname>Bowers</surname>
        <othername role='mi'>A</othername>
        <affiliation>
          <shortaffil>U.S. Army Research Laboratory</shortaffil>
          <orgdiv>Survivability/Lethality Analysis Directorate</orgdiv>
          <address>
            Aberdeen Proving Ground
            <state>MD</state> 
            <postcode>21005-5068</postcode>
          </address>
        </affiliation>
      </author>
      <author>
        <firstname>Christopher</firstname>
        <surname>Johnson</surname>
        <othername role='mi'>T</othername>
        <affiliation>
          <shortaffil>U.S. Army Research Laboratory</shortaffil>
          <orgdiv>Survivability/Lethality Analysis Directorate</orgdiv>
          <address>
            Aberdeen Proving Ground
            <state>MD</state> 
            <postcode>21005-5068</postcode>
          </address>
        </affiliation>
      </author>
      <author>
        <firstname>Eric</firstname>
        <surname>Edwards</surname>
        <othername role='mi'>W</othername>
        <affiliation>
          <shortaffil>SURVICE Engineering Company</shortaffil>
          <address>
            <street>4695 Millennium Drive</street>
            <city>Belcamp</city>
            <state>MD</state> 
            <postcode>21017-1505</postcode>
          </address>
        </affiliation>
      </author>
    </authorgroup>
  </articleinfo>
  
  <abstract>
    <para>
      BRL-CAD software uses its own binary file format to store the geometric information and
      other properties required to define CAD models. BRL-CAD used its version 4 (v4) binary 
      ".g" database format for over 10 years, but a variety of long standing issues with 
      that format prompted the development of version 5.  Issues addressed by the new format
      include a machine-independent format, expanding the upper limit of numbers to double 
      precision floating point, and lifting a 16 character size limit on object names.
    </para>
  </abstract>

  <section>
    <title>Background and Terminology</title>
    <para>
      BRL-CAD is a constructive solid geometry (CSG) modeling system. Primitive solid shapes 
      are combined using boolean operations to form regions of homogeneous material. 
    </para>
    <para>
      The database is organized as a <emphasis>directed acyclic graph</emphasis> (DAG), which 
      comprises 

      <itemizedlist>
	<listitem>
	  <para>primitive <emphasis>solids</emphasis> - the minimal elements of the DAG.</para>
	</listitem>
	<listitem>
	  <para>
	    <emphasis>combinations</emphasis> - the nonminimal elements of the DAG, 
	    some of which are specially marked as regions. The maximal 
	    elements of the DAG are called tops.
	  </para>
	</listitem>
	<listitem>
	  <para><emphasis>arcs</emphasis> - contain boolean operators and 4x4 homogeneous transformation matrices.</para>
	</listitem>
      </itemizedlist>
    </para>
    <para>
      In a slight abuse of terminology, the DAG is often spoken of as a tree or collection 
      of trees. In this context, the solids are also called <emphasis>leaves</emphasis>. 
    </para>
    <section>
      <title>Format of Data Elements/Database External Format</title>
      <para>
	The external format has several important properties, especially with regard 
	to the <emphasis>Object_Body</emphasis>:
	<itemizedlist>
	  <listitem>
	    <para>
	      Numbers are stored in binary for storage efficiency, for speed of reading 
	      and writing, and for preventing errors from creeping in due to repetitive 
	      conversion between binary and an ASCII string representation. This eliminates 
	      the need to use the old g2asc and asc2g to move databases between machines of 
	      different architectures.
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      All data in the object wrapper are stored in a machine-independent format, 
	      as follows:
	      <itemizedlist mark='opencircle'>
		<listitem>
		  <para>
		    All floating point numbers are stored as IEEE double-precision, in 
		    big-endian order, where byte 0 is on the left end of the word.
		  </para>
		</listitem>
		<listitem>
		  <para>
		    All integers are stored as either <emphasis>unsigned</emphasis> or 
		    <emphasis>twos-complement signed</emphasis> binary numbers in either 
		    8, 16, 32, or 64 bits, in big-endian order.
		  </para>
		</listitem>
		<listitem>
		  <para>
		    All character strings are stored in the ASCII 8-bit character set. 
		    A string is stored as an integer followed by an array of 8-bit 
		    characters. The last character in the array is always a null byte. 
		    The integer indicates the number of bytes in the array including the 
		    terminating null.
		  </para>
		</listitem>
	      </itemizedlist>
	    </para>
	  </listitem>
	</itemizedlist>
      </para>
    </section>
  </section>

  <section>
    <title>Definition of a Single, Generic Database Object</title>
    <para>
      The database access library stores <emphasis>objects</emphasis> as a collection 
      of data with a globally unique name and places no interpretation on the content 
      of those data. The <emphasis>object</emphasis> is the smallest granularity of 
      an item in the database; objects must be read from and written to the database 
      in a single atomic operation.
    </para>
    <para>
      In the case of librt, each database object will contain exactly one combination 
      node or leaf (solid) node. 
    </para>
    <section>
      <title>Object Structure</title>
      <para>
	All objects share certain common properties, which are stored in a standardized 
	<emphasis>object wrapper</emphasis> consisting of an Object Header and an Object Footer.
      </para>
      <para>
	The Object Header consists of:
	<itemizedlist>
	  <listitem>
	    <para>
	      An 8-bit Magic1 element that holds a specific magic number value used for 
	      database integrity checking.
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      A 16-bit Flags element consisting of three 8-bit fields: HFlags, AFlags, 
	      and BFlags, described later.
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      A 16-bit Object_Type element organized into two 8-bit-wide fields: the 
	      Major_Type and the Minor_Type.
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      An Object_Length element that indicates the total number of bytes required 
	      for this object, including the magic numbers.
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      An Object_Name element that is a string holding a name unique to that object 
	      and drawn from a name space that is global to the database. Like other strings, 
	      it consists of two fields, Length and Data. In the case of the Object_Name 
	      element, these are referred to as Name_Length and Name_Data, respectively. 
	      Note: The Object_Name element is mandatory for all allocated storage in the 
	      database. Database free-space managment objects are the only objects for which 
	      the Object_Name element is optional.
	    </para>
	  </listitem>
	</itemizedlist>
      </para>
      <para>
	The Object Footer consists of:
	<itemizedlist>
	  <listitem>
	    <para>
	      Any padding bytes necessary to bring the total size of the object in bytes to an 
	      integral multiple of 8.
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      An 8-bit Magic2 element that holds a specific magic number value used for database 
	      integrity checking.
	    </para>
	  </listitem>
	</itemizedlist>
      </para>
      <para>
	Objects may store application-specific information in an Object Interior.
	<itemizedlist>
	  <listitem>
	    <para>
	      An object may optionally have an Object_Attributes element consisting of a
	      pair of fields: Attribute_Length and Attribute_Data. From the point of view 
	      of the database interface specification, the names and values of these attributes 
	      are opaque????; a standardized import/export encoding API will be provided.
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      An object may optionally have an Object_Body element consisting of a pair of 
	      fields, Body_Length and Body_Data. From the point of view of the database 
	      interface specification, the format of the data is opaque??.
	    </para>
	  </listitem>
	</itemizedlist>
      </para>
      <para>
	The on-disk version of each object consists of three distinct parts: Object Header, 
	Object Interior, and Object Footer. This is called the external format of the object.
      </para>
      <table frame='all'>
	<title>On-Disk BRL-CAD Object Structure</title>
	<tgroup cols='3' align='center' colsep='1' rowsep='1'>
	  <thead>
	    <row>
	      <entry>Part</entry>
	      <entry>Element</entry>
	      <entry>Comments</entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry morerows='4' valign='middle'><para>Object Header:</para><para>(not compressible)</para></entry>
	      <entry>Magic1</entry>
	      <entry morerows='2' valign='middle'>Required</entry>
	    </row>
	    <row>
	      <entry>HFlags, AFlags, BFlags</entry>
	    </row>
	    <row>
	      <entry><para>Object_Type</para><para>(Major_Type, Minor_Type)</para></entry>
	    </row>
	    <row>
	      <entry>Object_Length</entry>
	      <entry>Required</entry>
	    </row>
	    <row>
	      <entry align='center'>
		<para>
		  <informaltable frame='none'>
		    <tgroup cols='2' align='center'>
		      <tbody>
			<row>
			  <entry>Object Name:</entry>
			  <entry>
			    <para>
			      <informaltable frame='all'>
				<tgroup cols='1' align='center'>
				  <tbody>
				    <row><entry>Name_Length</entry></row>
				    <row><entry>Name_Data</entry></row>
				  </tbody>
				</tgroup>
			      </informaltable>
			    </para>
			  </entry>
			</row>
		      </tbody>
		    </tgroup>
		  </informaltable>
		</para>
	      </entry>
	      <entry><para>Conditional on flag bit N,</para><para>Required for Application Data</para></entry>
	    </row>
	    <row>
	      <entry morerows='1' valign='middle'><para>Object Interior:</para><para>(individually compressible)</para></entry>
	      <entry align='center'>
		<para>
		  <informaltable frame='none'>
		    <tgroup cols='2' align='center'>
		      <tbody>
			<row>
			  <entry>Object Attributes:</entry>
			  <entry>
			    <para>
			      <informaltable frame='all'>
				<tgroup cols='1' align='center'>
				  <tbody>
				    <row><entry>Attribute_Length</entry></row>
				    <row><entry>Attribute_Data</entry></row>
				</tbody>
			      </tgroup>
			    </informaltable>
			  </para>
			</entry>
		      </row>
		    </tbody>
		  </tgroup>
		</informaltable>
		</para>
	      </entry>
	      <entry><para>Conditional on flag bit A</para><para>(ZZZ compression)</para></entry>
	    </row>
	    <row>
	      <entry align='center'>
		<para>
		<informaltable frame='none'>
		  <tgroup cols='2' align='center'>
		    <tbody>
		      <row>
			<entry>Object Body:</entry>
			<entry>
			  <para>
			    <informaltable frame='all'>
			      <tgroup cols='1' align='center'>
				<tbody>
				  <row><entry>Body_Length</entry></row>
				  <row><entry>Body_Data</entry></row>
				</tbody>
			      </tgroup>
			    </informaltable>
			  </para>
			</entry>
		      </row>
		    </tbody>
		  </tgroup>
		</informaltable>
		</para>
	      </entry>
	      <entry><para>Conditional on flag bit B</para><para>(ZZZ compression)</para></entry>
	    </row>
	    <row>
	      <entry morerows='1' valign='middle'><para>Object Footer:</para><para>(not compressible)</para></entry>
	      <entry>Padding</entry>
	      <entry><para>As required to maintain 8-byte</para><para>object boundaries</para></entry>
	    </row>
	    <row>
	      <entry>Magic2</entry>
	      <entry>Required</entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </section>

  </section>




  <itemizedlist>
    <listitem>
      <para>
      </para>
    </listitem>
    <listitem>
      <para>
      </para>
    </listitem>
  </itemizedlist>




  <section>
    <title>How Objects Are Grouped into a Database</title>
    <para>
      
    </para>
  </section>
  <section>
    <title>Details of BRL-CAD-Specific Nongeometric Database Object Types</title>
    <para>
      
    </para>
  </section>
  <section>
    <title>Details of BRL-CAD-Specific Geometric Database Object Types</title>
    <para>
      
    </para>
  </section>
  <section>
    <title>Extensions for Deferred Implementation</title>
    <para>
      
    </para>
  </section>
  <section>
    <title>Community Feedback on the Proposal</title>
    <para>
      
    </para>
  </section>
  <section>
    <title>Database Library Application Programming Interface (API)</title>
    <para>
      
    </para>
  </section>
 
 </article>
