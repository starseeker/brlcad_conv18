<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- lifted from troff+man by doclifter -->
<refentry xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en' xml:id='fedex_plus1'>
<!--  This manual was prepared by United States Government employees as a
 part of their official duties and is, therefore, a work of the U.S.
 Government and not subject to copyright. -->

<!--  $Id$ -->
<refentryinfo><date>19 November 1997</date></refentryinfo>
<refmeta>
<refentrytitle>FEDEX_PLUS</refentrytitle>
<manvolnum>1</manvolnum>
<refmiscinfo class='date'>19 November 1997</refmiscinfo>
</refmeta>
<refnamediv>
<refname>fedex_plus</refname>
<refpurpose>EXPRESS compiler and translater</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv xml:id='synopsis'>
<cmdsynopsis>
  <command>fedex_plus</command>    <arg choice='opt'><replaceable>options</replaceable></arg>
    <arg choice='opt'><replaceable>express-file</replaceable></arg>
    <sbr/>
</cmdsynopsis>
<para>Command Arguments:</para>
<cmdsynopsis>
  <command>options</command>    <arg choice='plain'>- <replaceable>see</replaceable></arg>
    <arg choice='plain'><replaceable>OPTIONS</replaceable></arg>
    <arg choice='plain'><replaceable>below</replaceable></arg>
    <sbr/>
</cmdsynopsis>
<para>    express-file - the name of an EXPRESS file</para>
</refsynopsisdiv>


<refsect1 xml:id='description'><title>DESCRIPTION</title>
<para>fedex_plus is based on the NIST EXPRESS compiler fedex.  fedex_plus
translates an EXPRESS file into C++ code and a class library.  The C++
library includes classes for representing all the types and entities
in the input EXPRESS file, and a dictionary for describing those
classes.  The translation depends on base classes provided in the NIST
STEP Class Library.</para>

<para>fedex_plus does not create C++ representations of the rules,
procedures, or any EXPRESS constructs other than schemas, types and
entities.  It supports multiple schemas contained in a single file and
complex entities.  It generates code which can be integrated with
orbix and ObjectStore.</para>

<para>Combined with the NIST STEP Class Library, the translator provides a
"C++ working form" of an EXPRESS schema.  fedex_plus was designed for
use together with a graphical data editing system (see dataprobe(1)),
but care has been taken to keep fedex_plus separate so that it can be
used as a component of other software systems.</para>

<para>The fedex_plus compiler makes two passes through the EXPRESS file.  In
the first pass fedex_plus reads the syntax of the EXPRESS file and
detects any errors.  In the second pass fedex_plus converts the
EXPRESS code into C++ source code.  The C++ source code is generated
in files in the directory in which fedex_plus was run.  The files are
named according to the schema names in the input EXPRESS file.</para>

</refsect1>

<refsect1 xml:id='options'><title>OPTIONS</title>
<variablelist remap='TP'>
  <varlistentry>
  <term><option>-s|S</option></term>
  <listitem>
<para>Tells fedex_plus to use only single-inheritance, rather than multiple
inheritance.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-c|C</option></term>
  <listitem>
<para>Generates C++ classes for use with CORBA (Orbix).</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-l|L</option></term>
  <listitem>
<para>Prints logging code in the generated C++ classes.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-v</option></term>
  <listitem>
<para>Produces a version description.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-d</option></term>
  <listitem>
<para>Turns on debugging ("-d 0" describes this further).</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-p&lt;object&gt;</option></term>
  <listitem>
<para>Turns on printing when processing certain objects, where &lt;object&gt;
may be,
   - e  entity
   - p  procedure
   - r  rule
   - f  function
   - t  type
   - s  schema or file
   - #  pass #
   - E  everything (all of the above)</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-w&lt;warning&gt;</option></term>
  <listitem>
<para>enable warning</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-i&lt;warning&gt;</option></term>
  <listitem>
<para>disable warning, where &lt;warning&gt; may be,
   - none
   - all
   - circular_subtype
   - circular_select
   - entity_as_type
   - downcast
   - unknown_subtype</para>
<!-- .PD -->

  </listitem>
  </varlistentry>
</variablelist>
<para>If no arguments are given in the command line, a list and description
of the options available are sent to stdout.</para>

</refsect1>

<refsect1 xml:id='output'><title>OUTPUT</title>
<para>fedex_plus sends the following to stdout subject to the options
specified when executed:</para>

<para> - a statement indicating that the Express schema is being 
   compiled</para>

<para> - If errors in input encountered, a detailed list of errors
   and/or warnings including 
         - filename
         - line number
         - description of error/warning</para>

<para> - If no errors encountered,
         - a statement indicating that there were no errors
           in input
         - a statement indicating that the C++ source code
           is being generated
         - any warnings/errors detected while converting to
           C++</para>

</refsect1>

<refsect1 xml:id='see_also'><title>SEE ALSO</title>
<para><citerefentry><refentrytitle>fedex</refentrytitle><manvolnum>1</manvolnum></citerefentry></para>

<para><citerefentry><refentrytitle>dataprobe</refentrytitle><manvolnum>1</manvolnum></citerefentry></para>

<para>mkP<citerefentry><refentrytitle>robe</refentrytitle><manvolnum>1</manvolnum></citerefentry></para>

<para>ISO 10303-11:1994 
<emphasis remap='I'>\Industrial Automation Systems and Integration -- Product Data Representation and Exchange -- Part 11: Description Methods: The EXPRESS Language Reference Manual.</emphasis></para>

<para><emphasis remap='I'>\The NIST EXPRESS Toolkit - Design and Implementation, Engineering Data Management: Key to Success in a Global Market, Proc. of the 1993 ASME Intl. Computers in Engineering Conference,</emphasis>
August 8-12, 1993, San Diego, pp. 167-180.</para>

<para><emphasis remap='I'>\Validation Testing System: Reusable Software Component Design, NISTIR 4937, Morris, K.C., Sauderd, D., Ressler, S., October 1992.</emphasis></para>

<para><emphasis remap='I'>\Architecture for the Validation Testing System Software, NISTIR 4742, Morris, K.C., January 1992. </emphasis></para>

<para><emphasis remap='I'>\The NIST EXPRESS Toolkit: Using Applications, NISTIR 5206, Libes, D., June 1993.</emphasis></para>

<para><emphasis remap='I'>\Fed-X: The NIST EXPRESS Translator, NISTIR 4822, Libes, D., April 1992.</emphasis></para>

</refsect1>

<refsect1 xml:id='note'><title>NOTE</title>
<para>All NISTIR documents may be obtained through the National Technical
Information Service (NTIS), Springfield VA 22161, USA.  Postscript
files may be obtained from the STEP Class Library web page
(http://www.nist.gov/scl), the Manufacturing Systems Integration
Division publications page
(http://www.mel.nist.gov/msidlibrary/pubs.htm) or by anonymous ftp
from ftp.cme.nist.gov (see
pub/subject/sc4/national/usa/nist/docs/readme.txt to determine the
appropriate file to download).</para>

</refsect1>

<refsect1 xml:id='bugs'><title>BUGS</title>
<para>See <citerefentry><refentrytitle>fedex</refentrytitle><manvolnum>1</manvolnum></citerefentry>.</para>
</refsect1>
</refentry>

