<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- lifted from troff+man by doclifter -->
<refentry xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en' xml:id='mkprobe1'>
<!--  This manual was prepared by United States Government employees as a
 part of their official duties and is, therefore, a work of the U.S.
 Government and not subject to copyright.
. "
 $Id$ -->
<refentryinfo><date>23 October 1997</date></refentryinfo>
<refmeta>
<refentrytitle>MKPROBE</refentrytitle>
<manvolnum>1</manvolnum>
<refmiscinfo class='date'>23 October 1997</refmiscinfo>
</refmeta>
<refnamediv>
<refname>mkProbe</refname>
<refpurpose>script file used to generate a Data Probe or Part 21 file reader executable for an EXPRESS schema.</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv xml:id='synopsis'>
<cmdsynopsis>
  <command>mkProbe</command>    
    <arg choice='opt'>-ilsSpP </arg>
    <arg choice='opt'><arg choice='plain'>-R </arg><arg choice='plain'><replaceable>pdes-root</replaceable></arg></arg>
    <arg choice='opt'><arg choice='plain'>-E </arg><arg choice='plain'><replaceable>express-path</replaceable></arg></arg>
    <arg choice='plain'><replaceable>express-file</replaceable></arg>
    <arg choice='plain'><replaceable>schema-name</replaceable></arg>
    <sbr/>
</cmdsynopsis>
</refsynopsisdiv>


<refsect1 xml:id='description'><title>DESCRIPTION</title>
<para>mkProbe enables you to create a C++ library based on an EXPRESS file
and an executable Data Probe or Part 21 file reader application. The
Data Probe allows you to examine, input, and modify a data file
corresponding to an EXPRESS schema.  The Data Probe generated is
specific to the express-file given as the first argument in the
mkProbe command.  The Part 21 file reader simply reads and writes a
Part 21 file and outputs any errors encountered in the file.</para>


<para>The schema-name argument designates a location in which to place the
executable.  The directory selected (see OPTIONS below) is searched
for the schema name provided.  If schema-name does not exist, a
directory will be created using the name provided.  schema-name is
also used as a suffix for the name of the executable.</para>


<para>A new directory is created under the directory from which the script
was run.  fedex_plus is called from this directory to generate the C++
classes to represent the schema information (a.k.a. the Schema Class
Library.)</para> 

<para>The new directory contains the following:</para>
<literallayout remap='.nf'>
<emphasis remap='B'>

1) the source code for the C++ classes generated by fedex_plus using
the first argument,

2) the object files generated from the source code above,

3) the library created from the object files above,

4) your new Data Probe executable (or p21read if the -p option was
used.) 

   i.e. under the directory from which the 
   script was run you will find the
   following executable:

       {schema-name}/dp_{schema-name}
       (or {schema-name}/p21read_{schema-name})
</emphasis>
</literallayout> <!-- .fi.ft R -->

</refsect1>

<refsect1 xml:id='options'><title>OPTIONS</title>
<variablelist remap='TP'>
  <varlistentry>
  <term><option>-i</option></term>
  <listitem>
<para>Indicates that the new Data Probe should be installed into the PDES
root directory.  If -i is not specified the new Data Probe will be
created in the directory from which the mkProbe script is run.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-l</option></term>
  <listitem>
<para>Tells the script to only generate the library for the schema, and
not to create the Data Probe application.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-p</option></term>
<!-- .PD 0 -->
  <term><option>-P</option></term>
  <listitem>
<para>Tells the script to generate the Part 21 file reader for the schema,
rather than the Data Probe application.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-s</option></term>
<!-- .PD 0 -->
  <term><option>-S</option></term>
  <listitem>
<para>Tells fedex_plus to use only single-inheritance, rather than multiple
inheritance.</para>
<!-- .PD -->

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-R</option><replaceable> pdes_root</replaceable></term>
  <listitem>
<para>Set the PDES root directory.  This is the directory that mkProbe will
consider the root of the source tree.</para>

<para>The PDES root directory can also be defined by the environment
variable PDES_ROOT.  This variable should be set using the appropriate
shell command.  For example, C shell users would give the command</para>

<literallayout remap='.nf'>
<emphasis remap='B'>
	setenv PDES_ROOT ~pdes
</emphasis>
</literallayout> <!-- .fi.ft R -->

<para>If the
<option>-r</option>
option is not given, and the PDES_ROOT environment variable is not
set, mkProbe looks for the directory /proj/pdevel to use as the root.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-E</option><replaceable> express-path</replaceable></term>
  <listitem>
<para>Specifies an EXPRESS_PATH environment variable to be used when
fedex_plus is executed in mkProbe.  If this option is not set, mkProbe
will use the current EXPRESS_PATH environment variable.  For more
information, see the documentation on the
<emphasis remap='I'>NIST EXPRESS Toolkit.</emphasis></para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='I'>express-file</emphasis></term>
  <listitem>
<para>The Express file used to create the schema specific Data Probe.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='I'>schema-name</emphasis></term>
  <listitem>
<para>A schema name which is used for naming a new directory and the Data
Probe executable.</para>

  </listitem>
  </varlistentry>
</variablelist>
</refsect1>

<refsect1 xml:id='examples'><title>EXAMPLES</title>
<literallayout remap='.nf'>
<emphasis remap='B'>
Input command line                location and name
----------------------------------------------------
mkProbe part41.exp pt41           ./pt41/dp_pt41
mkProbe -p part41.exp pt41        ./pt41/p21read_pt41
mkProbe -i part41.exp pt41        $PDES_ROOT/arch/Probes/pt41/dp_pt41
</emphasis>


</literallayout></refsect1>

<refsect1 xml:id='output'><title>OUTPUT</title>
<para>If errors are detected, the output generated shows the following:</para>

<para>           - Errors in input</para>

<para>           - Compilation errors</para>

<para>If no errors are encountered, the output generated shows 
the following:</para>

<para>           - The name of the new Data Probe generated</para>

<para>           - Instructions for running Data Probe</para>


</refsect1>

<refsect1 xml:id='see_also'><title>SEE ALSO</title>
<para><citerefentry><refentrytitle>fedex_plus</refentrytitle><manvolnum>1</manvolnum></citerefentry></para>

<para>http://scl.nist.gov</para>

<para>ISO 10303-11:1994 
<emphasis remap='I'>\Industrial Automation Systems and Integration - Product Data Representation and Exchange - Part 11: Description Methods: The EXPRESS Language Reference Manual.</emphasis></para>

<para>Morris, K.C., Sauderd, D., Ressler, S., 
<emphasis remap='I'>\Validation Testing System: Reusable Software Component Design, </emphasis>
NISTIR 4937, National Institute of Standards and Technology, October
1992.</para>

<para>Sauder, D.,
<emphasis remap='I'>\Data Probe Users Guide,</emphasis>
NISTIR 5141, National Institute of Standards and Technology, March
1993.</para>

</refsect1>

<refsect1 xml:id='note'><title>NOTE</title>
<para>All NISTIR documents may be obtained through the National Technical
Information Service (NTIS), Springfield VA 22161, USA or through the
web.  See http://scl.nist.gov for a listing of related
documentation.</para> 
</refsect1>
</refentry>

