<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- lifted from troff+man by doclifter -->
<refentry xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en' xml:id='rlequant1'>
<!--  Copyright (c) 1990, University of Michigan -->
<refmeta>
<refentrytitle>RLEQUANT</refentrytitle>
<manvolnum>1</manvolnum>
<refmiscinfo class='source'>June 12, 1990</refmiscinfo>
<refmiscinfo class='manual'>1</refmiscinfo>
</refmeta>
<refnamediv>
<refname>rlequant</refname>
<refpurpose>variance based color quantization for RLE images</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv xml:id='synopsis'>
<cmdsynopsis>
  <command>rlequant</command>    
    <arg choice='opt'><arg choice='plain'>-b </arg><arg choice='plain'><replaceable>bits</replaceable></arg></arg>
    <arg choice='opt'>-c </arg>
    <arg choice='opt'>-d </arg>
    <arg choice='opt'>-f </arg>
    <arg choice='opt'><arg choice='plain'>-i </arg><arg choice='plain'><replaceable>cubeside</replaceable></arg></arg>
    <arg choice='opt'>-m </arg>
    <arg choice='opt'><arg choice='plain'>-n </arg><arg choice='plain'><replaceable>colors</replaceable></arg></arg>
    <arg choice='opt'><arg choice='plain'>-r </arg><arg choice='plain'><replaceable>mapfile</replaceable></arg></arg>
    <arg choice='opt'><arg choice='plain'>-o </arg><arg choice='plain'><replaceable>outfile</replaceable></arg></arg>
    <arg choice='opt'><replaceable>infile</replaceable></arg>
</cmdsynopsis>
</refsynopsisdiv>


<refsect1 xml:id='description'><title>DESCRIPTION</title>
<para>This program quantizes the colors in an RLE image using a
variance-based method.  See
<citerefentry><refentrytitle>colorquant</refentrytitle><manvolnum>3</manvolnum></citerefentry>
for more details on the method.</para>
<variablelist remap='TP'>
  <varlistentry>
  <term><option>-b</option><replaceable> bits</replaceable></term>
  <listitem>
<para>The colors in the input image will be "prequantized" to this many bits
before applying the variance-based method.  Two internal tables of
size
<emphasis remap='B'>2^(3*</emphasis>bits<emphasis remap='B'>)</emphasis>
are allocated, so values of
<emphasis remap='I'>bits</emphasis>
greater than 6 are likely to cause thrashing or may prevent the
program from running at all.  The default value of
<emphasis remap='I'>bits</emphasis>
is 5.  It must be less than or equal to 8 and greater than 0.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-c</option></term>
  <listitem>
<para>Only the color map will be output; the image will not be digitized.
The output file will be a 0x0
<emphasis remap='I'>RLE</emphasis>
file with a color map, suitable for input to
<citerefentry><refentrytitle>rleldmap</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
<citerefentry><refentrytitle>rledither</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
or
<userinput>rlequant -r</userinput>.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-d</option></term>
  <listitem>
<para>Floyd Steinberg dithering is performed on the output.  This is very helpful
for images being quantized to a small number of colors.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-f</option></term>
  <listitem>
<para>If this option is specified, a faster approximation will be used.  In
most cases, the error so introduced will be barely noticeable.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-i</option><replaceable> cubeside</replaceable></term>
  <listitem>
<para>Initializes the output color map with a "color cube" of size
<emphasis remap='I'>cubeside</emphasis>^3.  I.e., if <option>-i 2</option> were specified, the 8 corners of the
color cube (black, red, green, blue, yellow, cyan, magenta, white)
would be added to the output colormap.  This reduces the number of
colors available for quantization.  The color cube will be used to
quantize the output image, but will not otherwise affect the choice of
representative colors.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-m</option></term>
  <listitem>
<para>Computes a single color map suitable for quantizing all the input
images.  This is useful when the quantized images will be used as a
"movie" (e.g., with the
<option>-m</option>
flag of
<citerefentry><refentrytitle>getx11</refentrytitle><manvolnum>1</manvolnum></citerefentry>).
The input may not come from a pipe when this option is specified,
unless
<option>-c</option>
is also specified.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-n</option><replaceable> colors</replaceable></term>
  <listitem>
<para>The output image will be quantized to at most
<emphasis remap='I'>colors</emphasis>
colors.  It might have fewer if the input image has only a few colors
itself.  The default value of
<emphasis remap='I'>colors</emphasis>
is 256 - <emphasis remap='I'>cubesize</emphasis>^3 - <emphasis remap='I'>mapsize</emphasis>.  It must be less than or
equal to 256.  If a color cube (<option>-c</option>) or an input map (<option>-r</option>)
is given, <emphasis remap='I'>colors</emphasis> may be 0; otherwise it must be greater than 0.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-r</option><replaceable> mapfile</replaceable></term>
  <listitem>
<para>The color map from the RLE file <filename>mapfile</filename> will be added to the
output color map.  The number of colors in the input color map,
<emphasis remap='I'>mapsize</emphasis> is calculated as follows: If a <emphasis remap='I'>color_map_length</emphasis>
comment is present in <emphasis remap='I'>mapfile</emphasis>, its value is used.  If not, the
size of the color map (usually 256) is used (the <citerefentry><refentrytitle>rlehdr</refentrytitle><manvolnum>1</manvolnum></citerefentry>
program will display the color map size and the comment, if present).
The input color map will be used to quantize the output image, but
will not otherwise affect the choice of representative colors.  If the
combination <option>-n 0 -r mapfile</option> is specified, then <command>rlequant</command>
will just quantize (and dither, if requested) the input images to the
given colormap.  This is usually faster than using <emphasis remap='I'>rledither</emphasis>.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-o</option><replaceable> outfile</replaceable></term>
  <listitem>
<para>The output will be written to the file
<emphasis remap='I'>outfile</emphasis>.
If not specified, or if
<emphasis remap='I'>outfile</emphasis>
is "-", the output will be written to the standard output stream.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='I'>infile</emphasis></term>
  <listitem>
<para>This file contains one or more concatenated RLE images.  Each will be
processed in turn.  A separate quantization map will be constructed
for each image.  If not specified, or if
<emphasis remap='I'>infile</emphasis>
is "-", the image(s) will be read from the standard input stream.</para>
  </listitem>
  </varlistentry>
</variablelist>
</refsect1>

<refsect1 xml:id='examples'><title>EXAMPLES</title>
<variablelist remap='TP'>
  <varlistentry>
  <term>rlequant file.rle</term>
  <listitem>
<para>Quantizes <emphasis remap='I'>file.rle</emphasis> to 256 colors using a 5-bit pre-quantization.
If <emphasis remap='I'>file.rle</emphasis> has multiple images, each will get its own
(different) colormap.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term>rlequant -m file.rle</term>
  <listitem>
<para>Quantizes <emphasis remap='I'>file.rle</emphasis> to 256 colors using a 5-bit pre-quantization.
If <emphasis remap='I'>file.rle</emphasis> has multiple images, they will all be used to choose
the color map, and will all be quantized to the same color map.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term>cat *.rle | rlequant -m -c &gt;map.rle ;</term>
  <listitem>
<para>	cat *.rle | rlequant -n 0 -r map.rle
<!-- .br -->
Computes a single colormap based on all the images in the files
<emphasis remap='I'>*.rle</emphasis>, then quantizes each image to that color map.  The output
is the stream of quantized images.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term>rlequant -i 4 -d file.rle</term>
  <listitem>
<para>Compute 192 representative colors for each image in <emphasis remap='I'>file.rle</emphasis>,
add a 4x4x4 color cube to the resulting color map, and then quantize
the image to the resulting set of colors with dithering.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term>rlequant -b 6 file.rle</term>
  <listitem>
<para>Quantize file.rle to 256 colors using a 6-bit prequantization.  This
provides slightly more precision in color matching than does a 5-bit
prequantization.  It also runs significantly slower and requires
approximately 8 times the memory for its intermediate storage.</para>
  </listitem>
  </varlistentry>
</variablelist>
</refsect1>

<refsect1 xml:id='see_also'><title>SEE ALSO</title>
<!-- .na -->
<para><citerefentry><refentrytitle>mcut</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
<citerefentry><refentrytitle>rledither</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
<citerefentry><refentrytitle>rlehdr</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
<citerefentry><refentrytitle>urt</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
<citerefentry><refentrytitle>colorquant</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
<citerefentry><refentrytitle>RLE</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</para>
<!-- .ad b -->
</refsect1>

<refsect1 xml:id='author'><title>AUTHOR</title>
<para>Spencer W. Thomas
<!-- .br -->
Craig Kolb (Yale University) wrote the color quantization code.
<!-- .br -->
Rod Bogart wrote the dithering code.</para>
</refsect1>
</refentry>

