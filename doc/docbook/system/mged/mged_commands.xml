<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"../../resources/standard/dtd/docbookx.dtd">
<article>
  <articleinfo>
    <title>MGED User Commands</title>

    <legalnotice>
      <para>Approved for public release; distribution is unlimited.</para>
    </legalnotice>

  </articleinfo>

  <sect1>
    <title>MGED User Command Table</title>

    <para id="mged_user_cmd_table">
      The MGED environment defines a large number of commands providing
      access to various types of functionality.  This table lists all available
      commands:
 
     <informaltable>
       <tgroup cols='5'>
	 <tbody>
	   <row>
	     <entry>%</entry>
	     <entry>3ptarb</entry>
	     <entry>?</entry>
	     <entry>?devel</entry>
	     <entry>?lib</entry>
	   </row>
	   <row>
	     <entry>B</entry>
	     <entry>E</entry>
	     <entry>M</entry>
	     <entry>Z</entry>
	     <entry>adc</entry>
	   </row>
	   <row>
	     <entry>ae</entry>
	     <entry>analyze</entry>
	     <entry>animate</entry>
	     <entry>apropos</entry>
	     <entry>aproposdevel</entry>
	   </row>
	   <row>
	     <entry>aproposlib</entry>
	     <entry>arb</entry>
	     <entry>arced</entry>
	     <entry>area</entry>
	     <entry>arot</entry>
	   </row>
	   <row>
	     <entry>attach</entry>
	     <entry>bev</entry>
	     <entry>c</entry>
	     <entry>cat</entry>
	     <entry>center</entry>
	   </row>
	   <row>
	     <entry>color</entry>
	     <entry>comb</entry>
	     <entry>comb_color</entry>
	     <entry>copyeval</entry>
	     <entry>copymat</entry>
	   </row>
	   <row>
	     <entry>cp</entry>
	     <entry>cpi</entry>
	     <entry>d</entry>
	     <entry>dall</entry>
	     <entry>db</entry>
	   </row>
	   <row>
	     <entry>db_glob</entry>
	     <entry>dbconcat</entry>
	     <entry>debugbu</entry>
	     <entry>debugdir</entry>
	     <entry>debuglib</entry>
	   </row>
	   <row>
	     <entry>debugmem</entry>
	     <entry>debugnmg</entry>
	     <entry>decompose</entry>
	     <entry>delay</entry>
	     <entry>dm</entry>
	   </row>
	   <row>
	     <entry>draw</entry>
	     <entry>dup</entry>
	     <entry>e</entry>
	     <entry>eac</entry>
	     <entry>echo</entry>
	   </row>
	   <row>
	     <entry>edcodes</entry>
	     <entry>edcolor</entry>
	     <entry>edcomb</entry>
	     <entry>edgedir</entry>
	     <entry>edmater</entry>
	   </row>
	   <row>
	     <entry>eqn</entry>
	     <entry>erase</entry>
	     <entry>erase_all</entry>
	     <entry>ev</entry>
	     <entry>exit</entry>
	   </row>
	   <row>
	     <entry>expand</entry>
	     <entry>extrude</entry>
	     <entry>eye_pt</entry>
	     <entry>e_muves</entry>
	     <entry>facedef</entry>
	   </row>
	   <row>
	     <entry>facetize</entry>
	     <entry>find</entry>
	     <entry>fracture</entry>
	     <entry>g</entry>
	     <entry>garbage_collect</entry>
	   </row>
	   <row>
	     <entry>gui</entry>
	     <entry>help</entry>
	     <entry>helpdevel</entry>
	     <entry>helplib</entry>
	     <entry>history</entry>
	   </row>
	   <row>
	     <entry>i</entry>
	     <entry>idents</entry>
	     <entry>ill</entry>
	     <entry>in</entry>
	     <entry>inside</entry>
	   </row>
	   <row>
	     <entry>item</entry>
	     <entry>joint</entry>
	     <entry>journal</entry>
	     <entry>keep</entry>
	     <entry>keypoint</entry>
	   </row>
	   <row>
	     <entry>kill</entry>
	     <entry>killall</entry>
	     <entry>killtree</entry>
	     <entry>knob</entry>
	     <entry>l</entry>
	   </row>
	   <row>
	     <entry>labelvert</entry>
	     <entry>listeval</entry>
	     <entry>loadtk</entry>
	     <entry>lookat</entry>
	     <entry>ls</entry>
	   </row>
	   <row>
	     <entry>l_muves</entry>
	     <entry>make</entry>
	     <entry>make_bb</entry>
	     <entry>mater</entry>
	     <entry>matpick</entry>
	   </row>
	   <row>
	     <entry>memprint</entry>
	     <entry>mirface</entry>
	     <entry>mirror</entry>
	     <entry>mrot</entry>
	     <entry>mv</entry>
	   </row>
	   <row>
	     <entry>mvall</entry>
	     <entry>nirt</entry>
	     <entry>nmg_collapse</entry>
	     <entry>nmg_simplify</entry>
	     <entry>oed</entry>
	   </row>
	   <row>
	     <entry>opendb</entry>
	     <entry>orientation</entry>
	     <entry>orot</entry>
	     <entry>oscale</entry>
	     <entry>overlay</entry>
	   </row>
	   <row>
	     <entry>p</entry>
	     <entry>pathlist</entry>
	     <entry>paths</entry>
	     <entry>permute</entry>
	     <entry>pl</entry>
	   </row>
	   <row>
	     <entry>plot</entry>
	     <entry>polyb</entry>
	     <entry>pov</entry>
	     <entry>prcolor</entry>
	     <entry>prefix</entry>
	   </row>
	   <row>
	     <entry>press</entry>
	     <entry>preview</entry>
	     <entry>prj_add</entry>
	     <entry>ps</entry>
	     <entry>push</entry>
	   </row>
	   <row>
	     <entry>putmat</entry>
	     <entry>q</entry>
	     <entry>qorot</entry>
	     <entry>qray</entry>
	     <entry>query_ray</entry>
	   </row>
	   <row>
	     <entry>quit</entry>
	     <entry>qvrot</entry>
	     <entry>r</entry>
	     <entry>rcodes</entry>
	     <entry>read_muves</entry>
	   </row>
	   <row>
	     <entry>red</entry>
	     <entry>redraw_vlist</entry>
	     <entry>refresh</entry>
	     <entry>regdebug</entry>
	     <entry>regdef</entry>
	   </row>
	   <row>
	     <entry>regions</entry>
	     <entry>release</entry>
	     <entry>rfarb</entry>
	     <entry>rm</entry>
	     <entry>rmater</entry>
	   </row>
	   <row>
	     <entry>rmats</entry>
	     <entry>rot</entry>
	     <entry>rotobj</entry>
	     <entry>rrt</entry>
	     <entry>rt</entry>
	   </row>
	   <row>
	     <entry>rtcheck</entry>
	     <entry>savekey</entry>
	     <entry>saveview</entry>
	     <entry>sca</entry>
	     <entry>sed</entry>
	   </row>
	   <row>
	     <entry>setview</entry>
	     <entry>shader</entry>
	     <entry>shells</entry>
	     <entry>showmats</entry>
	     <entry>size</entry>
	   </row>
	   <row>
	     <entry>solids</entry>
	     <entry>status</entry>
	     <entry>summary</entry>
	     <entry>sv</entry>
	     <entry>sync</entry>
	   </row>
	   <row>
	     <entry>t</entry>
	     <entry>ted</entry>
	     <entry>title</entry>
	     <entry>tol</entry>
	     <entry>tops</entry>
	   </row>
	   <row>
	     <entry>tor-rcc</entry>
	     <entry>tra</entry>
	     <entry>track</entry>
	     <entry>translate</entry>
	     <entry>tree</entry>
	   </row>
	   <row>
	     <entry>t_muves</entry>
	     <entry>units</entry>
	     <entry>vars</entry>
	     <entry>vdraw</entry>
	     <entry>view</entry>
	   </row>

	   <row>
	     <entry>viewsize</entry>
	     <entry>vnirt</entry>
	     <entry>vquery_ray</entry>
	     <entry>vrmgr</entry>
	     <entry>vrot</entry>
	   </row>
	   <row>
	     <entry>wcodes</entry>
	     <entry>whatid</entry>
	     <entry>which_shader</entry>
	     <entry>whichair</entry>
	     <entry>whichid</entry>
	   </row>
	   <row>
	     <entry>who</entry>
	     <entry>wmater</entry>
	     <entry>x</entry>
	     <entry>xpush</entry>
	     <entry>zoom</entry>
	   </row>
	 </tbody>
       </tgroup>
     </informaltable>
   </para>
 </sect1>
 
 <glossary>
   <title>MGED User Command Glossary - Explanations and Examples</title>
   <glossdiv>
     <title>%-?</title>

     <glossentry>
       <glossterm><command>%</command></glossterm>
       <glossdef>
	 <para>
	   Start a "/bin/sh" shell process for the user. The 
	   <command>mged</command> prompt will be replaced by asystem prompt 
	   for the shell, and the user may perform any legal shell commands. 
	   The <command>mged</command>  process waits for
	   the shell process to finish, which occurs when the user exits
	   the shell. This only works in a command window associated with a tty 
	   (i.e., the window used to start <command>mged</command> in classic mode).
	 </para>
	 <example>
	   <title>Using <command>%</command></title>
	   <screen>
mged> <command>%</command>
-- Start a new shell process.

$ <command>ls -al</command>
-- Issue any shell commands.

$ <command>exit</command>
-- Exit the shell.

mged>
-- Continue editing in mged.
	   </screen>
	 </example>
       </glossdef>
      </glossentry>

     <glossentry>
       <glossterm>
	 <cmdsynopsis>
	   <command>3ptarb</command>
	   <arg>arb_name</arg>
	   <arg>x1</arg>
	   <arg>y1</arg>
	   <arg>z1</arg>
	   <arg>x2</arg>
	   <arg>y2</arg>
	   <arg>z2</arg>
	   <arg>x3</arg>
	   <arg>y3</arg>
	   <arg>z3</arg>
	   <group>
	     <arg>x</arg>
	     <arg>y</arg>
	     <arg>z</arg>
	   </group>
	   <arg>coord1</arg>
	   <arg>coord2</arg>
	   <arg>thickness</arg>
	 </cmdsynopsis>
       </glossterm>
       <glossdef>
	 <para>
	   Build an ARB8 shape by extruding a quadrilateral through a given thickness. The
arguments may be provided on the command line; if they are not, they will be
prompted for. The x1, y1, and z1 arguments are the coordinates of one corner of the
quadrilateral. x2, y2, z2, and x3, y3, z3 are the coordinates of two other corners. Only
two coordinates of the fourth point are specified, and the code calculates the third
coordinate to ensure all four points are coplanar. The x|y|z parameter indicates which
coordinate of the fourth point will be calculated by the code. The coord1 and coord2
parameters supply the other two coordinates. The direction of extrusion for the
quadrilateral is determined from the order of the four resulting points by the righthand
rule; the quadrilateral is extruded toward a viewer for whom the points appear in
counter-clockwise order.
	 </para>
	 <example>
	   <title><command>3ptarb</command></title>
	   <screen>
mged> <command>3ptarb</command>
-- Start the 3ptarb command.

Enter name for this arb: <emphasis>thing</emphasis>
-- The new ARB8 will be named thing.

Enter X, Y, Z for point 1: <emphasis>0 0 0</emphasis>
-- Point one is at the origin.

Enter X, Y, Z for point 2: <emphasis>1 0 0</emphasis>
-- Point two is at (1, 0, 0).

Enter X, Y, Z for point 3: <emphasis>1 1 0</emphasis>
-- Point three is at (1, 1, 0).

Enter coordinate to solve for (x, y, or z): <emphasis>z</emphasis>
-- The code will calculate the z coordinate of the fourth point.

Enter the X, Y coordinate values: <emphasis>0 1</emphasis>
-- The x and y coordinates of the fourth point are 0 and 1.

Enter thickness for this arb: <emphasis>3</emphasis>
-- The new ARB8 will be 3 units thick.

mged> <command>3ptarb thing 0 0 0 1 0 0 1 1 0 z 0 1 3</command>
-- Same as above example, but with all arguments supplied on the command line.
	   </screen>
	 </example>
       </glossdef>
      </glossentry>

     <glossentry>
       <glossterm></glossterm>
       <glossdef>
	 <para>
	 </para>
	 <example>
	   <title><command></command></title>
	   <screen>
	   </screen>
	 </example>
       </glossdef>
      </glossentry>

     <glossentry>
       <glossterm></glossterm>
       <glossdef>
	 <para>
	 </para>
	 <example>
	   <title><command></command></title>
	   <screen>
	   </screen>
	 </example>
       </glossdef>
      </glossentry>

     <glossentry>
       <glossterm></glossterm>
       <glossdef>
	 <para>
	 </para>
	 <example>
	   <title><command></command></title>
	   <screen>
	   </screen>
	 </example>
       </glossdef>
      </glossentry>


   </glossdiv>

   <glossdiv>
     <title>A-Z</title>

     <glossentry>
       <glossterm>B</glossterm>
       <glossdef>
	 <para>
	 </para>
	 <example>
	   <title><command>B</command></title>
	   <screen>
	   </screen>
	 </example>
       </glossdef>
      </glossentry>

     <glossentry>
       <glossterm></glossterm>
       <glossdef>
	 <para>
	 </para>
	 <example>
	   <title><command></command></title>
	   <screen>
	   </screen>
	 </example>
       </glossdef>
      </glossentry>


   </glossdiv>

   <glossdiv>
     <title>a-c</title>

      <glossentry>
       <glossterm>adc</glossterm>
       <glossdef>
	 <para>
	 </para>
	 <example>
	   <title><command>adc</command></title>
	   <screen>
	   </screen>
	 </example>
       </glossdef>
      </glossentry>

   </glossdiv>

   <glossdiv>
     <title>d-e</title>

     <glossentry>
       <glossterm>d</glossterm>
       <glossdef>
	 <para>
	 </para>
	 <example>
	   <title><command>d</command></title>
	   <screen>
	   </screen>
	 </example>
       </glossdef>
      </glossentry>

   </glossdiv>
   <glossdiv>
     <title>f-k</title>

     <glossentry>
       <glossterm>facedef</glossterm>
       <glossdef>
	 <para>
	 </para>
	 <example>
	   <title><command>facedef</command></title>
	   <screen>
	   </screen>
	 </example>
       </glossdef>
      </glossentry>

   </glossdiv>
   <glossdiv>
     <title>l-o</title>

      <glossentry>
       <glossterm>l</glossterm>
       <glossdef>
	 <para>
	 </para>
	 <example>
	   <title><command>l</command></title>
	   <screen>
	   </screen>
	 </example>
       </glossdef>
      </glossentry>


   </glossdiv>

   <glossdiv>
     <title>p-r</title>

     <glossentry>
       <glossterm>p</glossterm>
       <glossdef>
	 <para>
	 </para>
	 <example>
	   <title><command>p</command></title>
	   <screen>
	   </screen>
	 </example>
       </glossdef>
      </glossentry>

   </glossdiv>


   <glossdiv>
     <title>s-t</title>

     <glossentry>
       <glossterm>savekey</glossterm>
       <glossdef>
	 <para>
	 </para>
	 <example>
	   <title><command>savekey</command></title>
	   <screen>
	   </screen>
	 </example>
       </glossdef>
      </glossentry>


   </glossdiv>

   <glossdiv>
     <title>u-z</title>

     <glossentry>
       <glossterm>units</glossterm>
       <glossdef>
	 <para>
	 </para>
	 <example>
	   <title><command>units</command></title>
	   <screen>
	   </screen>
	 </example>
       </glossdef>
      </glossentry>

   </glossdiv>

 </glossary>

</article>
