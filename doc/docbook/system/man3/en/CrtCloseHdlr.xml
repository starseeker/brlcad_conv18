<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- lifted from troff+man+tkman by doclifter -->
<refentry xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en' xml:id='crtclosehdlr3'>

<!-- '\" Copyright (c) 1994\-1996 Sun Microsystems, Inc. -->

<!-- '\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES. -->

<!-- '\" RCS: @(#) $Id$ -->
<refentryinfo><date>7.5</date></refentryinfo>
<refmeta>
<refentrytitle>Tcl_CreateCloseHandler</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo class='date'>7.5</refmiscinfo>
<refmiscinfo class='source'>Tcl</refmiscinfo>
<refmiscinfo class='manual'>Tcl Library Procedures</refmiscinfo>
</refmeta>
<refnamediv>
<refname>Tcl_CreateCloseHandler</refname>
<refname>Tcl_DeleteCloseHandler</refname>
<refpurpose>arrange for callbacks when channels are closed</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv xml:id='synopsis'>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;tcl.h&gt;

</funcsynopsisinfo>
<funcprototype>
<funcdef>void <function>Tcl_CreateCloseHandler</function></funcdef>
<paramdef><parameter>channel</parameter></paramdef>
<paramdef><parameter>proc</parameter></paramdef>
<paramdef><parameter>clientData</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>void <function>Tcl_DeleteCloseHandler</function></funcdef>
<paramdef><parameter>channel</parameter></paramdef>
<paramdef><parameter>proc</parameter></paramdef>
<paramdef><parameter>clientData</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>


<refsect1 xml:id='arguments'><title>ARGUMENTS</title>
<!-- .AS Tcl_CloseProc clientData -->
<informaltable>
<tgroup cols='3'>
<tbody>

<row><entry>"Tcl_Channel"</entry><entry>"channel"</entry><entry>"in"</entry>
<entry>
<para>The channel for which to create or delete a close callback.</para>
</entry>
</row>
<row><entry>Tcl_CloseProc</entry><entry>*proc</entry><entry>in</entry>
<entry>
<para>The procedure to call as the callback.</para>
</entry>
</row>
<row><entry>ClientData</entry><entry>clientData</entry><entry>in</entry>
<entry>
<para>Arbitrary one-word value to pass to <emphasis remap='I'>proc</emphasis>.</para>
<!-- .BE -->
</entry>
</row>
</tbody>
</tgroup>
</informaltable>

</refsect1>

<refsect1 xml:id='description'><title>DESCRIPTION</title>
<para><function>Tcl_CreateCloseHandler</function> arranges for <emphasis remap='I'>proc</emphasis> to be called when
<emphasis remap='I'>channel</emphasis> is closed with <emphasis remap='B'>Tcl_Close</emphasis> or
<emphasis remap='B'>Tcl_UnregisterChannel</emphasis>, or using the Tcl <emphasis remap='B'>close</emphasis> command.
<emphasis remap='I'>Proc</emphasis> should match the following prototype:</para>

<programlisting remap='CS'>
<funcsynopsis>
<funcprototype>
<funcdef>typedef void <function>Tcl_CloseProc</function></funcdef>
    <paramdef>ClientData <parameter>clientData</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</programlisting> <!-- remap='CE' -->
<para>The <varname role='parameter'>clientData</varname> is the same as the value provided in the call to
<function>Tcl_CreateCloseHandler</function>.</para>

<para><function>Tcl_DeleteCloseHandler</function> removes a close callback for <emphasis remap='I'>channel</emphasis>.
The <emphasis remap='I'>proc</emphasis> and <varname role='parameter'>clientData</varname> identify which close callback to
remove; <function>Tcl_DeleteCloseHandler</function> does nothing if its <emphasis remap='I'>proc</emphasis> and
<varname role='parameter'>clientData</varname> arguments do not match the <emphasis remap='I'>proc</emphasis> and <varname role='parameter'>clientData</varname>
for a  close handler for <emphasis remap='I'>channel</emphasis>.</para>

</refsect1>

<refsect1 xml:id='see_also'><title>SEE ALSO</title>
<para>close(n), Tcl_C<citerefentry><refentrytitle>lose</refentrytitle><manvolnum>3</manvolnum></citerefentry>, Tcl_UnregisterC<citerefentry><refentrytitle>hannel</refentrytitle><manvolnum>3</manvolnum></citerefentry></para>

</refsect1>

<refsect1 xml:id='keywords'><title>KEYWORDS</title>
<para>callback, channel closing</para>
</refsect1>
</refentry>

