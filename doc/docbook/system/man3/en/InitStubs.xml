<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- lifted from troff+man+tkman by doclifter -->
<refentry xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en' xml:id='initstubs3'>

<!-- '\" Copyright (c) 1998\-1999 Scriptics Corporation -->

<!-- '\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES.
'\" 
'\" RCS: @(#) $Id$
'\"  -->
<refentryinfo><date>8.1</date></refentryinfo>
<refmeta>
<refentrytitle>Tcl_InitStubs</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo class='date'>8.1</refmiscinfo>
<refmiscinfo class='source'>Tcl</refmiscinfo>
<refmiscinfo class='manual'>Tcl Library Procedures</refmiscinfo>
</refmeta>
<refnamediv>
<refname>Tcl_InitStubs</refname>
<refpurpose>initialize the Tcl stubs mechanism</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv xml:id='synopsis'>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;tcl.h&gt;

</funcsynopsisinfo>
<funcprototype>
<funcdef>const char *<function>Tcl_InitStubs</function></funcdef>
<paramdef><parameter>interp</parameter></paramdef>
<paramdef><parameter>version</parameter></paramdef>
<paramdef><parameter>exact</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>


<refsect1 xml:id='arguments'><title>ARGUMENTS</title>
<!-- .AS Tcl_Interp *interp -->
<informaltable>
<tgroup cols='3'>
<tbody>

<row><entry>"Tcl_Interp"</entry><entry>"*interp"</entry><entry>"in"</entry>
<entry>
<para>Tcl interpreter handle.</para>
</entry>
</row>
<row><entry>"const char"</entry><entry>*version</entry><entry>in</entry>
<entry>
<para>A version string consisting of one or more decimal numbers
separated by dots.</para>
</entry>
</row>
<row><entry>int</entry><entry>exact</entry><entry>in</entry>
<entry>
<para>Non-zero means that only the particular version specified by
<emphasis remap='I'>version</emphasis> is acceptable.
Zero means that versions newer than <emphasis remap='I'>version</emphasis> are also
acceptable as long as they have the same major version number
as <emphasis remap='I'>version</emphasis>.</para>
<!-- .BE -->
</entry>
</row>
</tbody>
</tgroup>
</informaltable>

</refsect1>

<refsect1 xml:id='introduction'><title>INTRODUCTION</title>
<para>The Tcl stubs mechanism defines a way to dynamically bind
extensions to a particular Tcl implementation at run time.
This provides two significant benefits to Tcl users:</para>
<variablelist remap='IP'>
  <varlistentry>
  <term>1)</term>
  <listitem>
<para>Extensions that use the stubs mechanism can be loaded into
multiple versions of Tcl without being recompiled or
relinked.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term>2)</term>
  <listitem>
<para>Extensions that use the stubs mechanism can be dynamically
loaded into statically-linked Tcl applications.</para>
  </listitem>
  </varlistentry>
</variablelist>

<para>The stubs mechanism accomplishes this by exporting function tables
that define an interface to the Tcl API.  The extension then accesses
the Tcl API through offsets into the function table, so there are no
direct references to any of the Tcl library's symbols.  This
redirection is transparent to the extension, so an extension writer
can continue to use all public Tcl functions as documented.</para>

<para>The stubs mechanism requires no changes to applications incorporating
Tcl interpreters.  Only developers creating C-based Tcl extensions
need to take steps to use the stubs mechanism with their extensions.</para>

<para>Enabling the stubs mechanism for an extension requires the following
steps:</para>
<variablelist remap='IP'>
  <varlistentry>
  <term>1)</term>
  <listitem>
<para>Call <function>Tcl_InitStubs</function> in the extension before calling any other
Tcl functions.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term>2)</term>
  <listitem>
<para>Define the <emphasis remap='B'>USE_TCL_STUBS</emphasis> symbol.  Typically, you would include the
<option>-DUSE_TCL_STUBS</option> flag when compiling the extension.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term>3)</term>
  <listitem>
<para>Link the extension with the Tcl stubs library instead of the standard
Tcl library.  On Unix platforms, the library name is
<emphasis remap='I'>libtclstub8.1.a</emphasis>; on Windows platforms, the library name is
<emphasis remap='I'>tclstub81.lib</emphasis>.</para>
  </listitem>
  </varlistentry>
</variablelist>

<para>If the extension also requires the Tk API, it must also call
<emphasis remap='B'>Tk_InitStubs</emphasis> to initialize the Tk stubs interface and link
with the Tk stubs libraries.  See the <emphasis remap='B'>Tk_InitStubs</emphasis> page for
more information.</para>
</refsect1>

<refsect1 xml:id='description'><title>DESCRIPTION</title>
<para><function>Tcl_InitStubs</function> attempts to initialize the stub table pointers
and ensure that the correct version of Tcl is loaded.  In addition
to an interpreter handle, it accepts as arguments a version number
and a Boolean flag indicating whether the extension requires
an exact version match or not.  If <emphasis remap='I'>exact</emphasis> is 0, then the
extension is indicating that newer versions of Tcl are acceptable
as long as they have the same major version number as <emphasis remap='I'>version</emphasis>;
non-zero means that only the specified <emphasis remap='I'>version</emphasis> is acceptable.
<function>Tcl_InitStubs</function> returns a string containing the actual version
of Tcl satisfying the request, or NULL if the Tcl version is not
acceptable, does not support stubs, or any other error condition occurred.</para>
</refsect1>

<refsect1 xml:id='see_also'><title>SEE ALSO</title>
<para>Tk_InitStubs</para>
</refsect1>

<refsect1 xml:id='keywords'><title>KEYWORDS</title>
<para>stubs</para>
</refsect1>
</refentry>

