<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- lifted from troff+man+tkman by doclifter -->
<refentry xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en' xml:id='windowid3'>

<!-- '\" Copyright (c) 1990\-1993 The Regents of the University of California.
'\" Copyright (c) 1994\-1997 Sun Microsystems, Inc. -->

<!-- '\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES.
'\" 
'\" RCS: @(#) $Id$
'\"  -->
<refentryinfo><date>8.4</date></refentryinfo>
<refmeta>
<refentrytitle>Tk_WindowId</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo class='date'>8.4</refmiscinfo>
<refmiscinfo class='source'>Tk</refmiscinfo>
<refmiscinfo class='manual'>Tk Library Procedures</refmiscinfo>
</refmeta>
<refnamediv>
<refname>Tk_WindowId</refname>
<refname>Tk_Parent</refname>
<refname>Tk_Display</refname>
<refname>Tk_DisplayName</refname>
<refname>Tk_ScreenNumber</refname>
<refname>Tk_Screen</refname>
<refname>Tk_X</refname>
<refname>Tk_Y</refname>
<refname>Tk_Width</refname>
<refname>Tk_Height</refname>
<refname>Tk_Changes</refname>
<refname>Tk_Attributes</refname>
<refname>Tk_IsContainer</refname>
<refname>Tk_IsEmbedded</refname>
<refname>Tk_IsMapped</refname>
<refname>Tk_IsTopLevel</refname>
<refname>Tk_ReqWidth</refname>
<refname>Tk_ReqHeight</refname>
<refname>Tk_MinReqWidth</refname>
<refname>Tk_MinReqHeight</refname>
<refname>Tk_InternalBorderLeft</refname>
<refname>Tk_InternalBorderRight</refname>
<refname>Tk_InternalBorderTop</refname>
<refname>Tk_InternalBorderBottom</refname>
<refname>Tk_Visual</refname>
<refname>Tk_Depth</refname>
<refname>Tk_Colormap</refname>
<refname>Tk_Interp</refname>
<refpurpose>retrieve information from Tk's local data structure</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv xml:id='synopsis'>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;tk.h&gt;

</funcsynopsisinfo>
<funcprototype>
<funcdef>Window <function>Tk_WindowId</function></funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>Tk_Window <function>Tk_Parent</function></funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef><function>Display</function> *Tk_Display</funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>const char *<function>Tk_DisplayName</function></funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tk_ScreenNumber</function></funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef><function>Screen</function> *Tk_Screen</funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tk_X</function></funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tk_Y</function></funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tk_Width</function></funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tk_Height</function></funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef><function>XWindowChanges</function> *Tk_Changes</funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef><function>XSetWindowAttributes</function> *Tk_Attributes</funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tk_IsContainer</function></funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tk_IsEmbedded</function></funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tk_IsMapped</function></funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tk_IsTopLevel</function></funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tk_ReqWidth</function></funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tk_ReqHeight</function></funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tk_MinReqWidth</function></funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tk_MinReqHeight</function></funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tk_InternalBorderLeft</function></funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tk_InternalBorderRight</function></funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tk_InternalBorderTop</function></funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tk_InternalBorderBottom</function></funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef><function>Visual</function> *Tk_Visual</funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tk_Depth</function></funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>Colormap <function>Tk_Colormap</function></funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef><function>Tcl_Interp</function> *Tk_Interp</funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>


<refsect1 xml:id='arguments'><title>ARGUMENTS</title>
<!-- .AS Tk_Window tkwin -->
<informaltable>
<tgroup cols='3'>
<tbody>

<row><entry>"Tk_Window"</entry><entry>"tkwin"</entry><entry>"in"</entry>
<entry>
<para>Token for window.</para>
<!-- .BE -->
</entry>
</row>
</tbody>
</tgroup>
</informaltable>

</refsect1>

<refsect1 xml:id='description'><title>DESCRIPTION</title>
<para><function>Tk_WindowId</function> and the other names listed above are
all macros that return fields from Tk's local data structure
for <emphasis remap='I'>tkwin</emphasis>.  None of these macros requires any
interaction with the server;  it is safe to assume that
all are fast.</para>

<para><function>Tk_WindowId</function> returns the X identifier for <emphasis remap='I'>tkwin</emphasis>,
or <emphasis remap='B'>NULL</emphasis> if no X window has been created for <emphasis remap='I'>tkwin</emphasis>
yet.</para>

<para><function>Tk_Parent</function> returns Tk's token for the logical parent of
<emphasis remap='I'>tkwin</emphasis>.  The parent is the token that was specified when
<emphasis remap='I'>tkwin</emphasis> was created, or NULL for main windows.</para>

<para><emphasis remap='B'>Tk_Interp</emphasis> returns the Tcl interpreter associated with a
<emphasis remap='I'>tkwin</emphasis> or NULL if there is an error.</para>

<para><emphasis remap='B'>Tk_Display</emphasis> returns a pointer to the Xlib display structure
corresponding to <emphasis remap='I'>tkwin</emphasis>.  <function>Tk_DisplayName</function> returns an
ASCII string identifying <emphasis remap='I'>tkwin</emphasis>'s display.  <function>Tk_ScreenNumber</function>
returns the index of <emphasis remap='I'>tkwin</emphasis>'s screen among all the screens
of <emphasis remap='I'>tkwin</emphasis>'s display.  <emphasis remap='B'>Tk_Screen</emphasis> returns a pointer to
the Xlib structure corresponding to <emphasis remap='I'>tkwin</emphasis>'s screen.</para>

<para><function>Tk_X</function>, <function>Tk_Y</function>, <function>Tk_Width</function>, and <function>Tk_Height</function>
return information about <emphasis remap='I'>tkwin's</emphasis> location within its
parent and its size.  The location information refers to the
upper-left pixel in the window, or its border if there is one.
The width and height information refers to the interior size
of the window, not including any border.  <emphasis remap='B'>Tk_Changes</emphasis>
returns a pointer to a structure containing all of the above
information plus a few other fields.  <emphasis remap='B'>Tk_Attributes</emphasis>
returns a pointer to an XSetWindowAttributes structure describing
all of the attributes of the <emphasis remap='I'>tkwin</emphasis>'s window, such as background
pixmap, event mask, and so on (Tk keeps track of all this information
as it is changed by the application).  Note: it is essential that
applications use Tk procedures like <emphasis remap='B'>Tk_ResizeWindow</emphasis> instead
of X procedures like <emphasis remap='B'>XResizeWindow</emphasis>, so that Tk can keep its
data structures up-to-date.</para>

<para><function>Tk_IsContainer</function> returns a non-zero value if <emphasis remap='I'>tkwin</emphasis>
is a container, and that some other application may be embedding
itself inside <emphasis remap='I'>tkwin</emphasis>.</para>

<para><function>Tk_IsEmbedded</function> returns a non-zero value if <emphasis remap='I'>tkwin</emphasis>
is not a free-standing window, but rather is embedded in some
other application.</para>

<para><function>Tk_IsMapped</function> returns a non-zero value if <emphasis remap='I'>tkwin</emphasis>
is mapped and zero if <emphasis remap='I'>tkwin</emphasis> is not mapped.</para>

<para><function>Tk_IsTopLevel</function> returns a non-zero value if <emphasis remap='I'>tkwin</emphasis>
is a top-level window (its X parent is the root window of the
screen) and zero if <emphasis remap='I'>tkwin</emphasis> is not a top-level window.</para>

<para><function>Tk_ReqWidth</function> and <function>Tk_ReqHeight</function> return information about
the window's requested size.  These values correspond to the last
call to <emphasis remap='B'>Tk_GeometryRequest</emphasis> for <emphasis remap='I'>tkwin</emphasis>.</para>

<para><function>Tk_MinReqWidth</function> and <function>Tk_MinReqHeight</function> return information about
the window's minimum requested size.  These values correspond to the last
call to <emphasis remap='B'>Tk_SetMinimumRequestSize</emphasis> for <emphasis remap='I'>tkwin</emphasis>.</para>

<para><function>Tk_InternalBorderLeft</function>, <function>Tk_InternalBorderRight</function>,
<function>Tk_InternalBorderTop</function> and <function>Tk_InternalBorderBottom</function> 
return the width of one side of the internal border
that has been requested for <emphasis remap='I'>tkwin</emphasis>, or 0 if no internal border was
requested.  The return value is simply the last value passed to
<emphasis remap='B'>Tk_SetInternalBorder</emphasis> or <emphasis remap='B'>Tk_SetInternalBorderEx</emphasis> for <emphasis remap='I'>tkwin</emphasis>.</para>

<para><emphasis remap='B'>Tk_Visual</emphasis>, <function>Tk_Depth</function>, and <function>Tk_Colormap</function> return
information about the visual characteristics of a window.
<emphasis remap='B'>Tk_Visual</emphasis> returns the visual type for
the window, <function>Tk_Depth</function> returns the number of bits per pixel,
and <function>Tk_Colormap</function> returns the current
colormap for the window.  The visual characteristics are
normally set from the defaults for the window's screen, but
they may be overridden by calling <emphasis remap='B'>Tk_SetWindowVisual</emphasis>.</para>

</refsect1>

<refsect1 xml:id='keywords'><title>KEYWORDS</title>
<para>attributes, colormap, depth, display, height, geometry manager,
identifier, mapped, requested size, screen, top-level,
visual, width, window, x, y</para>
</refsect1>
</refentry>

