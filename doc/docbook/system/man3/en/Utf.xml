<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- lifted from troff+man+tkman by doclifter -->
<refentry xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en' xml:id='utf3'>

<!-- '\" Copyright (c) 1997 Sun Microsystems, Inc. -->

<!-- '\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES.
'\" 
'\" RCS: @(#) $Id$
'\"  -->
<refentryinfo><date>8.1</date></refentryinfo>
<refmeta>
<refentrytitle>Utf</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo class='date'>8.1</refmiscinfo>
<refmiscinfo class='source'>Tcl</refmiscinfo>
<refmiscinfo class='manual'>Tcl Library Procedures</refmiscinfo>
</refmeta>
<refnamediv>
<refname>Tcl_UniChar</refname>
<refname>Tcl_UniCharCaseMatch</refname>
<refname>Tcl_UniCharNcasecmp</refname>
<refname>Tcl_UniCharToUtf</refname>
<refname>Tcl_UtfToUniChar</refname>
<refname>Tcl_UniCharToUtfDString</refname>
<refname>Tcl_UtfToUniCharDString</refname>
<refname>Tcl_UniCharLen</refname>
<refname>Tcl_UniCharNcmp</refname>
<refname>Tcl_UtfCharComplete</refname>
<refname>Tcl_NumUtfChars</refname>
<refname>Tcl_UtfFindFirst</refname>
<refname>Tcl_UtfFindLast</refname>
<refname>Tcl_UtfNext</refname>
<refname>Tcl_UtfPrev</refname>
<refname>Tcl_UniCharAtIndex</refname>
<refname>Tcl_UtfAtIndex</refname>
<refname>Tcl_UtfBackslash</refname>
<refpurpose>routines for manipulating UTF-8 strings</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv xml:id='synopsis'>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;tcl.h&gt;

typedef ... Tcl_UniChar;

</funcsynopsisinfo>
<funcprototype>
<funcdef>int <function>Tcl_UniCharToUtf</function></funcdef>
<paramdef><parameter>ch</parameter></paramdef>
<paramdef><parameter>buf</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tcl_UtfToUniChar</function></funcdef>
<paramdef><parameter>src</parameter></paramdef>
<paramdef><parameter>chPtr</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>char *<function>Tcl_UniCharToUtfDString</function></funcdef>
<paramdef><parameter>uniStr</parameter></paramdef>
<paramdef><parameter>uniLength</parameter></paramdef>
<paramdef><parameter>dsPtr</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef><function>Tcl_UniChar</function> *Tcl_UtfToUniCharDString</funcdef>
<paramdef><parameter>src</parameter></paramdef>
<paramdef><parameter>length</parameter></paramdef>
<paramdef><parameter>dsPtr</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tcl_UniCharLen</function></funcdef>
<paramdef><parameter>uniStr</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tcl_UniCharNcmp</function></funcdef>
<paramdef><parameter>ucs</parameter></paramdef>
<paramdef><parameter>uct</parameter></paramdef>
<paramdef><parameter>numChars</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tcl_UniCharNcasecmp</function></funcdef>
<paramdef><parameter>ucs</parameter></paramdef>
<paramdef><parameter>uct</parameter></paramdef>
<paramdef><parameter>numChars</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tcl_UniCharCaseMatch</function></funcdef>
<paramdef><parameter>uniStr</parameter></paramdef>
<paramdef><parameter>uniPattern</parameter></paramdef>
<paramdef><parameter>nocase</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tcl_UtfNcmp</function></funcdef>
<paramdef><parameter>cs</parameter></paramdef>
<paramdef><parameter>ct</parameter></paramdef>
<paramdef><parameter>numChars</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tcl_UtfNcasecmp</function></funcdef>
<paramdef><parameter>cs</parameter></paramdef>
<paramdef><parameter>ct</parameter></paramdef>
<paramdef><parameter>numChars</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tcl_UtfCharComplete</function></funcdef>
<paramdef><parameter>src</parameter></paramdef>
<paramdef><parameter>length</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tcl_NumUtfChars</function></funcdef>
<paramdef><parameter>src</parameter></paramdef>
<paramdef><parameter>length</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>const char *<function>Tcl_UtfFindFirst</function></funcdef>
<paramdef><parameter>src</parameter></paramdef>
<paramdef><parameter>ch</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>const char *<function>Tcl_UtfFindLast</function></funcdef>
<paramdef><parameter>src</parameter></paramdef>
<paramdef><parameter>ch</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>const char *<function>Tcl_UtfNext</function></funcdef>
<paramdef><parameter>src</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>const char *<function>Tcl_UtfPrev</function></funcdef>
<paramdef><parameter>src</parameter></paramdef>
<paramdef><parameter>start</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>Tcl_UniChar <function>Tcl_UniCharAtIndex</function></funcdef>
<paramdef><parameter>src</parameter></paramdef>
<paramdef><parameter>index</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>const char *<function>Tcl_UtfAtIndex</function></funcdef>
<paramdef><parameter>src</parameter></paramdef>
<paramdef><parameter>index</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tcl_UtfBackslash</function></funcdef>
<paramdef><parameter>src</parameter></paramdef>
<paramdef><parameter>readPtr</parameter></paramdef>
<paramdef><parameter>dst</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>


<refsect1 xml:id='arguments'><title>ARGUMENTS</title>
<!-- .AS const Tcl_UniChar *uniPattern in/out -->
<informaltable>
<tgroup cols='3'>
<tbody>

<row><entry>"char"</entry><entry>"*buf"</entry><entry>"out"</entry>
<entry>
<para>Buffer in which the UTF-8 representation of the Tcl_UniChar is stored.  At most
<emphasis remap='B'>TCL_UTF_MAX</emphasis> bytes are stored in the buffer.</para>
</entry>
</row>
<row><entry>int</entry><entry>ch</entry><entry>in</entry>
<entry>
<para>The Tcl_UniChar to be converted or examined.</para>
</entry>
</row>
<row><entry>Tcl_UniChar</entry><entry>*chPtr</entry><entry>out</entry>
<entry>
<para>Filled with the Tcl_UniChar represented by the head of the UTF-8 string.</para>
</entry>
</row>
<row><entry>"const char"</entry><entry>*src</entry><entry>in</entry>
<entry>
<para>Pointer to a UTF-8 string.</para>
</entry>
</row>
<row><entry>"const char"</entry><entry>*cs</entry><entry>in</entry>
<entry>
<para>Pointer to a UTF-8 string.</para>
</entry>
</row>
<row><entry>"const char"</entry><entry>*ct</entry><entry>in</entry>
<entry>
<para>Pointer to a UTF-8 string.</para>
</entry>
</row>
<row><entry>"const Tcl_UniChar"</entry><entry>*uniStr</entry><entry>in</entry>
<entry>
<para>A null-terminated Unicode string.</para>
</entry>
</row>
<row><entry>"const Tcl_UniChar"</entry><entry>*ucs</entry><entry>in</entry>
<entry>
<para>A null-terminated Unicode string.</para>
</entry>
</row>
<row><entry>"const Tcl_UniChar"</entry><entry>*uct</entry><entry>in</entry>
<entry>
<para>A null-terminated Unicode string.</para>
</entry>
</row>
<row><entry>"const Tcl_UniChar"</entry><entry>*uniPattern</entry><entry>in</entry>
<entry>
<para>A null-terminated Unicode string.</para>
</entry>
</row>
<row><entry>int</entry><entry>length</entry><entry>in</entry>
<entry>
<para>The length of the UTF-8 string in bytes (not UTF-8 characters).  If
negative, all bytes up to the first null byte are used.</para>
</entry>
</row>
<row><entry>int</entry><entry>uniLength</entry><entry>in</entry>
<entry>
<para>The length of the Unicode string in characters.  Must be greater than or
equal to 0.</para>
</entry>
</row>
<row><entry>"Tcl_DString"</entry><entry>*dsPtr</entry><entry>in/out</entry>
<entry>
<para>A pointer to a previously initialized <emphasis remap='B'>Tcl_DString</emphasis>.</para>
</entry>
</row>
<row><entry>"unsigned long"</entry><entry>numChars</entry><entry>in</entry>
<entry>
<para>The number of characters to compare.</para>
</entry>
</row>
<row><entry>"const char"</entry><entry>*start</entry><entry>in</entry>
<entry>
<para>Pointer to the beginning of a UTF-8 string.</para>
</entry>
</row>
<row><entry>int</entry><entry>index</entry><entry>in</entry>
<entry>
<para>The index of a character (not byte) in the UTF-8 string.</para>
</entry>
</row>
<row><entry>int</entry><entry>*readPtr</entry><entry>out</entry>
<entry>
<para>If non-NULL, filled with the number of bytes in the backslash sequence, 
including the backslash character.</para>
</entry>
</row>
<row><entry>char</entry><entry>*dst</entry><entry>out</entry>
<entry>
<para>Buffer in which the bytes represented by the backslash sequence are stored.
At most <emphasis remap='B'>TCL_UTF_MAX</emphasis> bytes are stored in the buffer.</para>
</entry>
</row>
<row><entry>int</entry><entry>nocase</entry><entry>in</entry>
<entry>
<para>Specifies whether the match should be done case-sensitive (0) or
case-insensitive (1).</para>
<!-- .BE -->
</entry>
</row>
</tbody>
</tgroup>
</informaltable>

</refsect1>

<refsect1 xml:id='description'><title>DESCRIPTION</title>
<para>These routines convert between UTF-8 strings and Tcl_UniChars.  A
Tcl_UniChar is a Unicode character represented as an unsigned, fixed-size
quantity.  A UTF-8 character is a Unicode character represented as
a varying-length sequence of up to <emphasis remap='B'>TCL_UTF_MAX</emphasis> bytes.  A multibyte UTF-8
sequence consists of a lead byte followed by some number of trail bytes.</para>

<para><emphasis remap='B'>TCL_UTF_MAX</emphasis> is the maximum number of bytes that it takes to
represent one Unicode character in the UTF-8 representation.</para>

<para><function>Tcl_UniCharToUtf</function> stores the Tcl_UniChar <emphasis remap='I'>ch</emphasis> as a UTF-8 string
in starting at <emphasis remap='I'>buf</emphasis>.  The return value is the number of bytes stored
in <emphasis remap='I'>buf</emphasis>.</para>

<para><function>Tcl_UtfToUniChar</function> reads one UTF-8 character starting at <emphasis remap='I'>src</emphasis>
and stores it as a Tcl_UniChar in <emphasis remap='I'>*chPtr</emphasis>.  The return value is the
number of bytes read from <emphasis remap='I'>src</emphasis>.  The caller must ensure that the
source buffer is long enough such that this routine does not run off the
end and dereference non-existent or random memory; if the source buffer
is known to be null-terminated, this will not happen.  If the input is
not in proper UTF-8 format, <function>Tcl_UtfToUniChar</function> will store the first
byte of <emphasis remap='I'>src</emphasis> in <emphasis remap='I'>*chPtr</emphasis> as a Tcl_UniChar between 0x0000 and
0x00ff and return 1.</para>  

<para><function>Tcl_UniCharToUtfDString</function> converts the given Unicode string
to UTF-8, storing the result in a previously initialized <emphasis remap='B'>Tcl_DString</emphasis>.
You must specify <emphasis remap='I'>uniLength</emphasis>, the length of the given Unicode string.
The return value is a pointer to the UTF-8 representation of the
Unicode string.  Storage for the return value is appended to the
end of the <emphasis remap='B'>Tcl_DString</emphasis>.</para>

<para><emphasis remap='B'>Tcl_UtfToUniCharDString</emphasis> converts the given UTF-8 string to Unicode,
storing the result in the previously initialized <emphasis remap='B'>Tcl_DString</emphasis>.
In the argument <emphasis remap='I'>length</emphasis>, you may either specify the length of
the given UTF-8 string in bytes or
<quote>-1</quote>,
in which case <emphasis remap='B'>Tcl_UtfToUniCharDString</emphasis> uses <emphasis remap='B'>strlen</emphasis> to
calculate the length.  The return value is a pointer to the Unicode
representation of the UTF-8 string.  Storage for the return value
is appended to the end of the <emphasis remap='B'>Tcl_DString</emphasis>.  The Unicode string
is terminated with a Unicode null character.</para>

<para><function>Tcl_UniCharLen</function> corresponds to <emphasis remap='B'>strlen</emphasis> for Unicode
characters.  It accepts a null-terminated Unicode string and returns
the number of Unicode characters (not bytes) in that string.</para>

<para><function>Tcl_UniCharNcmp</function> and <function>Tcl_UniCharNcasecmp</function> correspond to
<emphasis remap='B'>strncmp</emphasis> and <emphasis remap='B'>strncasecmp</emphasis>, respectively, for Unicode characters.
They accept two null-terminated Unicode strings and the number of characters
to compare.  Both strings are assumed to be at least <emphasis remap='I'>numChars</emphasis> characters
long. <function>Tcl_UniCharNcmp</function>  compares the two strings character-by-character
according to the Unicode character ordering.  It returns an integer greater
than, equal to, or less than 0 if the first string is greater than, equal
to, or less than the second string respectively.  <function>Tcl_UniCharNcasecmp</function>
is the Unicode case insensitive version.</para>

<para><function>Tcl_UniCharCaseMatch</function> is the Unicode equivalent to
<emphasis remap='B'>Tcl_StringCaseMatch</emphasis>.  It accepts a null-terminated Unicode string,
a Unicode pattern, and a boolean value specifying whether the match should
be case sensitive and returns whether the string matches the pattern.</para>

<para><function>Tcl_UtfNcmp</function> corresponds to <emphasis remap='B'>strncmp</emphasis> for UTF-8 strings. It
accepts two null-terminated UTF-8 strings and the number of characters
to compare.  (Both strings are assumed to be at least <emphasis remap='I'>numChars</emphasis>
characters long.)  <function>Tcl_UtfNcmp</function> compares the two strings
character-by-character according to the Unicode character ordering.
It returns an integer greater than, equal to, or less than 0 if the
first string is greater than, equal to, or less than the second string
respectively.</para>

<para><function>Tcl_UtfNcasecmp</function> corresponds to <emphasis remap='B'>strncasecmp</emphasis> for UTF-8
strings.  It is similar to <function>Tcl_UtfNcmp</function> except comparisons ignore
differences in case when comparing upper, lower or title case
characters.</para>

<para><function>Tcl_UtfCharComplete</function> returns 1 if the source UTF-8 string <emphasis remap='I'>src</emphasis>
of <emphasis remap='I'>length</emphasis> bytes is long enough to be decoded by
<function>Tcl_UtfToUniChar</function>, or 0 otherwise.  This function does not guarantee
that the UTF-8 string is properly formed.  This routine is used by
procedures that are operating on a byte at a time and need to know if a
full Tcl_UniChar has been seen.</para>

<para><function>Tcl_NumUtfChars</function> corresponds to <emphasis remap='B'>strlen</emphasis> for UTF-8 strings.  It
returns the number of Tcl_UniChars that are represented by the UTF-8 string
<emphasis remap='I'>src</emphasis>.  The length of the source string is <emphasis remap='I'>length</emphasis> bytes.  If the
length is negative, all bytes up to the first null byte are used.</para>

<para><function>Tcl_UtfFindFirst</function> corresponds to <emphasis remap='B'>strchr</emphasis> for UTF-8 strings.  It
returns a pointer to the first occurrence of the Tcl_UniChar <emphasis remap='I'>ch</emphasis>
in the null-terminated UTF-8 string <emphasis remap='I'>src</emphasis>.  The null terminator is
considered part of the UTF-8 string.</para>  

<para><function>Tcl_UtfFindLast</function> corresponds to <emphasis remap='B'>strrchr</emphasis> for UTF-8 strings.  It
returns a pointer to the last occurrence of the Tcl_UniChar <emphasis remap='I'>ch</emphasis>
in the null-terminated UTF-8 string <emphasis remap='I'>src</emphasis>.  The null terminator is
considered part of the UTF-8 string.</para>  

<para>Given <emphasis remap='I'>src</emphasis>, a pointer to some location in a UTF-8 string,
<function>Tcl_UtfNext</function> returns a pointer to the next UTF-8 character in the
string.  The caller must not ask for the next character after the last
character in the string if the string is not terminated by a null
character.</para>

<para>Given <emphasis remap='I'>src</emphasis>, a pointer to some location in a UTF-8 string (or to a
null byte immediately following such a string), <function>Tcl_UtfPrev</function>
returns a pointer to the closest preceding byte that starts a UTF-8
character.
This function will not back up to a position before <emphasis remap='I'>start</emphasis>,
the start of the UTF-8 string.  If <emphasis remap='I'>src</emphasis> was already at <emphasis remap='I'>start</emphasis>, the
return value will be <emphasis remap='I'>start</emphasis>.</para>

<para><function>Tcl_UniCharAtIndex</function> corresponds to a C string array dereference or the
Pascal Ord() function.  It returns the Tcl_UniChar represented at the
specified character (not byte) <emphasis remap='I'>index</emphasis> in the UTF-8 string
<emphasis remap='I'>src</emphasis>.  The source string must contain at least <emphasis remap='I'>index</emphasis>
characters.  Behavior is undefined if a negative <emphasis remap='I'>index</emphasis> is given.</para>

<para><function>Tcl_UtfAtIndex</function> returns a pointer to the specified character (not
byte) <emphasis remap='I'>index</emphasis> in the UTF-8 string <emphasis remap='I'>src</emphasis>.  The source string must
contain at least <emphasis remap='I'>index</emphasis> characters.  This is equivalent to calling 
<function>Tcl_UtfNext</function> <emphasis remap='I'>index</emphasis> times.  If a negative <emphasis remap='I'>index</emphasis> is given,
the return pointer points to the first character in the source string.</para>

<para><function>Tcl_UtfBackslash</function> is a utility procedure used by several of the Tcl
commands.  It parses a backslash sequence and stores the properly formed
UTF-8 character represented by the backslash sequence in the output
buffer <emphasis remap='I'>dst</emphasis>.  At most <emphasis remap='B'>TCL_UTF_MAX</emphasis> bytes are stored in the buffer.
<function>Tcl_UtfBackslash</function> modifies <emphasis remap='I'>*readPtr</emphasis> to contain the number
of bytes in the backslash sequence, including the backslash character.
The return value is the number of bytes stored in the output buffer.</para>

<para>See the <emphasis remap='B'>Tcl</emphasis> manual entry for information on the valid backslash
sequences.  All of the sequences described in the Tcl manual entry are
supported by <function>Tcl_UtfBackslash</function>.</para>

</refsect1>

<refsect1 xml:id='keywords'><title>KEYWORDS</title>
<para>utf, unicode, backslash</para>
</refsect1>
</refentry>

