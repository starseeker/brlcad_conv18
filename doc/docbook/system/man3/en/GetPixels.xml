<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- lifted from troff+man+tkman by doclifter -->
<refentry xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en' xml:id='getpixels3'>

<!-- '\" Copyright (c) 1990 The Regents of the University of California.
'\" Copyright (c) 1994\-1998 Sun Microsystems, Inc. -->

<!-- '\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES.
'\" 
'\" RCS: @(#) $Id$
'\"  -->
<refentryinfo><date>8.1</date></refentryinfo>
<refmeta>
<refentrytitle>Tk_GetPixelsFromObj</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo class='date'>8.1</refmiscinfo>
<refmiscinfo class='source'>Tk</refmiscinfo>
<refmiscinfo class='manual'>Tk Library Procedures</refmiscinfo>
</refmeta>
<refnamediv>
<refname>Tk_GetPixelsFromObj</refname>
<refname>Tk_GetPixels</refname>
<refname>Tk_GetMMFromObj</refname>
<refname>Tk_GetScreenMM</refname>
<refpurpose>translate between strings and screen units</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv xml:id='synopsis'>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;tk.h&gt;

</funcsynopsisinfo>
<funcprototype>
<funcdef>int <function>Tk_GetPixelsFromObj</function></funcdef>
<paramdef><parameter>interp</parameter></paramdef>
<paramdef><parameter>tkwin</parameter></paramdef>
<paramdef><parameter>objPtr</parameter></paramdef>
<paramdef><parameter>intPtr</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tk_GetPixels</function></funcdef>
<paramdef><parameter>interp</parameter></paramdef>
<paramdef><parameter>tkwin</parameter></paramdef>
<paramdef><parameter>string</parameter></paramdef>
<paramdef><parameter>intPtr</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tk_GetMMFromObj</function></funcdef>
<paramdef><parameter>interp</parameter></paramdef>
<paramdef><parameter>tkwin</parameter></paramdef>
<paramdef><parameter>objPtr</parameter></paramdef>
<paramdef><parameter>doublePtr</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tk_GetScreenMM</function></funcdef>
<paramdef><parameter>interp</parameter></paramdef>
<paramdef><parameter>tkwin</parameter></paramdef>
<paramdef><parameter>string</parameter></paramdef>
<paramdef><parameter>doublePtr</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>


<refsect1 xml:id='arguments'><title>ARGUMENTS</title>
<!-- .AS Tcl_Interp *joinPtr -->
<informaltable>
<tgroup cols='3'>
<tbody>

<row><entry>"Tcl_Interp"</entry><entry>"*interp"</entry><entry>"in"</entry>
<entry>
<para>Interpreter to use for error reporting.</para>
</entry>
</row>
<row><entry>Tk_Window</entry><entry>tkwin</entry><entry>in</entry>
<entry>
<para>Window whose screen geometry determines the conversion between absolute
units and pixels.</para>
</entry>
</row>
<row><entry>Tcl_Obj</entry><entry>*objPtr</entry><entry>in/out</entry>
<entry>
<para>String value specifies a distance on the screen;
internal rep will be modified to cache converted distance.</para>
</entry>
</row>
<row><entry>"const char"</entry><entry>*string</entry><entry>in</entry>
<entry>
<para>Same as <emphasis remap='I'>objPtr</emphasis> except specification of distance is passed as
a string.</para>
</entry>
</row>
<row><entry>int</entry><entry>*intPtr</entry><entry>out</entry>
<entry>
<para>Pointer to location in which to store converted distance in pixels.</para>
</entry>
</row>
<row><entry>double</entry><entry>*doublePtr</entry><entry>out</entry>
<entry>
<para>Pointer to location in which to store converted distance in millimeters.</para>
<!-- .BE -->
</entry>
</row>
</tbody>
</tgroup>
</informaltable>

</refsect1>

<refsect1 xml:id='description'><title>DESCRIPTION</title>
<para>These procedures take as argument a specification of distance on
the screen (<emphasis remap='I'>objPtr</emphasis> or <emphasis remap='I'>string</emphasis>) and compute the
corresponding distance either in integer pixels or floating-point millimeters.
In either case,
<emphasis remap='I'>objPtr</emphasis> or <emphasis remap='I'>string</emphasis>
specifies a screen distance as a
floating-point number followed by one of the following characters
that indicates units:</para>
<variablelist remap='TP'>
  <varlistentry>
  <term>&lt;none&gt;</term>
  <listitem>
<para>The number specifies a distance in pixels.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>c</emphasis></term>
  <listitem>
<para>The number specifies a distance in centimeters on the screen.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>i</emphasis></term>
  <listitem>
<para>The number specifies a distance in inches on the screen.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>m</emphasis></term>
  <listitem>
<para>The number specifies a distance in millimeters on the screen.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>p</emphasis></term>
  <listitem>
<para>The number specifies a distance in printer's points (1/72 inch)
on the screen.</para>
  </listitem>
  </varlistentry>
</variablelist>

<para><function>Tk_GetPixelsFromObj</function> converts the value of <emphasis remap='I'>objPtr</emphasis> to the
nearest even number of pixels and stores that value at <emphasis remap='I'>*intPtr</emphasis>.
It returns <emphasis remap='B'>TCL_OK</emphasis> under normal circumstances.
If an error occurs (e.g. <emphasis remap='I'>objPtr</emphasis> contains a number followed
by a character that is not one of the ones above) then
<emphasis remap='B'>TCL_ERROR</emphasis> is returned and an error message is left
in <emphasis remap='I'>interp</emphasis>'s result if <emphasis remap='I'>interp</emphasis> is not NULL.
<function>Tk_GetPixelsFromObj</function> caches information about the return
value in <emphasis remap='I'>objPtr</emphasis>, which speeds up future calls to
<function>Tk_GetPixelsFromObj</function> with the same <emphasis remap='I'>objPtr</emphasis>.</para>

<para><function>Tk_GetPixels</function> is identical to <function>Tk_GetPixelsFromObj</function> except
that the screen distance is specified with a string instead
of an object.  This prevents <function>Tk_GetPixels</function> from caching the
return value, so <emphasis remap='B'>Tk_GetAnchor</emphasis> is less efficient than
<function>Tk_GetPixelsFromObj</function>.</para>

<para><function>Tk_GetMMFromObj</function> and <function>Tk_GetScreenMM</function> are similar to
<function>Tk_GetPixelsFromObj</function> and <function>Tk_GetPixels</function> (respectively) except
that they convert the screen distance to millimeters and
store a double-precision floating-point result at <emphasis remap='I'>*doublePtr</emphasis>.</para>

</refsect1>

<refsect1 xml:id='keywords'><title>KEYWORDS</title>
<para>centimeters, convert, inches, millimeters, pixels, points, screen units</para>
</refsect1>
</refentry>

