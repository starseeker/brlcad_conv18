<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- lifted from troff+man+tkman by doclifter -->
<refentry xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en' xml:id='measurechar3'>

<!-- '\" Copyright (c) 1996 Sun Microsystems, Inc. -->

<!-- '\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES.
'\" 
'\" RCS: @(#) $Id$
'\"  -->
<refentryinfo><date>8.1</date></refentryinfo>
<refmeta>
<refentrytitle>Tk_MeasureChars</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo class='date'>8.1</refmiscinfo>
<refmiscinfo class='source'>Tk</refmiscinfo>
<refmiscinfo class='manual'>Tk Library Procedures</refmiscinfo>
</refmeta>
<refnamediv>
<refname>Tk_MeasureChars</refname>
<refname>Tk_TextWidth</refname>
<refname>Tk_DrawChars</refname>
<refname>Tk_UnderlineChars</refname>
<refpurpose>routines to measure and display simple single-line strings.</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv xml:id='synopsis'>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;tk.h&gt;

</funcsynopsisinfo>
<funcprototype>
<funcdef>int <function>Tk_MeasureChars</function></funcdef>
<paramdef><parameter>tkfont</parameter></paramdef>
<paramdef><parameter>string</parameter></paramdef>
<paramdef><parameter>numBytes</parameter></paramdef>
<paramdef><parameter>maxPixels</parameter></paramdef>
<paramdef><parameter>flags</parameter></paramdef>
<paramdef><parameter>lengthPtr</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tk_TextWidth</function></funcdef>
<paramdef><parameter>tkfont</parameter></paramdef>
<paramdef><parameter>string</parameter></paramdef>
<paramdef><parameter>numBytes</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef><function>Tk_DrawChars</function></funcdef>
<paramdef><parameter>display</parameter></paramdef>
<paramdef><parameter>drawable</parameter></paramdef>
<paramdef><parameter>gc</parameter></paramdef>
<paramdef><parameter>tkfont</parameter></paramdef>
<paramdef><parameter>string</parameter></paramdef>
<paramdef><parameter>numBytes</parameter></paramdef>
<paramdef><parameter>x</parameter></paramdef>
<paramdef><parameter>y</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef><function>Tk_UnderlineChars</function></funcdef>
<paramdef><parameter>display</parameter></paramdef>
<paramdef><parameter>drawable</parameter></paramdef>
<paramdef><parameter>gc</parameter></paramdef>
<paramdef><parameter>tkfont</parameter></paramdef>
<paramdef><parameter>string</parameter></paramdef>
<paramdef><parameter>x</parameter></paramdef>
<paramdef><parameter>y</parameter></paramdef>
<paramdef><parameter>firstByte</parameter></paramdef>
<paramdef><parameter>lastByte</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>


<refsect1 xml:id='arguments'><title>ARGUMENTS</title>
<!-- .AS const char firstChar -->
<informaltable>
<tgroup cols='3'>
<tbody>

<row><entry>"Tk_Font"</entry><entry>"tkfont"</entry><entry>"in"</entry>
<entry>
<para>Token for font in which text is to be drawn or measured.  Must have been
returned by a previous call to <emphasis remap='B'>Tk_GetFont</emphasis>.</para>
</entry>
</row>
<row><entry>"const char"</entry><entry>*string</entry><entry>in</entry>
<entry>
<para>Text to be measured or displayed.  Need not be null terminated.  Any
non-printing meta-characters in the string (such as tabs, newlines, and
other control characters) will be measured or displayed in a
platform-dependent manner.</para>  
</entry>
</row>
<row><entry>int</entry><entry>numBytes</entry><entry>in</entry>
<entry>
<para>The maximum number of bytes to consider when measuring or drawing
<emphasis remap='I'>string</emphasis>.  Must be greater than or equal to 0.</para>
</entry>
</row>
<row><entry>int</entry><entry>maxPixels</entry><entry>in</entry>
<entry>
<para>If <emphasis remap='I'>maxPixels</emphasis> is &gt;= 0, it specifies the longest permissible
line length in pixels.  Characters from <emphasis remap='I'>string</emphasis> are processed only
until this many pixels have been covered.  If <emphasis remap='I'>maxPixels</emphasis> is &lt; 0, then
the line length is unbounded and the <emphasis remap='I'>flags</emphasis> argument is ignored.</para>
</entry>
</row>
<row><entry>int</entry><entry>flags</entry><entry>in</entry>
<entry>
<para>Various flag bits OR-ed together: <emphasis remap='B'>TK_PARTIAL_OK</emphasis> means include a character
as long as any part of it fits in the length given by <emphasis remap='I'>maxPixels</emphasis>;
otherwise, a character must fit completely to be considered.
<emphasis remap='B'>TK_WHOLE_WORDS</emphasis> means stop on a word boundary, if possible.  If
<emphasis remap='B'>TK_AT_LEAST_ONE</emphasis> is set, it means return at least one character even if no
characters could fit in the length given by <emphasis remap='I'>maxPixels</emphasis>.  If
<emphasis remap='B'>TK_AT_LEAST_ONE</emphasis> is set and <emphasis remap='B'>TK_WHOLE_WORDS</emphasis> is also set, it means that if
not even one word fits on the line, return the first few letters of the
word that did fit; if not even one letter of the word fit, then the first
letter will still be returned.</para>
</entry>
</row>
<row><entry>int</entry><entry>*lengthPtr</entry><entry>out</entry>
<entry>
<para>Filled with the number of pixels occupied by the number of characters
returned as the result of <function>Tk_MeasureChars</function>.</para>
</entry>
</row>
<row><entry>Display</entry><entry>*display</entry><entry>in</entry>
<entry>
<para>Display on which to draw.</para>
</entry>
</row>
<row><entry>Drawable</entry><entry>drawable</entry><entry>in</entry>
<entry>
<para>Window or pixmap in which to draw.</para>
</entry>
</row>
<row><entry>GC</entry><entry>gc</entry><entry>in</entry>
<entry>
<para>Graphics context for drawing characters.  The font selected into this GC 
must be the same as the <emphasis remap='I'>tkfont</emphasis>.</para>
</entry>
</row>
<row><entry>int</entry><entry>"x, y"</entry><entry>in</entry>
<entry>
<para>Coordinates at which to place the left edge of the baseline when displaying
<emphasis remap='I'>string</emphasis>.</para>  
</entry>
</row>
<row><entry>int</entry><entry>firstByte</entry><entry>in</entry>
<entry>
<para>The index of the first byte of the first character to underline in the
<emphasis remap='I'>string</emphasis>.  Underlining begins at the left edge of this character.</para>
</entry>
</row>
<row><entry>int</entry><entry>lastByte</entry><entry>in</entry>
<entry>
<para>The index of the first byte of the last character up to which the
underline will be drawn.  The character specified by <emphasis remap='I'>lastByte</emphasis>
will not itself be underlined.</para>
<!-- .BE -->
</entry>
</row>
</tbody>
</tgroup>
</informaltable>

</refsect1>

<refsect1 xml:id='description'><title>DESCRIPTION</title>
<para>These routines are for measuring and displaying simple single-font,
single-line strings.  To measure and display single-font, multi-line,
justified text, refer to the documentation for <emphasis remap='B'>Tk_ComputeTextLayout</emphasis>.
There is no programming interface in the core of Tk that supports
multi-font, multi-line text; support for that behavior must be built on
top of simpler layers.  
Note that the interfaces described here are
byte-oriented not character-oriented, so index values coming from Tcl
scripts need to be converted to byte offsets using the
<emphasis remap='B'>Tcl_UtfAtIndex</emphasis> and related routines.</para>

<para>A glyph is the displayable picture of a letter, number, or some other
symbol.  Not all character codes in a given font have a glyph.
Characters such as tabs, newlines/returns, and control characters that
have no glyph are measured and displayed by these procedures in a
platform-dependent manner; under X, they are replaced with backslashed
escape sequences, while under Windows and Macintosh hollow or solid boxes
may be substituted.  Refer to the documentation for
<emphasis remap='B'>Tk_ComputeTextLayout</emphasis> for a programming interface that supports the
platform-independent expansion of tab characters into columns and
newlines/returns into multi-line text.</para>  

<para><function>Tk_MeasureChars</function> is used both to compute the length of a given
string and to compute how many characters from a string fit in a given
amount of space.  The return value is the number of bytes from
<emphasis remap='I'>string</emphasis> that fit in the space specified by <emphasis remap='I'>maxPixels</emphasis> subject to
the conditions described by <emphasis remap='I'>flags</emphasis>.  If all characters fit, the return
value will be <emphasis remap='I'>numBytes</emphasis>.  <emphasis remap='I'>*lengthPtr</emphasis> is filled with the computed
width, in pixels, of the portion of the string that was measured.  For
example, if the return value is 5, then <emphasis remap='I'>*lengthPtr</emphasis> is filled with the
distance between the left edge of <emphasis remap='I'>string</emphasis>[0] and the right edge of
<emphasis remap='I'>string</emphasis>[4].</para> 

<para><function>Tk_TextWidth</function> is a wrapper function that provides a simpler interface
to the <function>Tk_MeasureChars</function> function.  The return value is how much
space in pixels the given <emphasis remap='I'>string</emphasis> needs.</para>

<para><function>Tk_DrawChars</function> draws the <emphasis remap='I'>string</emphasis> at the given location in the
given <emphasis remap='I'>drawable</emphasis>.</para>

<para><function>Tk_UnderlineChars</function> underlines the given range of characters in the
given <emphasis remap='I'>string</emphasis>.  It does not draw the characters (which are assumed to
have been displayed previously by <function>Tk_DrawChars</function>); it just draws the
underline.  This procedure is used to underline a few characters without
having to construct an underlined font.  To produce natively underlined
text, the appropriate underlined font should be constructed and used.</para> 
</refsect1>

<refsect1 xml:id='see_also'><title>SEE ALSO</title>
<para>font(n), FontI<citerefentry><refentrytitle>d</refentrytitle><manvolnum>3</manvolnum></citerefentry></para>
</refsect1>

<refsect1 xml:id='keywords'><title>KEYWORDS</title>
<para>font, measurement</para>
</refsect1>
</refentry>

