<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- lifted from troff+man+tkman by doclifter -->
<refentry xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en' xml:id='getimage3'>

<!-- '\" Copyright (c) 1994 The Regents of the University of California.
'\" Copyright (c) 1994\-1996 Sun Microsystems, Inc. -->

<!-- '\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES.
'\" 
'\" RCS: @(#) $Id$
'\"  -->
<refentryinfo><date>4.0</date></refentryinfo>
<refmeta>
<refentrytitle>Tk_GetImage</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo class='date'>4.0</refmiscinfo>
<refmiscinfo class='source'>Tk</refmiscinfo>
<refmiscinfo class='manual'>Tk Library Procedures</refmiscinfo>
</refmeta>
<refnamediv>
<refname>Tk_GetImage</refname>
<refname>Tk_RedrawImage</refname>
<refname>Tk_SizeOfImage</refname>
<refname>Tk_FreeImage</refname>
<refpurpose>use an image in a widget</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv xml:id='synopsis'>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;tk.h&gt;

</funcsynopsisinfo>
<funcprototype>
<funcdef>Tk_Image <function>Tk_GetImage</function></funcdef>
<paramdef><parameter>interp</parameter></paramdef>
<paramdef><parameter>tkwin</parameter></paramdef>
<paramdef><parameter>name</parameter></paramdef>
<paramdef><parameter>changeProc</parameter></paramdef>
<paramdef><parameter>clientData</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef><function>Tk_RedrawImage</function></funcdef>
<paramdef><parameter>image</parameter></paramdef>
<paramdef><parameter>imageX</parameter></paramdef>
<paramdef><parameter>imageY</parameter></paramdef>
<paramdef><parameter>width</parameter></paramdef>
<paramdef><parameter>height</parameter></paramdef>
<paramdef><parameter>drawable</parameter></paramdef>
<paramdef><parameter>drawableX</parameter></paramdef>
<paramdef><parameter>drawableY</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef><function>Tk_SizeOfImage</function></funcdef>
<paramdef><parameter>image</parameter></paramdef>
<paramdef><parameter>widthPtr</parameter></paramdef>
<paramdef><parameter>heightPtr</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef><function>Tk_FreeImage</function></funcdef>
<paramdef><parameter>image</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>


<refsect1 xml:id='arguments'><title>ARGUMENTS</title>
<!-- .AS Tk_ImageChangedProc *changeProc -->
<informaltable>
<tgroup cols='3'>
<tbody>

<row><entry>"Tcl_Interp"</entry><entry>"*interp"</entry><entry>"in"</entry>
<entry>
<para>Place to leave error message.</para>
</entry>
</row>
<row><entry>Tk_Window</entry><entry>tkwin</entry><entry>in</entry>
<entry>
<para>Window in which image will be used.</para>
</entry>
</row>
<row><entry>"const char"</entry><entry>*name</entry><entry>in</entry>
<entry>
<para>Name of image.</para>
</entry>
</row>
<row><entry>Tk_ImageChangedProc</entry><entry>*changeProc</entry><entry>in</entry>
<entry>
<para>Procedure for Tk to invoke whenever image content or size changes.</para>
</entry>
</row>
<row><entry>ClientData</entry><entry>clientData</entry><entry>in</entry>
<entry>
<para>One-word value for Tk to pass to <emphasis remap='I'>changeProc</emphasis>.</para>
</entry>
</row>
<row><entry>Tk_Image</entry><entry>image</entry><entry>in</entry>
<entry>
<para>Token for image instance;  must have been returned by a previous
call to <function>Tk_GetImage</function>.</para>
</entry>
</row>
<row><entry>int</entry><entry>imageX</entry><entry>in</entry>
<entry>
<para>X-coordinate of upper-left corner of region of image to redisplay
(measured in pixels from the image's upper-left corner).</para>
</entry>
</row>
<row><entry>int</entry><entry>imageY</entry><entry>in</entry>
<entry>
<para>Y-coordinate of upper-left corner of region of image to redisplay
(measured in pixels from the image's upper-left corner).</para>
</entry>
</row>
<row><entry>"int"</entry><entry>width</entry><entry>(in)</entry>
<entry>
<para>Width of region of image to redisplay.</para>
</entry>
</row>
<row><entry>"int"</entry><entry>height</entry><entry>(in)</entry>
<entry>
<para>Height of region of image to redisplay.</para>
</entry>
</row>
<row><entry>Drawable</entry><entry>drawable</entry><entry>in</entry>
<entry>
<para>Where to display image.  Must either be window specified to
<function>Tk_GetImage</function> or a pixmap compatible with that window.</para>
</entry>
</row>
<row><entry>int</entry><entry>drawableX</entry><entry>in</entry>
<entry>
<para>Where to display image in <emphasis remap='I'>drawable</emphasis>: this is the x-coordinate
in <emphasis remap='I'>drawable</emphasis> where x-coordinate <emphasis remap='I'>imageX</emphasis> of the image
should be displayed.</para>
</entry>
</row>
<row><entry>int</entry><entry>drawableY</entry><entry>in</entry>
<entry>
<para>Where to display image in <emphasis remap='I'>drawable</emphasis>: this is the y-coordinate
in <emphasis remap='I'>drawable</emphasis> where y-coordinate <emphasis remap='I'>imageY</emphasis> of the image
should be displayed.</para>
</entry>
</row>
<row><entry>"int"</entry><entry>widthPtr</entry><entry>out</entry>
<entry>
<para>Store width of <emphasis remap='I'>image</emphasis> (in pixels) here.</para>
</entry>
</row>
<row><entry>"int"</entry><entry>heightPtr</entry><entry>out</entry>
<entry>
<para>Store height of <emphasis remap='I'>image</emphasis> (in pixels) here.</para>
<!-- .BE -->
</entry>
</row>
</tbody>
</tgroup>
</informaltable>

</refsect1>

<refsect1 xml:id='description'><title>DESCRIPTION</title>
<para>These procedures are invoked by widgets that wish to display images.
<function>Tk_GetImage</function> is invoked by a widget when it first decides to
display an image.
<emphasis remap='I'>name</emphasis> gives the name of the desired image and <emphasis remap='I'>tkwin</emphasis>
identifies the window where the image will be displayed.
<function>Tk_GetImage</function> looks up the image in the table of existing
images and returns a token for a new instance of the image.
If the image does not exist then <function>Tk_GetImage</function> returns NULL
and leaves an error message in <emphasis remap='I'>interp-&gt;result</emphasis>.</para>

<para>When a widget wishes to actually display an image it must
call <function>Tk_RedrawImage</function>, identifying the image (<emphasis remap='I'>image</emphasis>),
a region within the image to redisplay (<emphasis remap='I'>imageX</emphasis>, <emphasis remap='I'>imageY</emphasis>,
<varname role='parameter'>width</varname>, and <varname role='parameter'>height</varname>), and a place to display the
image (<emphasis remap='I'>drawable</emphasis>, <emphasis remap='I'>drawableX</emphasis>, and <emphasis remap='I'>drawableY</emphasis>).
Tk will then invoke the appropriate image manager, which will
display the requested portion of the image before returning.</para>

<para>A widget can find out the dimensions of an image by calling
<function>Tk_SizeOfImage</function>:  the width and height will be stored
in the locations given by <emphasis remap='I'>widthPtr</emphasis> and <emphasis remap='I'>heightPtr</emphasis>,
respectively.</para>

<para>When a widget is finished with an image (e.g., the widget is
being deleted or it is going to use a different image instead
of the current one), it must call <function>Tk_FreeImage</function> to
release the image instance.
The widget should never again use the image token after passing
it to <function>Tk_FreeImage</function>.
There must be exactly one call to <function>Tk_FreeImage</function> for each
call to <function>Tk_GetImage</function>.</para>

<para>If the contents or size of an image changes, then any widgets
using the image will need to find out about the changes so that
they can redisplay themselves.
The <emphasis remap='I'>changeProc</emphasis> and <varname role='parameter'>clientData</varname> arguments to
<function>Tk_GetImage</function> are used for this purpose.
<emphasis remap='I'>changeProc</emphasis> will be called by Tk whenever a change occurs
in the image;  it must match the following prototype:</para>
<programlisting remap='CS'>
<funcsynopsis>
<funcprototype>
<funcdef>typedef void <function>Tk_ImageChangedProc</function></funcdef>
    <paramdef>ClientData <parameter>clientData</parameter></paramdef>
    <paramdef>int <parameter>x</parameter></paramdef>
    <paramdef>int <parameter>y</parameter></paramdef>
    <paramdef>int <parameter>width</parameter></paramdef>
    <paramdef>int <parameter>height</parameter></paramdef>
    <paramdef>int <parameter>imageWidth</parameter></paramdef>
    <paramdef>int <parameter>imageHeight</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</programlisting> <!-- remap='CE' -->
<para>The <varname role='parameter'>clientData</varname> argument to <emphasis remap='I'>changeProc</emphasis> is the same as the
<varname role='parameter'>clientData</varname> argument to <function>Tk_GetImage</function>.
It is usually a pointer to the widget record for the widget or
some other data structure managed by the widget.
The arguments <varname role='parameter'>x</varname>, <varname role='parameter'>y</varname>, <varname role='parameter'>width</varname>, and <varname role='parameter'>height</varname>
identify a region within the image that must be redisplayed;
they are specified in pixels measured from the upper-left
corner of the image.
The arguments <varname role='parameter'>imageWidth</varname> and <varname role='parameter'>imageHeight</varname> give
the image's (new) size.</para>

</refsect1>

<refsect1 xml:id='see_also'><title>SEE ALSO</title>
<para>Tk_CreateImageType</para>

</refsect1>

<refsect1 xml:id='keywords'><title>KEYWORDS</title>
<para>images, redisplay</para>
</refsect1>
</refentry>

