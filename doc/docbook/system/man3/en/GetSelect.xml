<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- lifted from troff+man+tkman by doclifter -->
<refentry xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en' xml:id='getselect3'>

<!-- '\" Copyright (c) 1990\-1994 The Regents of the University of California.
'\" Copyright (c) 1994\-1996 Sun Microsystems, Inc. -->

<!-- '\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES.
'\" 
'\" RCS: @(#) $Id$
'\"  -->
<refentryinfo><date>4.0</date></refentryinfo>
<refmeta>
<refentrytitle>Tk_GetSelection</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo class='date'>4.0</refmiscinfo>
<refmiscinfo class='source'>Tk</refmiscinfo>
<refmiscinfo class='manual'>Tk Library Procedures</refmiscinfo>
</refmeta>
<refnamediv>
<refname>Tk_GetSelection</refname>
<refpurpose>retrieve the contents of a selection</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv xml:id='synopsis'>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;tk.h&gt;

</funcsynopsisinfo>
<funcprototype>
<funcdef>int <function>Tk_GetSelection</function></funcdef>
<paramdef><parameter>interp</parameter></paramdef>
<paramdef><parameter>tkwin</parameter></paramdef>
<paramdef><parameter>selection</parameter></paramdef>
<paramdef><parameter>target</parameter></paramdef>
<paramdef><parameter>proc</parameter></paramdef>
<paramdef><parameter>clientData</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>


<refsect1 xml:id='arguments'><title>ARGUMENTS</title>
<!-- .AS Tk_GetSelProc clientData -->
<informaltable>
<tgroup cols='3'>
<tbody>

<row><entry>"Tcl_Interp"</entry><entry>"*interp"</entry><entry>"in"</entry>
<entry>
<para>Interpreter to use for reporting errors.</para>
</entry>
</row>
<row><entry>Tk_Window</entry><entry>tkwin</entry><entry>in</entry>
<entry>
<para>Window on whose behalf to retrieve the selection (determines
display from which to retrieve).</para>
</entry>
</row>
<row><entry>Atom</entry><entry>selection</entry><entry>in</entry>
<entry>
<para>The name of the selection to be retrieved.</para>
</entry>
</row>
<row><entry>Atom</entry><entry>target</entry><entry>in</entry>
<entry>
<para>Form in which to retrieve selection.</para>
</entry>
</row>
<row><entry>Tk_GetSelProc</entry><entry>*proc</entry><entry>in</entry>
<entry>
<para>Procedure to invoke to process pieces of the selection as they
are retrieved.</para>
</entry>
</row>
<row><entry>ClientData</entry><entry>clientData</entry><entry>in</entry>
<entry>
<para>Arbitrary one-word value to pass to <emphasis remap='I'>proc</emphasis>.</para>
<!-- .BE -->
</entry>
</row>
</tbody>
</tgroup>
</informaltable>

</refsect1>

<refsect1 xml:id='description'><title>DESCRIPTION</title>
<para><function>Tk_GetSelection</function> retrieves the selection specified by the atom
<emphasis remap='I'>selection</emphasis> in the format specified by <emphasis remap='I'>target</emphasis>.  The
selection may actually be retrieved in several pieces; as each piece
is retrieved, <emphasis remap='I'>proc</emphasis> is called to process the piece.  <emphasis remap='I'>Proc</emphasis>
should have arguments and result that match the type
<type>Tk_GetSelProc</type>:</para>
<programlisting remap='CS'>
<funcsynopsis>
<funcprototype>
<funcdef>typedef int <function>Tk_GetSelProc</function></funcdef>
    <paramdef>ClientData <parameter>clientData</parameter></paramdef>
    <paramdef>Tcl_Interp * <parameter>interp</parameter></paramdef>
    <paramdef>char * <parameter>portion</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</programlisting> <!-- remap='CE' -->
<para>The <varname role='parameter'>clientData</varname> and <varname role='parameter'>interp</varname> parameters to <emphasis remap='I'>proc</emphasis> 
will be copies of the corresponding arguments to
<function>Tk_GetSelection</function>.  <emphasis remap='I'>Portion</emphasis> will be a pointer to
a string containing part or all of the selection.  For large
selections, <emphasis remap='I'>proc</emphasis> will be called several times with successive
portions of the selection.  The X Inter-Client Communication
Conventions Manual allows a selection to be returned in formats
other than strings, e.g. as an array of atoms or integers.  If
this happens, Tk converts the selection back into a string
before calling <emphasis remap='I'>proc</emphasis>.  If a selection is returned as an
array of atoms, Tk converts it to a string containing the atom names
separated by white space.  For any other format besides string,
Tk converts a selection to a string containing hexadecimal
values separated by white space.</para>

<para><function>Tk_GetSelection</function> returns to its caller when the selection has
been completely retrieved and processed by <emphasis remap='I'>proc</emphasis>, or when a
fatal error has occurred (e.g. the selection owner did not respond
promptly).  <function>Tk_GetSelection</function> normally returns <emphasis remap='B'>TCL_OK</emphasis>;  if
an error occurs, it returns <emphasis remap='B'>TCL_ERROR</emphasis> and leaves an error message
in <emphasis remap='I'>interp-&gt;result</emphasis>.  <emphasis remap='I'>Proc</emphasis> should also return either
<emphasis remap='B'>TCL_OK</emphasis> or <emphasis remap='B'>TCL_ERROR</emphasis>. If <emphasis remap='I'>proc</emphasis> encounters an error in dealing with the
selection, it should leave an error message in <emphasis remap='I'>interp-&gt;result</emphasis>
and return <emphasis remap='B'>TCL_ERROR</emphasis>;  this will abort the selection retrieval.</para>

</refsect1>

<refsect1 xml:id='keywords'><title>KEYWORDS</title>
<para>format, get, selection retrieval</para>
</refsect1>
</refentry>

