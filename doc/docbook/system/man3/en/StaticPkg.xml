<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- lifted from troff+man+tkman by doclifter -->
<refentry xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en' xml:id='staticpkg3'>

<!-- '\" Copyright (c) 1995\-1996 Sun Microsystems, Inc. -->

<!-- '\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES.
'\" 
'\" RCS: @(#) $Id$
'\"  -->
<refentryinfo><date>7.5</date></refentryinfo>
<refmeta>
<refentrytitle>Tcl_StaticPackage</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo class='date'>7.5</refmiscinfo>
<refmiscinfo class='source'>Tcl</refmiscinfo>
<refmiscinfo class='manual'>Tcl Library Procedures</refmiscinfo>
</refmeta>
<refnamediv>
<refname>Tcl_StaticPackage</refname>
<refpurpose>make a statically linked package available via the 'load' command</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv xml:id='synopsis'>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;tcl.h&gt;

</funcsynopsisinfo>
<funcprototype>
<funcdef><function>Tcl_StaticPackage</function></funcdef>
<paramdef><parameter>interp</parameter></paramdef>
<paramdef><parameter>pkgName</parameter></paramdef>
<paramdef><parameter>initProc</parameter></paramdef>
<paramdef><parameter>safeInitProc</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>


<refsect1 xml:id='arguments'><title>ARGUMENTS</title>
<!-- .AS Tcl_PackageInitProc *safeInitProc -->
<informaltable>
<tgroup cols='3'>
<tbody>

<row><entry>"Tcl_Interp"</entry><entry>"*interp"</entry><entry>"in"</entry>
<entry>
<para>If not NULL, points to an interpreter into which the package has
already been loaded (i.e., the caller has already invoked the
appropriate initialization procedure).  NULL means the package
has not yet been incorporated into any interpreter.</para>
</entry>
</row>
<row><entry>"const char"</entry><entry>*pkgName</entry><entry>in</entry>
<entry>
<para>Name of the package;  should be properly capitalized (first letter
upper-case, all others lower-case).</para>
</entry>
</row>
<row><entry>Tcl_PackageInitProc</entry><entry>*initProc</entry><entry>in</entry>
<entry>
<para>Procedure to invoke to incorporate this package into a trusted
interpreter.</para>
</entry>
</row>
<row><entry>Tcl_PackageInitProc</entry><entry>*safeInitProc</entry><entry>in</entry>
<entry>
<para>Procedure to call to incorporate this package into a safe interpreter
(one that will execute untrusted scripts).   NULL means the package
cannot be used in safe interpreters.</para>
<!-- .BE -->
</entry>
</row>
</tbody>
</tgroup>
</informaltable>

</refsect1>

<refsect1 xml:id='description'><title>DESCRIPTION</title>
<para>This procedure may be invoked to announce that a package has been
linked statically with a Tcl application and, optionally, that it
has already been loaded into an interpreter.
Once <function>Tcl_StaticPackage</function> has been invoked for a package, it
may be loaded into interpreters using the <emphasis remap='B'>load</emphasis> command.
<function>Tcl_StaticPackage</function> is normally invoked only by the <emphasis remap='B'>Tcl_AppInit</emphasis>
procedure for the application, not by packages for themselves
(<function>Tcl_StaticPackage</function> should only be invoked for statically
loaded packages, and code in the package itself should not need
to know whether the package is dynamically or statically loaded).</para>

<para>When the <emphasis remap='B'>load</emphasis> command is used later to load the package into
an interpreter, one of <emphasis remap='I'>initProc</emphasis> and <emphasis remap='I'>safeInitProc</emphasis> will
be invoked, depending on whether the target interpreter is safe
or not.
<emphasis remap='I'>initProc</emphasis> and <emphasis remap='I'>safeInitProc</emphasis> must both match the
following prototype:</para>
<programlisting remap='CS'>
<funcsynopsis>
<funcsynopsisinfo>
typedef int Tcl_PackageInitProc(Tcl_Interp *interp);
</funcsynopsisinfo>
</funcsynopsis>
</programlisting> <!-- remap='CE' -->
<para>The <emphasis remap='I'>interp</emphasis> argument identifies the interpreter in which the package
is to be loaded.  The initialization procedure must return <emphasis remap='B'>TCL_OK</emphasis> or
<emphasis remap='B'>TCL_ERROR</emphasis> to indicate whether or not it completed successfully; in
the event of an error it should set the interpreter's result to point to an
error message.  The result or error from the initialization procedure will
be returned as the result of the <emphasis remap='B'>load</emphasis> command that caused the
initialization procedure to be invoked.</para>

</refsect1>

<refsect1 xml:id='keywords'><title>KEYWORDS</title>
<para>initialization procedure, package, static linking</para>
</refsect1>
</refentry>

