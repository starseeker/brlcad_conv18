<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- lifted from troff+man+tkman by doclifter -->
<refentry xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en' xml:id='canvpsy3'>

<!-- '\" Copyright (c) 1994\-1996 Sun Microsystems, Inc. -->

<!-- '\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES.
'\" 
'\" RCS: @(#) $Id$
'\"  -->
<refentryinfo><date>4.0</date></refentryinfo>
<refmeta>
<refentrytitle>Tk_CanvasPs</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo class='date'>4.0</refmiscinfo>
<refmiscinfo class='source'>Tk</refmiscinfo>
<refmiscinfo class='manual'>Tk Library Procedures</refmiscinfo>
</refmeta>
<refnamediv>
<refname>Tk_CanvasPsY</refname>
<refname>Tk_CanvasPsBitmap</refname>
<refname>Tk_CanvasPsColor</refname>
<refname>Tk_CanvasPsFont</refname>
<refname>Tk_CanvasPsPath</refname>
<refname>Tk_CanvasPsStipple</refname>
<refpurpose>utility procedures for generating Postscript for canvases</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv xml:id='synopsis'>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;tk.h&gt;

</funcsynopsisinfo>
<funcprototype>
<funcdef>double <function>Tk_CanvasPsY</function></funcdef>
<paramdef><parameter>canvas</parameter></paramdef>
<paramdef><parameter>canvasY</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tk_CanvasPsBitmap</function></funcdef>
<paramdef><parameter>interp</parameter></paramdef>
<paramdef><parameter>canvas</parameter></paramdef>
<paramdef><parameter>bitmap</parameter></paramdef>
<paramdef><parameter>x</parameter></paramdef>
<paramdef><parameter>y</parameter></paramdef>
<paramdef><parameter>width</parameter></paramdef>
<paramdef><parameter>height</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tk_CanvasPsColor</function></funcdef>
<paramdef><parameter>interp</parameter></paramdef>
<paramdef><parameter>canvas</parameter></paramdef>
<paramdef><parameter>colorPtr</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tk_CanvasPsFont</function></funcdef>
<paramdef><parameter>interp</parameter></paramdef>
<paramdef><parameter>canvas</parameter></paramdef>
<paramdef><parameter>tkFont</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef><function>Tk_CanvasPsPath</function></funcdef>
<paramdef><parameter>interp</parameter></paramdef>
<paramdef><parameter>canvas</parameter></paramdef>
<paramdef><parameter>coordPtr</parameter></paramdef>
<paramdef><parameter>numPoints</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tk_CanvasPsStipple</function></funcdef>
<paramdef><parameter>interp</parameter></paramdef>
<paramdef><parameter>canvas</parameter></paramdef>
<paramdef><parameter>bitmap</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>


<refsect1 xml:id='arguments'><title>ARGUMENTS</title>
<!-- .AS unsigned int numPoints -->
<informaltable>
<tgroup cols='3'>
<tbody>

<row><entry>"Tk_Canvas"</entry><entry>"canvas"</entry><entry>"in"</entry>
<entry>
<para>A token that identifies a canvas widget for which Postscript is
being generated.</para>
</entry>
</row>
<row><entry>double</entry><entry>canvasY</entry><entry>in</entry>
<entry>
<para>Y-coordinate in the space of the canvas.</para>
</entry>
</row>
<row><entry>Tcl_Interp</entry><entry>*interp</entry><entry>in/out</entry>
<entry>
<para>A Tcl interpreter;  Postscript is appended to its result, or the
result may be replaced with an error message.</para>
</entry>
</row>
<row><entry>Pixmap</entry><entry>bitmap</entry><entry>in</entry>
<entry>
<para>Bitmap to use for generating Postscript.</para>
</entry>
</row>
<row><entry>int</entry><entry>x</entry><entry>in</entry>
<entry>
<para>X-coordinate within <emphasis remap='I'>bitmap</emphasis> of left edge of region to output.</para>
</entry>
</row>
<row><entry>int</entry><entry>y</entry><entry>in</entry>
<entry>
<para>Y-coordinate within <emphasis remap='I'>bitmap</emphasis> of top edge of region to output.</para>
</entry>
</row>
<row><entry>"int"</entry><entry>width</entry><entry>in</entry>
<entry>
<para>Width of region of bitmap to output, in pixels.</para>
</entry>
</row>
<row><entry>"int"</entry><entry>height</entry><entry>in</entry>
<entry>
<para>Height of region of bitmap to output, in pixels.</para>
</entry>
</row>
<row><entry>XColor</entry><entry>*colorPtr</entry><entry>in</entry>
<entry>
<para>Information about color value to set in Postscript.</para>
</entry>
</row>
<row><entry>Tk_Font</entry><entry>tkFont</entry><entry>in</entry>
<entry>
<para>Font for which Postscript is to be generated.</para>
</entry>
</row>
<row><entry>double</entry><entry>*coordPtr</entry><entry>in</entry>
<entry>
<para>Pointer to an array of coordinates for one or more
points specified in canvas coordinates.
The order of values in <emphasis remap='I'>coordPtr</emphasis> is x1, y1, x2, y2, x3, y3,
and so on.</para>
</entry>
</row>
<row><entry>int</entry><entry>numPoints</entry><entry>in</entry>
<entry>
<para>Number of points at <emphasis remap='I'>coordPtr</emphasis>.</para>
<!-- .BE -->
</entry>
</row>
</tbody>
</tgroup>
</informaltable>

</refsect1>

<refsect1 xml:id='description'><title>DESCRIPTION</title>
<para>These procedures are called by canvas type managers to carry out
common functions related to generating Postscript.
Most of the procedures take a <emphasis remap='I'>canvas</emphasis> argument, which
refers to a canvas widget for which Postscript is being
generated.</para>

<para><function>Tk_CanvasPsY</function> takes as argument a y-coordinate in the space of
a canvas and returns the value that should be used for that point
in the Postscript currently being generated for <emphasis remap='I'>canvas</emphasis>.
Y coordinates require transformation because Postscript uses an
origin at the lower-left corner whereas X uses an origin at the
upper-left corner.
Canvas x coordinates can be used directly in Postscript without
transformation.</para>

<para><function>Tk_CanvasPsBitmap</function> generates Postscript to describe a region
of a bitmap.
The Postscript is generated in proper image data format for Postscript,
i.e., as data between angle brackets, one bit per pixel.
The Postscript is appended to <emphasis remap='I'>interp-&gt;result</emphasis> and <emphasis remap='B'>TCL_OK</emphasis> is returned
unless an error occurs, in which case <emphasis remap='B'>TCL_ERROR</emphasis> is returned and
<emphasis remap='I'>interp-&gt;result</emphasis> is overwritten with an error message.</para>

<para><function>Tk_CanvasPsColor</function> generates Postscript to set the current color
to correspond to its <emphasis remap='I'>colorPtr</emphasis> argument, taking into account any
color map specified in the <emphasis remap='B'>postscript</emphasis> command.
It appends the Postscript to <emphasis remap='I'>interp-&gt;result</emphasis> and returns
<emphasis remap='B'>TCL_OK</emphasis> unless an error occurs, in which case <emphasis remap='B'>TCL_ERROR</emphasis> is returned and
<emphasis remap='I'>interp-&gt;result</emphasis> is overwritten with an error message.</para>

<para><function>Tk_CanvasPsFont</function> generates Postscript that sets the current font
to match <emphasis remap='I'>tkFont</emphasis> as closely as possible.
<function>Tk_CanvasPsFont</function> takes into account any font map specified
in the <emphasis remap='B'>postscript</emphasis> command, and it does
the best it can at mapping X fonts to Postscript fonts.
It appends the Postscript to <emphasis remap='I'>interp-&gt;result</emphasis> and returns <emphasis remap='B'>TCL_OK</emphasis>
unless an error occurs, in which case <emphasis remap='B'>TCL_ERROR</emphasis> is returned and
<emphasis remap='I'>interp-&gt;result</emphasis> is overwritten with an error message.</para>

<para><function>Tk_CanvasPsPath</function> generates Postscript to set the current path
to the set of points given by <emphasis remap='I'>coordPtr</emphasis> and <emphasis remap='I'>numPoints</emphasis>.
It appends the resulting Postscript to <emphasis remap='I'>interp-&gt;result</emphasis>.</para>

<para><function>Tk_CanvasPsStipple</function> generates Postscript that will fill the
current path in stippled fashion.
It uses <emphasis remap='I'>bitmap</emphasis> as the stipple pattern and the current Postscript
color;  ones in the stipple bitmap are drawn in the current color, and
zeroes are not drawn at all.
The Postscript is appended to <emphasis remap='I'>interp-&gt;result</emphasis> and <emphasis remap='B'>TCL_OK</emphasis> is
returned, unless an error occurs, in which case <emphasis remap='B'>TCL_ERROR</emphasis> is returned and
<emphasis remap='I'>interp-&gt;result</emphasis> is overwritten with an error message.</para>

</refsect1>

<refsect1 xml:id='keywords'><title>KEYWORDS</title>
<para>bitmap, canvas, color, font, path, Postscript, stipple</para>
</refsect1>
</refentry>

