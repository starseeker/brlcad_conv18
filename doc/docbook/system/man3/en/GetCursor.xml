<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- lifted from troff+man+tkman by doclifter -->
<refentry xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en' xml:id='getcursor3'>

<!-- '\" Copyright (c) 1990 The Regents of the University of California.
'\" Copyright (c) 1994\-1998 Sun Microsystems, Inc. -->

<!-- '\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES.
'\" 
'\" RCS: @(#) $Id$
'\"  -->
<refentryinfo><date>8.1</date></refentryinfo>
<refmeta>
<refentrytitle>Tk_AllocCursorFromObj</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo class='date'>8.1</refmiscinfo>
<refmiscinfo class='source'>Tk</refmiscinfo>
<refmiscinfo class='manual'>Tk Library Procedures</refmiscinfo>
</refmeta>
<refnamediv>
<refname>Tk_AllocCursorFromObj</refname>
<refname>Tk_GetCursor</refname>
<refname>Tk_GetCursorFromObj</refname>
<refname>Tk_GetCursorFromData</refname>
<refname>Tk_NameOfCursor</refname>
<refname>Tk_FreeCursorFromObj</refname>
<refname>Tk_FreeCursor</refname>
<refpurpose>maintain database of cursors</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv xml:id='synopsis'>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;tk.h&gt;

</funcsynopsisinfo>
<funcprototype>
<funcdef>Tk_Cursor <function>Tk_AllocCursorFromObj</function></funcdef>
<paramdef><parameter>interp</parameter></paramdef>
<paramdef><parameter>tkwin</parameter></paramdef>
<paramdef><parameter>objPtr</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>Tk_Cursor <function>Tk_GetCursor</function></funcdef>
<paramdef><parameter>interp</parameter></paramdef>
<paramdef><parameter>tkwin</parameter></paramdef>
<paramdef><parameter>name</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>Tk_Cursor <function>Tk_GetCursorFromObj</function></funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
<paramdef><parameter>objPtr</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>Tk_Cursor <function>Tk_GetCursorFromData</function></funcdef>
<paramdef><parameter>interp</parameter></paramdef>
<paramdef><parameter>tkwin</parameter></paramdef>
<paramdef><parameter>source</parameter></paramdef>
<paramdef><parameter>mask</parameter></paramdef>
<paramdef><parameter>width</parameter></paramdef>
<paramdef><parameter>height</parameter></paramdef>
<paramdef><parameter>xHot</parameter></paramdef>
<paramdef><parameter>yHot</parameter></paramdef>
<paramdef><parameter>fg</parameter></paramdef>
<paramdef><parameter>bg</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>const char *<function>Tk_NameOfCursor</function></funcdef>
<paramdef><parameter>display</parameter></paramdef>
<paramdef><parameter>cursor</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef><function>Tk_FreeCursorFromObj</function></funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
<paramdef><parameter>objPtr</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef><function>Tk_FreeCursor</function></funcdef>
<paramdef><parameter>display</parameter></paramdef>
<paramdef><parameter>cursor</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>


<refsect1 xml:id='arguments'><title>ARGUMENTS</title>
<!-- .AS unsigned long *pixelPtr -->
<informaltable>
<tgroup cols='3'>
<tbody>

<row><entry>"Tcl_Interp"</entry><entry>"*interp"</entry><entry>"in"</entry>
<entry>
<para>Interpreter to use for error reporting.</para>
</entry>
</row>
<row><entry>Tk_Window</entry><entry>tkwin</entry><entry>in</entry>
<entry>
<para>Token for window in which the cursor will be used.</para>
</entry>
</row>
<row><entry>Tcl_Obj</entry><entry>*objPtr</entry><entry>in/out</entry>
<entry>
<para>Description of cursor;  see below for possible values.  Internal rep will be
modified to cache pointer to corresponding Tk_Cursor.</para>
</entry>
</row>
<row><entry>char</entry><entry>*name</entry><entry>in</entry>
<entry>
<para>Same as <emphasis remap='I'>objPtr</emphasis> except description of cursor is passed as a string and
resulting Tk_Cursor is not cached.</para>
</entry>
</row>
<row><entry>"const char"</entry><entry>*source</entry><entry>in</entry>
<entry>
<para>Data for cursor cursor, in standard cursor format.</para>
</entry>
</row>
<row><entry>"const char"</entry><entry>*mask</entry><entry>in</entry>
<entry>
<para>Data for mask cursor, in standard cursor format.</para>
</entry>
</row>
<row><entry>"int"</entry><entry>width</entry><entry>in</entry>
<entry>
<para>Width of <emphasis remap='I'>source</emphasis> and <emphasis remap='I'>mask</emphasis>.</para>
</entry>
</row>
<row><entry>"int"</entry><entry>height</entry><entry>in</entry>
<entry>
<para>Height of <emphasis remap='I'>source</emphasis> and <emphasis remap='I'>mask</emphasis>.</para>
</entry>
</row>
<row><entry>"int"</entry><entry>xHot</entry><entry>in</entry>
<entry>
<para>X-location of cursor hot-spot.</para>
</entry>
</row>
<row><entry>"int"</entry><entry>yHot</entry><entry>in</entry>
<entry>
<para>Y-location of cursor hot-spot.</para>
</entry>
</row>
<row><entry>Tk_Uid</entry><entry>fg</entry><entry>in</entry>
<entry>
<para>Textual description of foreground color for cursor.</para>
</entry>
</row>
<row><entry>Tk_Uid</entry><entry>bg</entry><entry>in</entry>
<entry>
<para>Textual description of background color for cursor.</para>
</entry>
</row>
<row><entry>Display</entry><entry>*display</entry><entry>in</entry>
<entry>
<para>Display for which <emphasis remap='I'>cursor</emphasis> was allocated.</para>
</entry>
</row>
<row><entry>Tk_Cursor</entry><entry>cursor</entry><entry>in</entry>
<entry>
<para>Opaque Tk identifier for cursor.  If passed to <function>Tk_FreeCursor</function>, must
have been returned by some previous call to <function>Tk_GetCursor</function> or
<function>Tk_GetCursorFromData</function>.</para>
<!-- .BE -->
</entry>
</row>
</tbody>
</tgroup>
</informaltable>

</refsect1>

<refsect1 xml:id='description'><title>DESCRIPTION</title>
<para>These procedures manage a collection of cursors
being used by an application.  The procedures allow cursors to be
re-used efficiently, thereby avoiding server overhead, and also
allow cursors to be named with character strings.</para>

<para><function>Tk_AllocCursorFromObj</function> takes as argument an object describing a
cursor, and returns an opaque Tk identifier for a cursor corresponding
to the description.  It re-uses an existing cursor if possible and
creates a new one otherwise.  <function>Tk_AllocCursorFromObj</function> caches
information about the return value in <emphasis remap='I'>objPtr</emphasis>, which speeds up
future calls to procedures such as <function>Tk_AllocCursorFromObj</function> and
<function>Tk_GetCursorFromObj</function>. If an error occurs in creating the cursor,
such as when <emphasis remap='I'>objPtr</emphasis> refers to a non-existent file, then <emphasis remap='B'>None</emphasis>
is returned and an error message will be stored in <emphasis remap='I'>interp</emphasis>'s result
if <emphasis remap='I'>interp</emphasis> is not NULL.  <emphasis remap='I'>ObjPtr</emphasis> must contain a standard Tcl
list with one of the following forms:</para>
<variablelist remap='TP'>
  <varlistentry>
  <term><emphasis remap='I'>name</emphasis> [<emphasis remap='I'>fgColor</emphasis> [<emphasis remap='I'>bgColor</emphasis>]]</term>
  <listitem>
<para><emphasis remap='I'>Name</emphasis> is the name of a cursor in the standard X cursor cursor,
i.e., any of the names defined in <emphasis remap='B'>cursorcursor.h</emphasis>, without
the <emphasis remap='B'>XC_</emphasis>.  Some example values are <emphasis remap='B'>X_cursor</emphasis>, <emphasis remap='B'>hand2</emphasis>,
or <emphasis remap='B'>left_ptr</emphasis>.  Appendix B of
<quote>The X Window System</quote>
by Scheifler &amp; Gettys has illustrations showing what each of these
cursors looks like.  If <emphasis remap='I'>fgColor</emphasis> and <emphasis remap='I'>bgColor</emphasis> are both
specified, they give the foreground and background colors to use
for the cursor (any of the forms acceptable to <emphasis remap='B'>Tk_GetColor</emphasis>
may be used).  If only <emphasis remap='I'>fgColor</emphasis> is specified, then there
will be no background color:  the background will be transparent.
If no colors are specified, then the cursor
will use black for its foreground color and white for its background
color.</para>
  <blockquote remap='RS'>

<para>The Macintosh version of Tk supports all of the X cursors and
will also accept any of the standard Mac cursors
including <emphasis remap='B'>ibeam</emphasis>, <emphasis remap='B'>crosshair</emphasis>, <emphasis remap='B'>watch</emphasis>, <emphasis remap='B'>plus</emphasis>, and
<emphasis remap='B'>arrow</emphasis>.  In addition, Tk will load Macintosh cursor resources of
the types <emphasis remap='B'>crsr</emphasis> (color) and <emphasis remap='B'>CURS</emphasis> (black and white) by the
name of the resource.  The application and all its open
dynamic library's resource files will be searched for the named
cursor.  If there are conflicts color cursors will always be loaded
in preference to black and white cursors.
    </para></blockquote> <!-- remap='RE' -->
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>@</emphasis><emphasis remap='I'>sourceName maskName fgColor bgColor</emphasis></term>
  <listitem>
<para>In this form, <emphasis remap='I'>sourceName</emphasis> and <emphasis remap='I'>maskName</emphasis> are the names of
files describing cursors for the cursor's source bits and mask.
Each file must be in standard X11 or X10 cursor format.
<emphasis remap='I'>FgColor</emphasis> and <emphasis remap='I'>bgColor</emphasis> 
indicate the colors to use for the
cursor, in any of the forms acceptable to <emphasis remap='B'>Tk_GetColor</emphasis>.  This
form of the command will not work on Macintosh or Windows computers.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>@</emphasis><emphasis remap='I'>sourceName fgColor</emphasis></term>
  <listitem>
<para>This form is similar to the one above, except that the source is
used as mask also.  This means that the cursor's background is
transparent.  This form of the command will not work on Macintosh
or Windows computers.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>@</emphasis><emphasis remap='I'>sourceName</emphasis></term>
  <listitem>
<para>This form only works on Windows, and will load a Windows system
cursor (<markup>.ani</markup> or <markup>.cur</markup>) from the file specified in
<emphasis remap='I'>sourceName</emphasis>.</para>
  </listitem>
  </varlistentry>
</variablelist>

<para><function>Tk_GetCursor</function> is identical to <function>Tk_AllocCursorFromObj</function> except
that the description of the cursor is specified with a string instead
of an object.  This prevents <function>Tk_GetCursor</function> from caching the
return value, so <function>Tk_GetCursor</function> is less efficient than
<function>Tk_AllocCursorFromObj</function>.</para>

<para><function>Tk_GetCursorFromObj</function> returns the token for an existing cursor, given
the window and description used to create the cursor.
<function>Tk_GetCursorFromObj</function> does not actually create the cursor; the cursor
must already have been created with a previous call to
<function>Tk_AllocCursorFromObj</function> or <function>Tk_GetCursor</function>.  The return
value is cached in <emphasis remap='I'>objPtr</emphasis>, which speeds up
future calls to <function>Tk_GetCursorFromObj</function> with the same <emphasis remap='I'>objPtr</emphasis>
and <emphasis remap='I'>tkwin</emphasis>.</para>

<para><function>Tk_GetCursorFromData</function> allows cursors to be created from
in-memory descriptions of their source and mask cursors.  <emphasis remap='I'>Source</emphasis>
points to standard cursor data for the cursor's source bits, and
<emphasis remap='I'>mask</emphasis> points to standard cursor data describing
which pixels of <emphasis remap='I'>source</emphasis> are to be drawn and which are to be
considered transparent.  <emphasis remap='I'>Width</emphasis> and <emphasis remap='I'>height</emphasis> give the
dimensions of the cursor, <emphasis remap='I'>xHot</emphasis> and <emphasis remap='I'>yHot</emphasis> indicate the
location of the cursor's hot-spot (the point that is reported when
an event occurs), and <emphasis remap='I'>fg</emphasis> and <emphasis remap='I'>bg</emphasis> describe the cursor's
foreground and background colors textually (any of the forms
suitable for <emphasis remap='B'>Tk_GetColor</emphasis> may be used).  Typically, the
arguments to <function>Tk_GetCursorFromData</function> are created by including
a cursor file directly into the source code for a program, as in
the following example:</para>
<programlisting remap='CS'>
<funcsynopsis>
<funcsynopsisinfo>
Tk_Cursor cursor;
#include "source.cursor"
#include "mask.cursor"
</funcsynopsisinfo>
</funcsynopsis>
cursor = Tk_GetCursorFromData(interp, tkwin, source_bits,
    mask_bits, source_width, source_height, source_x_hot,
    source_y_hot, Tk_GetUid("red"), Tk_GetUid("blue"));
</programlisting> <!-- remap='CE' -->
<para>Under normal conditions <function>Tk_GetCursorFromData</function>
will return an identifier for the requested cursor.  If an error
occurs in creating the cursor then <emphasis remap='B'>None</emphasis> is returned and an error
message will be stored in <emphasis remap='I'>interp</emphasis>'s result.</para>

<para><function>Tk_AllocCursorFromObj</function>, <function>Tk_GetCursor</function>, and
<function>Tk_GetCursorFromData</function> maintain a
database of all the cursors they have created.  Whenever possible,
a call to <function>Tk_AllocCursorFromObj</function>, <function>Tk_GetCursor</function>, or
<function>Tk_GetCursorFromData</function> will
return an existing cursor rather than creating a new one.  This
approach can substantially reduce server overhead, so the Tk
procedures should generally be used in preference to Xlib procedures
like <emphasis remap='B'>XCreateFontCursor</emphasis> or <emphasis remap='B'>XCreatePixmapCursor</emphasis>, which
create a new cursor on each call.  The Tk procedures are also more
portable than the lower-level X procedures.</para>

<para>The procedure <function>Tk_NameOfCursor</function> is roughly the inverse of
<function>Tk_GetCursor</function>.  If its <emphasis remap='I'>cursor</emphasis> argument was created
by <function>Tk_GetCursor</function>, then the return value is the <emphasis remap='I'>name</emphasis>
argument that was passed to <function>Tk_GetCursor</function> to create the
cursor.  If <emphasis remap='I'>cursor</emphasis> was created by a call to <function>Tk_GetCursorFromData</function>,
or by any other mechanism, then the return value is a hexadecimal string
giving the X identifier for the cursor.
Note:  the string returned by <function>Tk_NameOfCursor</function> is
only guaranteed to persist until the next call to
<function>Tk_NameOfCursor</function>.  Also, this call is not portable except for
cursors returned by <function>Tk_GetCursor</function>.</para>

<para>When a cursor returned by <function>Tk_AllocCursorFromObj</function>, <function>Tk_GetCursor</function>,
or <function>Tk_GetCursorFromData</function>
is no longer needed, <function>Tk_FreeCursorFromObj</function> or
<function>Tk_FreeCursor</function> should be called to release it.
For <function>Tk_FreeCursorFromObj</function> the cursor to release is specified
with the same information used to create it; for
<function>Tk_FreeCursor</function> the cursor to release is specified
with its Tk_Cursor token.
There should be exactly one call to <function>Tk_FreeCursor</function> for
each call to <function>Tk_AllocCursorFromObj</function>, <function>Tk_GetCursor</function>,
or <function>Tk_GetCursorFromData</function>.</para>

</refsect1>

<refsect1 xml:id='bugs'><title>BUGS</title>
<para>In determining whether an existing cursor can be used to satisfy
a new request, <function>Tk_AllocCursorFromObj</function>, <function>Tk_GetCursor</function>,
and <function>Tk_GetCursorFromData</function>
consider only the immediate values of their arguments.  For
example, when a file name is passed to <function>Tk_GetCursor</function>,
<function>Tk_GetCursor</function> will assume it is safe to re-use an existing
cursor created from the same file name:  it will not check to
see whether the file itself has changed, or whether the current
directory has changed, thereby causing the name to refer to
a different file.  Similarly, <function>Tk_GetCursorFromData</function> assumes
that if the same <emphasis remap='I'>source</emphasis> pointer is used in two different calls,
then the pointers refer to the same data;  it does not check to
see if the actual data values have changed.</para>

</refsect1>

<refsect1 xml:id='keywords'><title>KEYWORDS</title>
<para>cursor</para>
</refsect1>
</refentry>

