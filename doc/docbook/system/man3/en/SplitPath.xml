<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- lifted from troff+man+tkman by doclifter -->
<refentry xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en' xml:id='splitpath3'>

<!-- '\" Copyright (c) 1996 Sun Microsystems, Inc. -->

<!-- '\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES.
'\" 
'\" RCS: @(#) $Id$
'\"  -->
<refentryinfo><date>7.5</date></refentryinfo>
<refmeta>
<refentrytitle>Tcl_SplitPath</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo class='date'>7.5</refmiscinfo>
<refmiscinfo class='source'>Tcl</refmiscinfo>
<refmiscinfo class='manual'>Tcl Library Procedures</refmiscinfo>
</refmeta>
<refnamediv>
<refname>Tcl_SplitPath</refname>
<refname>Tcl_JoinPath</refname>
<refname>Tcl_GetPathType</refname>
<refpurpose>manipulate platform-dependent file paths</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv xml:id='synopsis'>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;tcl.h&gt;

</funcsynopsisinfo>
<funcprototype>
<funcdef><function>Tcl_SplitPath</function></funcdef>
<paramdef><parameter>path</parameter></paramdef>
<paramdef><parameter>argcPtr</parameter></paramdef>
<paramdef><parameter>argvPtr</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>char *<function>Tcl_JoinPath</function></funcdef>
<paramdef><parameter>argc</parameter></paramdef>
<paramdef><parameter>argv</parameter></paramdef>
<paramdef><parameter>resultPtr</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>Tcl_PathType <function>Tcl_GetPathType</function></funcdef>
<paramdef><parameter>path</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>


<refsect1 xml:id='arguments'><title>ARGUMENTS</title>
<!-- .AS const char *const ***argvPtr in/out -->
<informaltable>
<tgroup cols='3'>
<tbody>

<row><entry>"const char"</entry><entry>"*path"</entry><entry>"in"</entry>
<entry>
<para>File path in a form appropriate for the current platform (see the
<emphasis remap='B'>filename</emphasis> manual entry for acceptable forms for path names).</para>
</entry>
</row>
<row><entry>int</entry><entry>*argcPtr</entry><entry>out</entry>
<entry>
<para>Filled in with number of path elements in <emphasis remap='I'>path</emphasis>.</para>
</entry>
</row>
<row><entry>"const char"</entry><entry>***argvPtr</entry><entry>out</entry>
<entry>
<para><emphasis remap='I'>*argvPtr</emphasis> will be filled in with the address of an array of
pointers to the strings that are the extracted elements of <emphasis remap='I'>path</emphasis>.
There will be <emphasis remap='I'>*argcPtr</emphasis> valid entries in the array, followed by
a NULL entry.</para>
</entry>
</row>
<row><entry>int</entry><entry>argc</entry><entry>in</entry>
<entry>
<para>Number of elements in <varname role='parameter'>argv</varname>.</para>
</entry>
</row>
<row><entry>"const char *const"</entry><entry>*argv</entry><entry>in</entry>
<entry>
<para>Array of path elements to merge together into a single path.</para>
</entry>
</row>
<row><entry>Tcl_DString</entry><entry>*resultPtr</entry><entry>in/out</entry>
<entry>
<para>A pointer to an initialized <type>Tcl_DString</type> to which the result of
<function>Tcl_JoinPath</function> will be appended.</para>
<!-- .BE -->
</entry>
</row>
</tbody>
</tgroup>
</informaltable>

</refsect1>

<refsect1 xml:id='description'><title>DESCRIPTION</title>
<para>These procedures have been superceded by the objectified procedures in
the <emphasis remap='B'>FileSystem</emphasis> man page, which are more efficient.</para>

<para>These procedures may be used to disassemble and reassemble file
paths in a platform independent manner: they provide C-level access to
the same functionality as the <emphasis remap='B'>file split</emphasis>, <emphasis remap='B'>file join</emphasis>, and
<emphasis remap='B'>file pathtype</emphasis> commands.</para>

<para><function>Tcl_SplitPath</function> breaks a path into its constituent elements,
returning an array of pointers to the elements using <emphasis remap='I'>argcPtr</emphasis> and
<emphasis remap='I'>argvPtr</emphasis>.  The area of memory pointed to by <emphasis remap='I'>*argvPtr</emphasis> is
dynamically allocated; in addition to the array of pointers, it also
holds copies of all the path elements.  It is the caller's
responsibility to free all of this storage.
For example, suppose that you have called <function>Tcl_SplitPath</function> with the
following code:</para>
<programlisting remap='CS'>
<funcsynopsis>
<funcsynopsisinfo>
int argc;
char *path;
char **argv;
</funcsynopsisinfo>
</funcsynopsis>
...
<funcsynopsis>
<funcprototype>
<funcdef><function>Tcl_SplitPath</function></funcdef>
    <paramdef><parameter>string</parameter></paramdef>
    <paramdef><parameter>&amp;argc</parameter></paramdef>
    <paramdef><parameter>&amp;argv</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</programlisting> <!-- remap='CE' -->
<para>Then you should eventually free the storage with a call like the
following:</para>
<programlisting remap='CS'>
<funcsynopsis>
<funcprototype>
<funcdef><function>Tcl_Free</function></funcdef>
    <paramdef>( char *) <parameter>argv</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</programlisting> <!-- remap='CE' -->
<para><function>Tcl_JoinPath</function> is the inverse of <function>Tcl_SplitPath</function>: it takes a
collection of path elements given by <emphasis remap='I'>argc</emphasis> and <varname role='parameter'>argv</varname> and
generates a result string that is a properly constructed path. The
result string is appended to <emphasis remap='I'>resultPtr</emphasis>.  <emphasis remap='I'>ResultPtr</emphasis> must
refer to an initialized <type>Tcl_DString</type>.</para>

<para>If the result of <function>Tcl_SplitPath</function> is passed to <function>Tcl_JoinPath</function>,
the result will refer to the same location, but may not be in the same
form.  This is because <function>Tcl_SplitPath</function> and <function>Tcl_JoinPath</function>
eliminate duplicate path separators and return a normalized form for
each platform.</para>

<para><function>Tcl_GetPathType</function> returns the type of the specified <emphasis remap='I'>path</emphasis>,
where <type>Tcl_PathType</type> is one of <emphasis remap='B'>TCL_PATH_ABSOLUTE</emphasis>,
<emphasis remap='B'>TCL_PATH_RELATIVE</emphasis>, or <emphasis remap='B'>TCL_PATH_VOLUME_RELATIVE</emphasis>.  See the
<emphasis remap='B'>filename</emphasis> manual entry for a description of the path types for
each platform.</para>

</refsect1>

<refsect1 xml:id='keywords'><title>KEYWORDS</title>
<para>file, filename, join, path, split, type</para>
</refsect1>
</refentry>

