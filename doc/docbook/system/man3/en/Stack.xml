<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- lifted from troff+man+tkman by doclifter -->
<refentry xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en' xml:id='stack3'>

<!-- '\" Copyright (c) 1993\-1998  Lucent Technologies, Inc. -->

<!-- '\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES. -->

<!-- '\" RCS: $Id$ -->

<refentryinfo><date>3.0</date></refentryinfo>
<refmeta>
<refentrytitle>Itcl_InitStack</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo class='date'>3.0</refmiscinfo>
<refmiscinfo class='source'>itcl</refmiscinfo>
<refmiscinfo class='manual'>[incr Tcl] Library Procedures</refmiscinfo>
</refmeta>
<refnamediv>
<refname>Itcl_InitStack</refname>
<refname>Itcl_DeleteStack</refname>
<refname>Itcl_PushStack</refname>
<refname>Itcl_PopStack</refname>
<refname>Itcl_PeekStack</refname>
<refname>Itcl_GetStackValue</refname>
<refname>Itcl_GetStackSize</refname>
<refpurpose>Manipulate an Itcl stack object.</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv xml:id='synopsis'>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;itcl.h&gt;

</funcsynopsisinfo>
<funcprototype>
<funcdef>int <function>Itcl_InitStack</function></funcdef>
<paramdef><parameter>stack</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Itcl_DeleteStack</function></funcdef>
<paramdef><parameter>stack</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Itcl_PushStack</function></funcdef>
<paramdef><parameter>cdata</parameter></paramdef>
<paramdef><parameter>stack</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>ClientData <function>Itcl_PopStack</function></funcdef>
<paramdef><parameter>stack</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>ClientData <function>Itcl_PeekStack</function></funcdef>
<paramdef><parameter>stack</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>ClientData <function>Itcl_GetStackValue</function></funcdef>
<paramdef><parameter>stack</parameter></paramdef>
<paramdef><parameter>pos</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Itcl_GetStackSize</function></funcdef>
<paramdef><parameter>stack</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>


<refsect1 xml:id='arguments'><title>ARGUMENTS</title>
<para>Stack info structure.</para>
<informaltable>
<tgroup cols='3'>
<tbody>

<row><entry>"int"</entry><entry>"pos"</entry><entry>"in"</entry>
<entry>
<para>position in stack order from the top.</para>
</entry>
</row>
<row><entry>ClientData</entry><entry>clientData</entry><entry>in</entry>
<entry>
<para>Arbitrary one-word value to save in the stack.</para>
<!-- .BE -->
</entry>
</row>
</tbody>
</tgroup>
</informaltable>

</refsect1>

<refsect1 xml:id='description'><title>DESCRIPTION</title>
<para><function>Itcl_InitStack</function> initializes a stack structure and <function>Itcl_DeleteStack</function>
deletes it. <function>Itcl_PushStack</function> pushes the <emphasis remap='I'>cdata</emphasis> value onto the stack.
<function>Itcl_PopStack</function> removes and returns the top most <emphasis remap='I'>cdata</emphasis> value.
<function>Itcl_PeekStack</function> returns the top most value, but does not remove it.
<function>Itcl_GetStackValue</function> gets a value at some index within the stack.  Index
"0" is the first value pushed onto the stack. <function>Itcl_GetStackSize</function>
returns the count of entries on the stack.</para>

</refsect1>

<refsect1 xml:id='keywords'><title>KEYWORDS</title>
<para>stack</para>
</refsect1>
</refentry>

