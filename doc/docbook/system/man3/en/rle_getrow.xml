<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- lifted from troff+man by doclifter -->
<refentry xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en' xml:id='rle_getrow3'>
<!--  Copyright (c) 1986, 1987, University of Utah -->
<refentryinfo><date>2/2/87</date></refentryinfo>
<refmeta>
<refentrytitle>RLE_GETROW</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo class='date'>2/2/87</refmiscinfo>
<refmiscinfo class='source'>3</refmiscinfo>
</refmeta>
<refnamediv>
<refname>rle_getrow</refname>
<refpurpose>Read a scanline of pixels from an RLE file.</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv xml:id='synopsis'>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;rle.h&gt;

</funcsynopsisinfo>
<funcprototype>
<funcdef><function>rle_getrow</function></funcdef>
<paramdef><parameter>the_hdr</parameter></paramdef>
<paramdef><parameter>rows</parameter></paramdef>
</funcprototype>
<funcsynopsisinfo>

rle_hdr * the_hdr;

rle_pixel ** rows;
</funcsynopsisinfo>
</funcsynopsis>
</refsynopsisdiv>


<refsect1 xml:id='description'><title>DESCRIPTION</title>
<para><emphasis remap='I'>Rle_getrow</emphasis>
reads information for a single scanline from the input file
each time it is called.
<emphasis remap='I'>The_hdr</emphasis>
should point to the structure initialized by
<citerefentry><refentrytitle>rle_get_setup</refentrytitle><manvolnum>3</manvolnum></citerefentry>.
The array
<emphasis remap='I'>rows</emphasis>
should contain pointers to arrays of characters, into which the scanline
data will be written.  There should be as many elements in
<emphasis remap='I'>rows</emphasis>
as there are primary colors in the input file (typically 1 or 3), and the
scanline arrays must be indexable up to the maximum X coordinate, as
specified by
<emphasis remap='I'>the_hdr</emphasis>-><emphasis remap='I'>xmax</emphasis>.
<function>rle_getrow</function>
returns the y value of the scanline just read.  This will always be 1
greater than the y value from the scanline previously read, and starts at
<emphasis remap='I'>the_hdr</emphasis>-><emphasis remap='I'>ymin</emphasis>.
Only those channels enabled by
<emphasis remap='I'>the_hdr</emphasis>-><emphasis remap='I'>bits</emphasis>
will be returned.</para>
</refsect1>

<refsect1 xml:id='notes'><title>NOTES</title>
<para>If an alpha channel is present in the input and enabled (by
<emphasis remap='I'>RLE_SET_BIT</emphasis>,
see
<citerefentry><refentrytitle>rle_hdr</refentrytitle><manvolnum>3</manvolnum></citerefentry>),
then <emphasis remap='I'>rows</emphasis> should include a -1 entry.  (I.e., <emphasis remap='I'>rows[-1]</emphasis>
should point to a valid scanline array.)  The easiest way to ensure
this is to use
<citerefentry><refentrytitle>rle_row_alloc</refentrytitle><manvolnum>3</manvolnum></citerefentry>
to allocate <emphasis remap='I'>rows</emphasis>.</para>

<para><emphasis remap='I'>Rle_getrow</emphasis>
will continue to return scanlines even after the end of the input file has
been reached, incrementing the return scanline number each time it is
called.  The calling program should use some other termination criterion
(such as the scanline number reaching
<emphasis remap='I'>the_hdr</emphasis>-><emphasis remap='I'>ymax</emphasis>,
or explicitly testing testing for end of file on the input with
<emphasis remap='I'>feof(infile)</emphasis>.
The second test may fail if
<function>rle_getrow</function>
has encountered a logical EOF in the file.  The first will always work
eventually.)</para>
</refsect1>

<refsect1 xml:id='example'><title>EXAMPLE</title>
<para>The code below reads the first two
3 color scanlines of 512 pixels from an RLE file on the standard input.</para>

<literallayout remap='.nf'>
<!-- char scanline[2][3][512], *rows[3]; -->

</literallayout><informaltable pgwide='0' frame='none'>
  <tgroup cols='4' align='center'>
    <colspec colname='c1'/>
    <colspec colname='c2'/>
    <colspec colname='c3'/>
    <colspec colname='c4'/>
    <tbody>
      <row>
        <entry align='left'></entry>
        <entry align='left'>int row, i;</entry>
        <entry align='left'></entry>
        <entry align='left'></entry>
      </row>
      <row>
        <entry align='left'></entry>
        <entry align='left'>rle_dflt_hdr.rle_file = stdin;</entry>
        <entry align='left'></entry>
        <entry align='left'></entry>
      </row>
      <row>
        <entry align='left'></entry>
        <entry align='left'>rle_get_setup( &amp;rle_dflt_hdr );</entry>
        <entry align='left'></entry>
        <entry align='left'></entry>
      </row>
      <row>
        <entry align='left'></entry>
        <entry align='left'>for ( row = 0; row &lt; 2; row++ )</entry>
        <entry align='left'></entry>
        <entry align='left'></entry>
      </row>
      <row>
        <entry align='left'></entry>
        <entry align='left'>{</entry>
        <entry align='left'></entry>
        <entry align='left'></entry>
      </row>
      <row>
        <entry align='left'></entry>
        <entry align='left'></entry>
        <entry align='left'>for ( i = 0; i &lt; 3; i++ )</entry>
        <entry align='left'></entry>
      </row>
      <row>
        <entry align='left'></entry>
        <entry align='left'></entry>
        <entry align='left'></entry>
        <entry align='left'>rows[i] = scanline[row][i];</entry>
      </row>
      <row>
        <entry align='left'></entry>
        <entry align='left'></entry>
        <entry align='left'>rle_getrow( &amp;rle_dflt_hdr, rows );</entry>
        <entry align='left'></entry>
      </row>
      <row>
        <entry align='left'></entry>
        <entry align='left'>}</entry>
        <entry align='left'></entry>
        <entry align='left'></entry>
      </row>
    </tbody>
  </tgroup>
</informaltable>


</refsect1>

<refsect1 xml:id='see_also'><title>SEE ALSO</title>
<!-- .na -->
<para><citerefentry><refentrytitle>rle_hdr</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
<citerefentry><refentrytitle>rle_row_alloc</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
<citerefentry><refentrytitle>rle_row_free</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
<citerefentry><refentrytitle>rle_get_setup</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
<citerefentry><refentrytitle>rle_getraw</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
<citerefentry><refentrytitle>rle_getskip</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
<citerefentry><refentrytitle>rle_putrow</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
<citerefentry><refentrytitle>librle</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
<citerefentry><refentrytitle>RLE</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</para>
<!-- .ad b -->
</refsect1>

<refsect1 xml:id='author'><title>AUTHOR</title>
<para>Spencer W. Thomas, Todd Fuqua
<!-- .br -->
University of Utah</para>
</refsect1>
</refentry>

