<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- lifted from troff+man+tkman by doclifter -->
<refentry xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en' xml:id='getfont3'>

<!-- '\" Copyright (c) 1990\-1992 The Regents of the University of California.
'\" Copyright (c) 1994\-1998 Sun Microsystems, Inc. -->

<!-- '\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES.
'\" 
'\" RCS: @(#) $Id$
'\"  -->
<refentryinfo><date>8.1</date></refentryinfo>
<refmeta>
<refentrytitle>Tk_AllocFontFromObj</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo class='date'>8.1</refmiscinfo>
<refmiscinfo class='source'>Tk</refmiscinfo>
<refmiscinfo class='manual'>Tk Library Procedures</refmiscinfo>
</refmeta>
<refnamediv>
<refname>Tk_AllocFontFromObj</refname>
<refname>Tk_GetFont</refname>
<refname>Tk_GetFontFromObj</refname>
<refname>Tk_NameOfFont</refname>
<refname>Tk_FreeFontFromObj</refname>
<refname>Tk_FreeFont</refname>
<refpurpose>maintain database of fonts</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv xml:id='synopsis'>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;tk.h&gt;

</funcsynopsisinfo>
<funcprototype>
<funcdef>Tk_Font <function>Tk_AllocFontFromObj</function></funcdef>
<paramdef><parameter>interp</parameter></paramdef>
<paramdef><parameter>tkwin</parameter></paramdef>
<paramdef><parameter>objPtr</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>Tk_Font <function>Tk_GetFont</function></funcdef>
<paramdef><parameter>interp</parameter></paramdef>
<paramdef><parameter>tkwin</parameter></paramdef>
<paramdef><parameter>string</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>Tk_Font <function>Tk_GetFontFromObj</function></funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
<paramdef><parameter>objPtr</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>const char *<function>Tk_NameOfFont</function></funcdef>
<paramdef><parameter>tkfont</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>Tk_Font <function>Tk_FreeFontFromObj</function></funcdef>
<paramdef><parameter>tkwin</parameter></paramdef>
<paramdef><parameter>objPtr</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>void <function>Tk_FreeFont</function></funcdef>
<paramdef><parameter>tkfont</parameter></paramdef>
</funcprototype>

</funcsynopsis>
</refsynopsisdiv>


<refsect1 xml:id='arguments'><title>ARGUMENTS</title>
<!-- .AS const char *tkfont -->
<informaltable>
<tgroup cols='3'>
<tbody>

<row><entry>"Tcl_Interp"</entry><entry>"*interp"</entry><entry>"in"</entry>
<entry>
<para>Interpreter to use for error reporting.  If <emphasis remap='B'>NULL</emphasis>, then no error
messages are left after errors.</para>
</entry>
</row>
<row><entry>Tk_Window</entry><entry>tkwin</entry><entry>in</entry>
<entry>
<para>Token for window in which font will be used.</para>
</entry>
</row>
<row><entry>Tcl_Obj</entry><entry>*objPtr</entry><entry>in/out</entry>
<entry>
<para>Gives name or description of font.  See documentation
for the <emphasis remap='B'>font</emphasis> command for details on acceptable formats.
Internal rep will be modified to cache corresponding Tk_Font.</para>
</entry>
</row>
<row><entry>"const char"</entry><entry>*string</entry><entry>in</entry>
<entry>
<para>Same as <emphasis remap='I'>objPtr</emphasis> except description of font is passed as a string and
resulting Tk_Font is not cached.</para>
</entry>
</row>
<row><entry>Tk_Font</entry><entry>tkfont</entry><entry>in</entry>
<entry>
<para>Opaque font token.</para>
<!-- .BE -->
</entry>
</row>
</tbody>
</tgroup>
</informaltable>

</refsect1>

<refsect1 xml:id='description'><title>DESCRIPTION</title>
<para><function>Tk_AllocFontFromObj</function> finds the font indicated by <emphasis remap='I'>objPtr</emphasis> and
returns a token that represents the font.  The return value can be used
in subsequent calls to procedures such as <emphasis remap='B'>Tk_GetFontMetrics</emphasis>,
<emphasis remap='B'>Tk_MeasureChars</emphasis>, and <function>Tk_FreeFont</function>.  The Tk_Font token
will remain valid until
<function>Tk_FreeFontFromObj</function> or <function>Tk_FreeFont</function> is called to release it. 
<emphasis remap='I'>ObjPtr</emphasis> can contain either a symbolic name or a font description; see
the documentation for the <emphasis remap='B'>font</emphasis> command for a description of the
valid formats.  If <function>Tk_AllocFontFromObj</function> is unsuccessful (because,
for example, <emphasis remap='I'>objPtr</emphasis> did not contain a valid font specification) then it
returns <emphasis remap='B'>NULL</emphasis> and leaves an error message in <emphasis remap='I'>interp</emphasis>'s result
if <emphasis remap='I'>interp</emphasis> is not <emphasis remap='B'>NULL</emphasis>.  <function>Tk_AllocFontFromObj</function> caches
information about the return
value in <emphasis remap='I'>objPtr</emphasis>, which speeds up future calls to procedures
such as <function>Tk_AllocFontFromObj</function> and <function>Tk_GetFontFromObj</function>.</para>

<para><function>Tk_GetFont</function> is identical to <function>Tk_AllocFontFromObj</function> except
that the description of the font is specified with a string instead
of an object.  This prevents <function>Tk_GetFont</function> from caching the
matching Tk_Font, so <function>Tk_GetFont</function> is less efficient than
<function>Tk_AllocFontFromObj</function>.</para>

<para><function>Tk_GetFontFromObj</function> returns the token for an existing font, given
the window and description used to create the font.
<function>Tk_GetFontFromObj</function> does not actually create the font; the font
must already have been created with a previous call to
<function>Tk_AllocFontFromObj</function> or <function>Tk_GetFont</function>.  The return
value is cached in <emphasis remap='I'>objPtr</emphasis>, which speeds up
future calls to <function>Tk_GetFontFromObj</function> with the same <emphasis remap='I'>objPtr</emphasis>
and <emphasis remap='I'>tkwin</emphasis>.</para>

<para><function>Tk_AllocFontFromObj</function> and <function>Tk_GetFont</function> maintain
a database of all fonts they have allocated.  If
the same font is requested multiple times (e.g. by different
windows or for different purposes), then a single Tk_Font will be
shared for all uses.  The underlying resources will be freed automatically
when no-one is using the font anymore.</para>

<para>The procedure <function>Tk_NameOfFont</function> is roughly the inverse of
<function>Tk_GetFont</function>.  Given a <emphasis remap='I'>tkfont</emphasis> that was created by
<function>Tk_GetFont</function> (or <function>Tk_AllocFontFromObj</function>), the return value is
the <emphasis remap='I'>string</emphasis> argument that was
passed to <function>Tk_GetFont</function> to create the font.  The string returned by
<function>Tk_NameOfFont</function> is only guaranteed to persist until the <emphasis remap='I'>tkfont</emphasis>
is deleted.  The caller must not modify this string.</para>

<para>When a font is no longer needed,
<function>Tk_FreeFontFromObj</function> or <function>Tk_FreeFont</function> should be called to
release it.  For <function>Tk_FreeFontFromObj</function> the font to release is specified
with the same information used to create it; for
<function>Tk_FreeFont</function> the font to release is specified
with its Tk_Font token.  There should be
exactly one call to <function>Tk_FreeFontFromObj</function> or <function>Tk_FreeFont</function>
for each call to <function>Tk_AllocFontFromObj</function> or <function>Tk_GetFont</function>.</para>

</refsect1>

<refsect1 xml:id='see_also'><title>SEE ALSO</title>
<para>Tk_FontI<citerefentry><refentrytitle>d</refentrytitle><manvolnum>3</manvolnum></citerefentry></para>
</refsect1>

<refsect1 xml:id='keywords'><title>KEYWORDS</title>
<para>font</para>
</refsect1>
</refentry>

