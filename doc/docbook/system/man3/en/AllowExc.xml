<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- lifted from troff+man+tkman by doclifter -->
<refentry xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en' xml:id='allowexc3'>

<!-- '\" Copyright (c) 1989\-1993 The Regents of the University of California.
'\" Copyright (c) 1994\-1996 Sun Microsystems, Inc. -->

<!-- '\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES.
'\" 
'\" RCS: @(#) $Id$
'\"  -->
<refentryinfo><date>7.4</date></refentryinfo>
<refmeta>
<refentrytitle>Tcl_AllowExceptions</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo class='date'>7.4</refmiscinfo>
<refmiscinfo class='source'>Tcl</refmiscinfo>
<refmiscinfo class='manual'>Tcl Library Procedures</refmiscinfo>
</refmeta>
<refnamediv>
<refname>Tcl_AllowExceptions</refname>
<refpurpose>allow all exceptions in next script evaluation</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv xml:id='synopsis'>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;tcl.h&gt;

</funcsynopsisinfo>
<funcprototype>
<funcdef><function>Tcl_AllowExceptions</function></funcdef>
<paramdef><parameter>interp</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>


<refsect1 xml:id='arguments'><title>ARGUMENTS</title>
<!-- .AS Tcl_Interp *interp -->
<informaltable>
<tgroup cols='3'>
<tbody>

<row><entry>"Tcl_Interp"</entry><entry>"*interp"</entry><entry>"in"</entry>
<entry>
<para>Interpreter in which script will be evaluated.</para>
<!-- .BE -->
</entry>
</row>
</tbody>
</tgroup>
</informaltable>

</refsect1>

<refsect1 xml:id='description'><title>DESCRIPTION</title>
<para>If a script is evaluated at top-level (i.e. no other scripts are
pending evaluation when the script is invoked), and if the script
terminates with a completion code other than <emphasis remap='B'>TCL_OK</emphasis>, <emphasis remap='B'>TCL_ERROR</emphasis>
or <emphasis remap='B'>TCL_RETURN</emphasis>, then Tcl normally converts this into a <emphasis remap='B'>TCL_ERROR</emphasis>
return with an appropriate message.  The particular script
evaluation procedures of Tcl that act in the manner are
<emphasis remap='B'>Tcl_EvalObjEx</emphasis>, <emphasis remap='B'>Tcl_EvalObjv</emphasis>, <emphasis remap='B'>Tcl_Eval</emphasis>, <emphasis remap='B'>Tcl_EvalEx</emphasis>,
<emphasis remap='B'>Tcl_GlobalEval</emphasis>, <emphasis remap='B'>Tcl_GlobalEvalObj</emphasis>, <emphasis remap='B'>Tcl_VarEval</emphasis> and
<emphasis remap='B'>Tcl_VarEvalVA</emphasis>.</para> 

<para>However, if <function>Tcl_AllowExceptions</function> is invoked immediately before
calling one of those a procedures, then arbitrary completion
codes are permitted from the script, and they are returned without
modification.
This is useful in cases where the caller can deal with exceptions
such as <emphasis remap='B'>TCL_BREAK</emphasis> or <emphasis remap='B'>TCL_CONTINUE</emphasis> in a meaningful way.</para>

</refsect1>

<refsect1 xml:id='keywords'><title>KEYWORDS</title>
<para>continue, break, exception, interpreter</para>
</refsect1>
</refentry>

