<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- lifted from troff+man by doclifter -->
<refentry xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en' xml:id='rle_getraw3'>
<!--  Copyright (c) 1986, 1987, University of Utah -->
<refentryinfo><date>2/2/87</date></refentryinfo>
<refmeta>
<refentrytitle>RLE_GETRAW</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo class='date'>2/2/87</refmiscinfo>
<refmiscinfo class='source'>3</refmiscinfo>
</refmeta>
<refnamediv>
<refname>rle_getraw</refname>
<refpurpose>Read run length encoded data from an RLE file.</refpurpose>
</refnamediv>
<refnamediv>
<refname>rle_freeraw</refname>
<refpurpose>Free pixel storage allocated by rle_getraw.</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv xml:id='synopsis'>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;rle.h&gt;

#include &lt;rle_raw.h&gt;

</funcsynopsisinfo>
<funcprototype>
<funcdef>unsigned int <function>rle_getraw</function></funcdef>
<paramdef><parameter>the_hdr</parameter></paramdef>
<paramdef><parameter>scanraw</parameter></paramdef>
<paramdef><parameter>nraw</parameter></paramdef>
</funcprototype>
<funcsynopsisinfo>

rle_hdr * the_hdr;

rle_op ** scanraw;

int * nraw;

</funcsynopsisinfo>
<funcprototype>
<funcdef>void <function>rle_freeraw</function></funcdef>
<paramdef><parameter>the_hdr</parameter></paramdef>
<paramdef><parameter>scanraw</parameter></paramdef>
<paramdef><parameter>nraw</parameter></paramdef>
</funcprototype>
<funcsynopsisinfo>

rle_hdr * the_hdr;

rle_op ** scanraw;

int * nraw;
</funcsynopsisinfo>
</funcsynopsis>
</refsynopsisdiv>


<refsect1 xml:id='description'><title>DESCRIPTION</title>
<para><emphasis remap='I'>Rle_getraw</emphasis>
can be used to read information from an RLE file in the "raw" form.</para>

<para>The
<emphasis remap='I'>scanraw</emphasis>
argument is an array of pointers to arrays of
<citerefentry><refentrytitle>rle_op</refentrytitle><manvolnum>3</manvolnum></citerefentry>
structures.  Each
<emphasis remap='I'>rle_op</emphasis>
structure specifies a run or sequence of pixel values.  The array
<emphasis remap='I'>nraw</emphasis>
gives the number of
<emphasis remap='I'>rle_op</emphasis>
structures for each channel.  I.e.,
<emphasis remap='I'>nraw[i]</emphasis>
is the length of the array pointed to by
<emphasis remap='I'>scanraw[i]</emphasis>.</para>

<para>Return value is the current scanline number.  Returns 32768 at EOF.</para>

<para>Sufficient space must be allocated in the arrays of
<emphasis remap='I'>rle_op</emphasis>
structures to hold the data read from the file.  A function,
<citerefentry><refentrytitle>rle_raw_alloc</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
is provided to make this easier.  The storage required by any pixel
sequences in the input will be dynamically allocated by
<function>rle_getraw</function>.</para>

<para>The pixel storage allocated dynamically by
<citerefentry><refentrytitle>rle_getraw</refentrytitle><manvolnum>3</manvolnum></citerefentry>
must be freed to avoid memory leaks.  This is most easily accomplished
by calling
<function>rle_freeraw</function>.
The argument
<emphasis remap='I'>scanraw</emphasis>
points to an array of
<emphasis remap='I'>rle_op</emphasis>
structures, with
<emphasis remap='I'>nraw</emphasis>
indicating the number of structures in each channel.  All pixel data
arrays will be freed by the call to
<function>rle_freeraw</function>.</para>
</refsect1>

<refsect1 xml:id='example'><title>EXAMPLE</title>
<para>The usual code looks something like</para>
<literallayout remap='.nf'>
	rle_hdr in_hdr, out_hdr;
	rle_op **raw;
	int *nraw;
	while ( rle_getraw( &amp;in_hdr, raw, nraw ) != 32768 )
	{
		/* Process data. */
		rle_putraw( &amp;out_hdr, raw, nraw );
		rle_freeraw( &amp;in_hdr, raw, nraw );
	}
</literallayout> <!-- .fi -->
</refsect1>

<refsect1 xml:id='see_also'><title>SEE ALSO</title>
<!-- .na -->
<para><citerefentry><refentrytitle>rle_hdr</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
<citerefentry><refentrytitle>rle_op</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
<citerefentry><refentrytitle>rle_putraw</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
<citerefentry><refentrytitle>rle_raw_alloc</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
<citerefentry><refentrytitle>rle_raw_free</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
<citerefentry><refentrytitle>rle_getrow</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
<citerefentry><refentrytitle>rle_getskip</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
<citerefentry><refentrytitle>librle</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
<citerefentry><refentrytitle>RLE</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</para>
<!-- .ad b -->
</refsect1>

<refsect1 xml:id='author'><title>AUTHOR</title>
<para>Spencer W. Thomas
<!-- .br -->
University of Utah</para>
</refsect1>
</refentry>

