<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- lifted from troff+man+tkman by doclifter -->
<refentry xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en' xml:id='appinit3'>

<!-- '\" Copyright (c) 1993 The Regents of the University of California.
'\" Copyright (c) 1994\-1996 Sun Microsystems, Inc. -->

<!-- '\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES.
'\" 
'\" RCS: @(#) $Id$
'\"  -->
<refentryinfo><date>7.0</date></refentryinfo>
<refmeta>
<refentrytitle>Tcl_AppInit</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo class='date'>7.0</refmiscinfo>
<refmiscinfo class='source'>Tcl</refmiscinfo>
<refmiscinfo class='manual'>Tcl Library Procedures</refmiscinfo>
</refmeta>
<refnamediv>
<refname>Tcl_AppInit</refname>
<refpurpose>perform application-specific initialization</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv xml:id='synopsis'>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;tcl.h&gt;

</funcsynopsisinfo>
<funcprototype>
<funcdef>int <function>Tcl_AppInit</function></funcdef>
<paramdef><parameter>interp</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>


<refsect1 xml:id='arguments'><title>ARGUMENTS</title>
<!-- .AS Tcl_Interp *interp -->
<informaltable>
<tgroup cols='3'>
<tbody>

<row><entry>"Tcl_Interp"</entry><entry>"*interp"</entry><entry>"in"</entry>
<entry>
<para>Interpreter for the application.</para>
<!-- .BE -->
</entry>
</row>
</tbody>
</tgroup>
</informaltable>

</refsect1>

<refsect1 xml:id='description'><title>DESCRIPTION</title>
<para><function>Tcl_AppInit</function> is a
<quote>hook</quote>
procedure that is invoked by
the main programs for Tcl applications such as <emphasis remap='B'>tclsh</emphasis> and <emphasis remap='B'>wish</emphasis>.
Its purpose is to allow new Tcl applications to be created without
modifying the main programs provided as part of Tcl and Tk.
To create a new application you write a new version of
<function>Tcl_AppInit</function> to replace the default version provided by Tcl,
then link your new <function>Tcl_AppInit</function> with the Tcl library.</para>

<para><function>Tcl_AppInit</function> is invoked by <function>Tcl_Main</function> and <emphasis remap='B'>Tk_Main</emphasis>
after their own initialization and before entering the main loop
to process commands.
Here are some examples of things that <function>Tcl_AppInit</function> might do:</para>
<variablelist remap='IP'>
  <varlistentry>
  <term>[1]</term>
  <listitem>
<para>Call initialization procedures for various packages used by
the application.
Each initialization procedure adds new commands to <emphasis remap='I'>interp</emphasis>
for its package and performs other package-specific initialization.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term>[2]</term>
  <listitem>
<para>Process command-line arguments, which can be accessed from the
Tcl variables <emphasis remap='B'>argv</emphasis> and <emphasis remap='B'>argv0</emphasis> in <emphasis remap='I'>interp</emphasis>.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term>[3]</term>
  <listitem>
<para>Invoke a startup script to initialize the application.</para>
  </listitem>
  </varlistentry>
</variablelist>

<para><function>Tcl_AppInit</function> returns <emphasis remap='B'>TCL_OK</emphasis> or <emphasis remap='B'>TCL_ERROR</emphasis>.
If it returns <emphasis remap='B'>TCL_ERROR</emphasis> then it must leave an error message in
for the interpreter's result;  otherwise the result is ignored.</para>

<para>In addition to <function>Tcl_AppInit</function>, your application should also contain
a procedure <emphasis remap='B'>main</emphasis> that calls <function>Tcl_Main</function> as follows:</para>
<programlisting remap='CS'>
<funcsynopsis>
<funcprototype>
<funcdef><function>Tcl_Main</function></funcdef>
    <paramdef><parameter>argc</parameter></paramdef>
    <paramdef><parameter>argv</parameter></paramdef>
    <paramdef><parameter>Tcl_AppInit</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</programlisting> <!-- remap='CE' -->
<para>The third argument to <function>Tcl_Main</function> gives the address of the
application-specific initialization procedure to invoke.
This means that you do not have to use the name <function>Tcl_AppInit</function>
for the procedure, but in practice the name is nearly always
<function>Tcl_AppInit</function> (in versions before Tcl 7.4 the name <function>Tcl_AppInit</function>
was implicit;  there was no way to specify the procedure explicitly).
The best way to get started is to make a copy of the file
<emphasis remap='B'>tclAppInit.c</emphasis> from the Tcl library or source directory.
It already contains a <emphasis remap='B'>main</emphasis> procedure and a template for
<function>Tcl_AppInit</function> that you can modify for your application.</para>

</refsect1>

<refsect1 xml:id='keywords'><title>KEYWORDS</title>
<para>application, argument, command, initialization, interpreter</para>
</refsect1>
</refentry>

