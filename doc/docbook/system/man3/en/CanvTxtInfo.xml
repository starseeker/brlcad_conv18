<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- lifted from troff+man+tkman by doclifter -->
<refentry xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en' xml:id='canvtxtinfo3'>

<!-- '\" Copyright (c) 1994\-1996 Sun Microsystems, Inc. -->

<!-- '\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES.
'\" 
'\" RCS: @(#) $Id$
'\"  -->
<refentryinfo><date>4.0</date></refentryinfo>
<refmeta>
<refentrytitle>Tk_CanvasTextInfo</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo class='date'>4.0</refmiscinfo>
<refmiscinfo class='source'>Tk</refmiscinfo>
<refmiscinfo class='manual'>Tk Library Procedures</refmiscinfo>
</refmeta>
<refnamediv>
<refname>Tk_CanvasTextInfo</refname>
<refpurpose>additional information for managing text items in canvases</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv xml:id='synopsis'>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;tk.h&gt;

</funcsynopsisinfo>
<funcprototype>
<funcdef><function>Tk_CanvasTextInfo</function> *Tk_CanvasGetTextInfo</funcdef>
<paramdef><parameter>canvas</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>


<refsect1 xml:id='arguments'><title>ARGUMENTS</title>
<!-- .AS Tk_Canvas canvas -->
<informaltable>
<tgroup cols='3'>
<tbody>

<row><entry>"Tk_Canvas"</entry><entry>"canvas"</entry><entry>"in"</entry>
<entry>
<para>A token that identifies a particular canvas widget.</para>
<!-- .BE -->
</entry>
</row>
</tbody>
</tgroup>
</informaltable>

</refsect1>

<refsect1 xml:id='description'><title>DESCRIPTION</title>
<para>Textual canvas items are somewhat more complicated to manage than
other items, due to things like the selection and the input focus.
<emphasis remap='B'>Tk_CanvasGetTextInfo</emphasis> may be invoked by a type manager
to obtain additional information needed for items that display text.
The return value from <emphasis remap='B'>Tk_CanvasGetTextInfo</emphasis> is a pointer to
a structure that is shared between Tk and all the items that display
text.
The structure has the following form:</para>
<programlisting remap='CS'>
typedef struct Tk_CanvasTextInfo {
    Tk_3DBorder <emphasis remap='I'>selBorder</emphasis>;
    int <emphasis remap='I'>selBorderWidth</emphasis>;
    XColor *<emphasis remap='I'>selFgColorPtr</emphasis>;
    Tk_Item *<emphasis remap='I'>selItemPtr</emphasis>;
    int <emphasis remap='I'>selectFirst</emphasis>;
    int <emphasis remap='I'>selectLast</emphasis>;
    Tk_Item *<emphasis remap='I'>anchorItemPtr</emphasis>;
    int <emphasis remap='I'>selectAnchor</emphasis>;
    Tk_3DBorder <emphasis remap='I'>insertBorder</emphasis>;
    int <emphasis remap='I'>insertWidth</emphasis>;
    int <emphasis remap='I'>insertBorderWidth</emphasis>;
    Tk_Item *<emphasis remap='I'>focusItemPtr</emphasis>;
    int <emphasis remap='I'>gotFocus</emphasis>;
    int <emphasis remap='I'>cursorOn</emphasis>;
} Tk_CanvasTextInfo;
</programlisting> <!-- remap='CE' -->
<para>The <emphasis remap='B'>selBorder</emphasis> field identifies a Tk_3DBorder that should be
used for drawing the background under selected text.
<emphasis remap='I'>selBorderWidth</emphasis> gives the width of the raised border around
selected text, in pixels.
<emphasis remap='I'>selFgColorPtr</emphasis> points to an XColor that describes the foreground
color to be used when drawing selected text.
<emphasis remap='I'>selItemPtr</emphasis> points to the item that is currently selected, or
NULL if there is no item selected or if the canvas does not have the
selection.
<emphasis remap='I'>selectFirst</emphasis> and <emphasis remap='I'>selectLast</emphasis> give the indices of the first
and last selected characters in <emphasis remap='I'>selItemPtr</emphasis>, as returned by the
<emphasis remap='I'>indexProc</emphasis> for that item.
<emphasis remap='I'>anchorItemPtr</emphasis> points to the item that currently has the selection
anchor;  this is not necessarily the same as <emphasis remap='I'>selItemPtr</emphasis>.
<emphasis remap='I'>selectAnchor</emphasis> is an index that identifies the anchor position
within <emphasis remap='I'>anchorItemPtr</emphasis>.
<emphasis remap='I'>insertBorder</emphasis> contains a Tk_3DBorder to use when drawing the
insertion cursor;  <emphasis remap='I'>insertWidth</emphasis> gives the total width of the
insertion cursor in pixels, and <emphasis remap='I'>insertBorderWidth</emphasis> gives the
width of the raised  border around the insertion cursor.
<emphasis remap='I'>focusItemPtr</emphasis> identifies the item that currently has the input
focus, or NULL if there is no such item.
<emphasis remap='I'>gotFocus</emphasis> is 1 if the canvas widget has the input focus and
0 otherwise.
<emphasis remap='I'>cursorOn</emphasis> is 1 if the insertion cursor should be drawn in
<emphasis remap='I'>focusItemPtr</emphasis> and 0 if it should not be drawn;  this field
is toggled on and off by Tk to make the cursor blink.</para>

<para>The structure returned by <emphasis remap='B'>Tk_CanvasGetTextInfo</emphasis>
is shared between Tk and the type managers;  typically the type manager
calls <emphasis remap='B'>Tk_CanvasGetTextInfo</emphasis> once when an item is created and
then saves the pointer in the item's record.
Tk will update information in the Tk_CanvasTextInfo;  for example,
a <emphasis remap='B'>configure</emphasis> widget command might change the <emphasis remap='I'>selBorder</emphasis>
field, or a <emphasis remap='B'>select</emphasis> widget command might change the <emphasis remap='I'>selectFirst</emphasis>
field, or Tk might change <emphasis remap='I'>cursorOn</emphasis> in order to make the insertion
cursor flash on and off during successive redisplays.</para>

<para>Type managers should treat all of the fields of the Tk_CanvasTextInfo
structure as read-only, except for <emphasis remap='I'>selItemPtr</emphasis>, <emphasis remap='I'>selectFirst</emphasis>,
<emphasis remap='I'>selectLast</emphasis>, and <emphasis remap='I'>selectAnchor</emphasis>.
Type managers may change <emphasis remap='I'>selectFirst</emphasis>, <emphasis remap='I'>selectLast</emphasis>, and
<emphasis remap='I'>selectAnchor</emphasis> to adjust for insertions and deletions in the
item (but only if the item is the current owner of the selection or
anchor, as determined by <emphasis remap='I'>selItemPtr</emphasis> or <emphasis remap='I'>anchorItemPtr</emphasis>).
If all of the selected text in the item is deleted, the item should
set <emphasis remap='I'>selItemPtr</emphasis> to NULL to indicate that there is no longer a
selection.</para>

</refsect1>

<refsect1 xml:id='keywords'><title>KEYWORDS</title>
<para>canvas, focus, insertion cursor, selection, selection anchor, text</para>
</refsect1>
</refentry>

