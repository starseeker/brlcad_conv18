<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- lifted from troff+man+tkman by doclifter -->
<refentry xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en' xml:id='printdbl3'>

<!-- '\" Copyright (c) 1989\-1993 The Regents of the University of California.
'\" Copyright (c) 1994\-1997 Sun Microsystems, Inc. -->

<!-- '\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES.
'\" 
'\" RCS: @(#) $Id$
'\"  -->
<refentryinfo><date>8.0</date></refentryinfo>
<refmeta>
<refentrytitle>Tcl_PrintDouble</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo class='date'>8.0</refmiscinfo>
<refmiscinfo class='source'>Tcl</refmiscinfo>
<refmiscinfo class='manual'>Tcl Library Procedures</refmiscinfo>
</refmeta>
<refnamediv>
<refname>Tcl_PrintDouble</refname>
<refpurpose>Convert floating value to string</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv xml:id='synopsis'>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;tcl.h&gt;

</funcsynopsisinfo>
<funcprototype>
<funcdef><function>Tcl_PrintDouble</function></funcdef>
<paramdef><parameter>interp</parameter></paramdef>
<paramdef><parameter>value</parameter></paramdef>
<paramdef><parameter>dst</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>


<refsect1 xml:id='arguments'><title>ARGUMENTS</title>
<!-- .AS Tcl_Interp *interp out -->
<informaltable>
<tgroup cols='3'>
<tbody>

<row><entry>"Tcl_Interp"</entry><entry>"*interp"</entry><entry>"in"</entry>
<entry>
<para>Before Tcl 8.0, the <emphasis remap='B'>tcl_precision</emphasis> variable in this interpreter
controlled the conversion.  As of Tcl 8.0, this argument is ignored and
the conversion is controlled by the <emphasis remap='B'>tcl_precision</emphasis> variable
that is now shared by all interpreters.</para>
</entry>
</row>
<row><entry>double</entry><entry>value</entry><entry>in</entry>
<entry>
<para>Floating-point value to be converted.</para>
</entry>
</row>
<row><entry>char</entry><entry>*dst</entry><entry>out</entry>
<entry>
<para>Where to store the string representing <emphasis remap='I'>value</emphasis>.  Must have at
least <emphasis remap='B'>TCL_DOUBLE_SPACE</emphasis> characters of storage.</para>
<!-- .BE -->
</entry>
</row>
</tbody>
</tgroup>
</informaltable>

</refsect1>

<refsect1 xml:id='description'><title>DESCRIPTION</title>
<para><function>Tcl_PrintDouble</function> generates a string that represents the value
of <emphasis remap='I'>value</emphasis> and stores it in memory at the location given by
<emphasis remap='I'>dst</emphasis>.  It uses <emphasis remap='B'>%g</emphasis> format to generate the string, with one
special twist: the string is guaranteed to contain either a
<quote>.</quote>
or an
<quote>e</quote>
so that it does not look like an integer.  Where <emphasis remap='B'>%g</emphasis> would
generate an integer with no decimal point, <function>Tcl_PrintDouble</function> adds
<quote>.0</quote>.</para>
<!-- .VS 8.5 -->

<para>If the <emphasis remap='B'>tcl_precision</emphasis> value is non-zero, the result will have
precisely that many digits of significance.  If the value is zero
(the default), the result will have the fewest digits needed to
represent the number in such a way that <emphasis remap='B'>Tcl_NewDoubleObj</emphasis>
will generate the same number when presented with the given string.
IEEE semantics of rounding to even apply to the conversion.</para>
<!-- .VE -->

</refsect1>

<refsect1 xml:id='keywords'><title>KEYWORDS</title>
<para>conversion, double-precision, floating-point, string</para>
</refsect1>
</refentry>

