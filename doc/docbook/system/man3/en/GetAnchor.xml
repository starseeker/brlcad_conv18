<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- lifted from troff+man+tkman by doclifter -->
<refentry xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en' xml:id='getanchor3'>

<!-- '\" Copyright (c) 1990 The Regents of the University of California.
'\" Copyright (c) 1994\-1998 Sun Microsystems, Inc. -->

<!-- '\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES.
'\" 
'\" RCS: @(#) $Id$
'\"  -->
<refentryinfo><date>8.1</date></refentryinfo>
<refmeta>
<refentrytitle>Tk_GetAnchorFromObj</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo class='date'>8.1</refmiscinfo>
<refmiscinfo class='source'>Tk</refmiscinfo>
<refmiscinfo class='manual'>Tk Library Procedures</refmiscinfo>
</refmeta>
<refnamediv>
<refname>Tk_GetAnchorFromObj</refname>
<refname>Tk_GetAnchor</refname>
<refname>Tk_NameOfAnchor</refname>
<refpurpose>translate between strings and anchor positions</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv xml:id='synopsis'>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;tk.h&gt;

</funcsynopsisinfo>
<funcprototype>
<funcdef>int <function>Tk_GetAnchorFromObj</function></funcdef>
<paramdef><parameter>interp</parameter></paramdef>
<paramdef><parameter>objPtr</parameter></paramdef>
<paramdef><parameter>anchorPtr</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>Tk_GetAnchor</function></funcdef>
<paramdef><parameter>interp</parameter></paramdef>
<paramdef><parameter>string</parameter></paramdef>
<paramdef><parameter>anchorPtr</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>const char *<function>Tk_NameOfAnchor</function></funcdef>
<paramdef><parameter>anchor</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>


<refsect1 xml:id='arguments'><title>ARGUMENTS</title>
<!-- .AS Tk_Anchor *anchorPtr -->
<informaltable>
<tgroup cols='3'>
<tbody>

<row><entry>"Tcl_Interp"</entry><entry>"*interp"</entry><entry>"in"</entry>
<entry>
<para>Interpreter to use for error reporting, or NULL.</para>
</entry>
</row>
<row><entry>Tcl_Obj</entry><entry>*objPtr</entry><entry>in/out</entry>
<entry>
<para>String value contains name of anchor point:
<quote>n</quote>,
<quote>ne</quote>,
<quote>e</quote>,
<quote>se</quote>,
<quote>s</quote>,
<quote>sw</quote>,
<quote>w</quote>,
<quote>nw</quote>,
or
<quote>center</quote>;
internal rep will be modified to cache corresponding Tk_Anchor.</para>
</entry>
</row>
<row><entry>"const char"</entry><entry>*string</entry><entry>in</entry>
<entry>
<para>Same as <emphasis remap='I'>objPtr</emphasis> except description of anchor point is passed as
a string.</para>
</entry>
</row>
<row><entry>int</entry><entry>*anchorPtr</entry><entry>out</entry>
<entry>
<para>Pointer to location in which to store anchor position corresponding to
<emphasis remap='I'>objPtr</emphasis> or <emphasis remap='I'>string</emphasis>.</para>
</entry>
</row>
<row><entry>Tk_Anchor</entry><entry>anchor</entry><entry>in</entry>
<entry>
<para>Anchor position, e.g. <emphasis remap='B'>TCL_ANCHOR_CENTER</emphasis>.</para>
<!-- .BE -->
</entry>
</row>
</tbody>
</tgroup>
</informaltable>

</refsect1>

<refsect1 xml:id='description'><title>DESCRIPTION</title>
<para><function>Tk_GetAnchorFromObj</function> places in <emphasis remap='I'>*anchorPtr</emphasis> an anchor position
(enumerated type <type>Tk_Anchor</type>)
corresponding to <emphasis remap='I'>objPtr</emphasis>'s value.  The result will be one of
<emphasis remap='B'>TK_ANCHOR_N</emphasis>, <emphasis remap='B'>TK_ANCHOR_NE</emphasis>, <emphasis remap='B'>TK_ANCHOR_E</emphasis>, <emphasis remap='B'>TK_ANCHOR_SE</emphasis>,
<emphasis remap='B'>TK_ANCHOR_S</emphasis>, <emphasis remap='B'>TK_ANCHOR_SW</emphasis>, <emphasis remap='B'>TK_ANCHOR_W</emphasis>, <emphasis remap='B'>TK_ANCHOR_NW</emphasis>,
or <emphasis remap='B'>TK_ANCHOR_CENTER</emphasis>.
Anchor positions are typically used for indicating a point on an object
that will be used to position the object, e.g. <emphasis remap='B'>TK_ANCHOR_N</emphasis> means
position the top center point of the object at a particular place.</para>

<para>Under normal circumstances the return value is <emphasis remap='B'>TCL_OK</emphasis> and
<emphasis remap='I'>interp</emphasis> is unused.
If <emphasis remap='I'>string</emphasis> does not contain a valid anchor position
or an abbreviation of one of these names, <emphasis remap='B'>TCL_ERROR</emphasis> is returned,
<emphasis remap='I'>*anchorPtr</emphasis> is unmodified, and an error message is
stored in <emphasis remap='I'>interp</emphasis>'s result if <emphasis remap='I'>interp</emphasis> is not NULL.
<function>Tk_GetAnchorFromObj</function> caches information about the return
value in <emphasis remap='I'>objPtr</emphasis>, which speeds up future calls to
<function>Tk_GetAnchorFromObj</function> with the same <emphasis remap='I'>objPtr</emphasis>.</para>

<para><function>Tk_GetAnchor</function> is identical to <function>Tk_GetAnchorFromObj</function> except
that the description of the anchor is specified with a string instead
of an object.  This prevents <function>Tk_GetAnchor</function> from caching the
return value, so <function>Tk_GetAnchor</function> is less efficient than
<function>Tk_GetAnchorFromObj</function>.</para>

<para><function>Tk_NameOfAnchor</function> is the logical inverse of <function>Tk_GetAnchor</function>.
Given an anchor position such as <emphasis remap='B'>TK_ANCHOR_N</emphasis> it returns a
statically-allocated string corresponding to <emphasis remap='I'>anchor</emphasis>.
If <emphasis remap='I'>anchor</emphasis> is not a legal anchor value, then
<quote>unknown anchor position</quote>
is returned.</para>
</refsect1>

<refsect1 xml:id='keywords'><title>KEYWORDS</title>
<para>anchor position</para>
</refsect1>
</refentry>

