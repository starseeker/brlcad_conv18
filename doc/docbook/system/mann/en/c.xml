<!-- Converted by db4-upgrade version 1.0 -->

<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="c">

  <refmeta>
    <refentrytitle>C</refentrytitle>
    <manvolnum>nged</manvolnum>
    <refmiscinfo class="source">BRL-CAD</refmiscinfo>
    <refmiscinfo class="manual">BRL-CAD User Commands</refmiscinfo>
  </refmeta>

  <refnamediv xml:id="name">
    <refname>c</refname>
    <refpurpose>Creates a BRL-CAD combination with the name
    <emphasis>combination_name</emphasis>.
    </refpurpose>
  </refnamediv>

  <!-- body begins here -->
  <refsynopsisdiv xml:id="synopsis">
    <cmdsynopsis sepchar=" ">
      <command>c</command>
      <arg choice="opt" rep="norepeat">-c</arg>
      <arg choice="opt" rep="norepeat">-r</arg>
      <arg choice="req" rep="norepeat"><replaceable>combination_name</replaceable> </arg>
      <arg choice="opt" rep="norepeat"><replaceable>Boolean_expression</replaceable> </arg>
    </cmdsynopsis>
  </refsynopsisdiv>

  <refsection xml:id="description"><title>DESCRIPTION</title>

    <para>The <command>c</command> command creates a <emphasis>BRL-CAD</emphasis> combination
    with the name <emphasis>combination_name</emphasis>. The <emphasis>-r</emphasis> option
    indicates that the combination is a <emphasis>BRL-CAD </emphasis>region. The
    <emphasis>-c</emphasis> option is the default and indicates that the combination is not
    a region. The <emphasis>Boolean_expression</emphasis> allows parentheses. Where no order
    is specified, intersections are performed before subtractions or unions; then subtractions
    and unions are performed, left to right. Where there is no <emphasis>Boolean_expression</emphasis>
    and <emphasis>combination_name</emphasis>, a new
    empty combination will be created. If no <emphasis>Boolean_expression</emphasis> is provided,
    and <emphasis>combination_name</emphasis> does already exist and one of <emphasis>-c</emphasis>
    or <emphasis>-r</emphasis> is specified, then <emphasis>combination_name</emphasis> is
    flagged to agree with the indicated option. If a new  <emphasis>region</emphasis> is created
    or an existing combination is flagged as a region with this command, its region-specific
    attributes will be set according to the current defaults (see <command>regdef</command>).
    The <command>comb</command> and <command>r</command> commands may also be used to create
    combinations.
    </para>
  </refsection>

  <refsection xml:id="examples"><title>EXAMPLES</title>

    <para>
      This example shows how to use the <command>c</command> command to create a combination
      according to a given formula.
    </para>
    <example><title>Creating a combination according to a formula.</title>

      <variablelist>
	<varlistentry>
	  <term><prompt>mged&gt;</prompt> <userinput>c -c abc (a u b)-(a + d)</userinput></term>
	  <listitem>
	    <para>Creates a combination named <emphasis>abc</emphasis> according to the formula
	    <emphasis>(a u b) - (a + d)</emphasis>.
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </example>

    <example><title>Fixing a nested region.</title>

      <variablelist>
	<varlistentry>
	  <term>
         Suppose we have a situation where region2.r is unioned into region1.r, and both
         region1.r and region2.r have the region flag set, as seen in the tree below.  
          </term>


<listitem>	
      <literallayout>
      <computeroutput>
<prompt>mged&gt;</prompt> <userinput>tree region1.r</userinput>
region1.r/R
        u region2.r/R
	        u sph.s
        u comb.c/
                u arb.s
      </computeroutput>
      </literallayout>

      <para>
      This geometry has an error in that one
      region is not supposed to be combined into another using boolean operations.
      Further, suppose that one or
      more assemblies use region2.r and expect it to be a region - i.e., region2.r needs
      to remain a region with the same contents.  

      To fix this problem without disturbing other geometry using region2.r, first 
      make a combination below region2.r using the <option>w</option> flag to <command>comb</command>:
      </para>

      <literallayout>
      <computeroutput>
<prompt>mged&gt;</prompt> <userinput>c -w region2.r</userinput>
<prompt>mged&gt;</prompt> <userinput>tree region2.r</userinput>
region2.r/R
        u region2.r.c/
                  u sph.s
      </computeroutput>
      </literallayout>

      <para>
        The next step is to adjust the region1.r tree definition to reference the
        non-region combination instead of region2.r:
      </para>

      <literallayout>
      <computeroutput>
<prompt>mged&gt;</prompt> <userinput>set glob_compat_mode 0</userinput>
0
<prompt>mged&gt;</prompt> <userinput>get region1.r tree</userinput>
u {l region2.r} {l comb.c}
<prompt>mged&gt;</prompt> <userinput>adjust region1.r tree {u {l region2.r.c} {l comb.c}}</userinput>
<prompt>mged&gt;</prompt> <userinput>tree region1.r</userinput>
region1.r/R
        u region2.r.c/
                u sph.s
        u comb.c/
                u arb.s
      </computeroutput>
      </literallayout>
      
      <para>
        Because the tree is manipulated as a Tcl list, we need glob compatibility mode to be
        off on the MGED command line.  Once the tree is re-defined, region1.r no longer has
        region2.r below it, but still defines the same physical volume via region2.r.c.
      </para>

      <para>
        Optionally, the name region2.r.c can be changed to the name region2.c with 
        the <command>mvall</command> command: 
      </para>

      <literallayout>
      <computeroutput>
<prompt>mged&gt;</prompt> <userinput>mvall region2.r.c region2.c</userinput>
<prompt>mged&gt;</prompt> <userinput>tree region1.r</userinput>
region1.r/R
        u region2.c/
                u sph.s
        u comb.c/
                u arb.s
<prompt>mged&gt;</prompt> <userinput>tree region2.r</userinput>
region2.r/R
        u region2.c/
                u sph.s
      </computeroutput>
      </literallayout>
	  </listitem>
	</varlistentry>
      </variablelist>

    </example>
  </refsection>

  <refsection xml:id="author"><title>AUTHOR</title><para>BRL-CAD Team</para></refsection>

  <refsection xml:id="bug_reports"><title>BUG REPORTS</title>

    <para>
      Reports of bugs or problems should be submitted via electronic
      mail to &lt;devs@brlcad.org&gt;, or via the "cadbug.sh" script.
    </para>
  </refsection>
</refentry>
