/*
 *			libtcl/Cakefile
 */
#define SRCDIR	libtcl
#define	SRCSUFF	.c
#define MANSECTION	3

#include "../Cakefile.defs"

#if !defined(BUILD_LIBRARY)
#define TCL_OPTS	--srcdir=[[pwd]]/../SRCDIR/"unix" --quiet --cache-file cache.MTYPE \
			 --exec-prefix=BASEDIR --prefix=BASEDIR
#define PRODUCTS	libtcl.a tclsh
#define	AFTER_MAKE	/**/
#else
#define TCL_OPTS	--srcdir=[[pwd]]/../SRCDIR/"unix" --quiet --enable-shared \
			 --cache-file cache.MTYPE --exec-prefix=BASEDIR --prefix=BASEDIR
#define PRODUCTS	libtcl.so tclsh
#define SHARED_PRODUCT	libtcl.so''[[LIBVERS]]
#define	AFTER_MAKE	mv -f libtcl.so SHARED_PRODUCT ; sharedliblink.sh SHARED_PRODUCT
#endif

PRODUCTS: Makefile.MTYPE cache.MTYPE
	make `echo CAKEFLAGS | tr '\040' '\012' | grep -- -s` -f Makefile.MTYPE CAKEFLAGS

Makefile.MTYPE cache.MTYPE:		if not exist Makefile.MTYPE or not exist cache.MTYPE
	( \C\F\L\A\G\S=\"GFLAG OPTIMIZER PROFILER\"; \
		\A\F\T\E\R\_\M\A\K\E=\"AFTER_MAKE\"; \
		\R\A\N\L\I\B=\"RANLIB\"; \
		\L\D\F\L\A\G\S=\"LDFLAGS\"; \
		 export \C\F\L\A\G\S \R\A\N\L\I\B \L\D\F\L\A\G\S \A\F\T\E\R\_\M\A\K\E; \
		 ../SRCDIR/"unix"/configure TCL_OPTS; \
		../SRCDIR/fix_makefile.sh > Makefile.MTYPE)


clean&:
	make -f Makefile clean

noprod&:
	rm -rf libtcl.*

clobber&: 
	rm -f *.MTYPE *.o libtcl.* config.log config.status tclConfig.sh tclsh Makefile

install&: Makefile.MTYPE
	make -f Makefile.MTYPE install
	( cd BASEDIR/lib; AFTER_MAKE )

install-nobak&: Makefile.MTYPE
	make -f Makefile.MTYPE install
	( cd BASEDIR/lib; AFTER_MAKE )

tclsh: Makefile.MTYPE
	make -f Makefile.MTYPE tclsh

tcltest: Makefile.MTYPE
	make -f Makefile.MTYPE tcltest

test&: Makefile.MTYPE
	make -f Makefile.MTYPE test

/* dltest:			if not exist dltest
	cp -r ../SRCDIR/"unix"/dltest .
*/
