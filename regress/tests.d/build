#!/bin/sh
#
# b u i l d
# 
# This is the BRL-CAD build test script.  It take a given source of brlcad
# and builds it.
#
###
# Source function library
. `dirname $0`/library

# use machinetype.sh's naming convention instead of the default name we get
# from uname
if [ -f "${REGRESS_DIR}/${PACKAGE_NAME}/sh/machinetype.sh" ] ; then
    mt="`${REGRESS_DIR}/${PACKAGE_NAME}/sh/machinetype.sh > /dev/null 2>&1`"
    [ $? = 0 ] && ARCH="$mt"
fi
initializeVariable BRLCAD_ROOT "${REGRESS_DIR}/${PACKAGE_NAME}.${ARCH}"


start ( ) {

    # acquire an architecture lock in the package source to avoid nfs clobbering.
    if ! eval "acquireLock $REGRESS_DIR/$PACKAGE_NAME/build-$ARCH 3 10 " ; then
        bomb "Unable to obtain build-$ARCH.lock"
    fi

    __PATH="$PATH"
    PATH="${BRLCAD_ROOT}/bin:$PATH" ; export PATH

    STARTPWD="`pwd`"
    
    cd ${REGRESS_DIR}/${PACKAGE_NAME}

    ./setup.sh -s > $REGRESS_DIR/setup.log 2>&1 <<EOF
yes
EOF
    log "Setup complete"
    
    ./gen.sh -s all > $REGRESS_DIR/compilation.log 2>&1
    log "Compilation complete"
    
    ./gen.sh -s install > $REGRESS_DIR/installation.log 2>&1
    log "Installation complete"

    # restore to previous state
    cd $STARTPWD
    PATH="$__PATH" ; export PATH

    releaseLock $REGRESS_DIR/$PACKAGE_NAME/build-$ARCH
}


status ( ) {
    if [ ! -f $REGRESS_DIR/build.log ] ; then
        warn "build did not run"
        return 1
    fi
    if [ ! -f $REGRESS_DIR/setup.log ] ; then
        warn "build no setup log"
        return 1
    fi
    if [ ! -f $REGRESS_DIR/compilation.log ] ; then
        warn "build no compilation log"
        return 1
    fi
    if [ ! -f $REGRESS_DIR/installation.log ] ; then
        warn "build no installation log"
        return 1
    fi

    if [ ! "x`grep -i error $REGRESS_DIR/setup.log`" = "x" ] ; then
        warn "build Setup failed"
        return 1
    fi
    if [ ! "x`grep -i \"no such file\" $REGRESS_DIR/setup.log`" = "x" ] ; then
        warn "build Setup failed"
        return 1
    fi

    if [ ! "x`grep Error $REGRESS_DIR/compilation.log`" = "x" ] ; then
        warn "build Compilation failed"
        return 1
    fi
    if [ ! "x`grep -i \"no such file\" $REGRESS_DIR/compilation.log`" = "x" ] ; then
        warn "build Compilation failed"
        return 1
    fi

    if [ ! "x`grep Error $REGRESS_DIR/installation.log`" = "x" ] ; then
        warn "build Installation failed"
        return 1
    fi
    if [ ! "x`grep -i \"no such file\" $REGRESS_DIR/installlation.log`" = "x" ] ; then
        warn "build Installation failed"
        return 1
    fi
    log "build OK"
    return 0
}


regress $1

exit $?