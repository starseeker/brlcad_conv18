2019-12-06 14:41  starseeker

	* [r74434] src/librt/primitives/brep/brep.cpp:
	  Non-solid intersection logic is causing artifacts in NIST3
	  example raytracing - lines inside of holes and above edges.
	  Revert the change for 7.30.4 release.

2019-11-29 15:24  starseeker

	* [r74388] CHANGES:
	  Start the clock ticking on getting rid of the --old option for
	  nirt - not urgent, but we need to do it at some point for
	  cleanup/code simplification.

2019-11-28 22:41  starseeker

	* [r74375] regress/rtedge.sh:
	  Fix odd pathnames rtedge library.sh sourcing.

2019-11-26 19:16  starseeker

	* [r74371] src/mged/mged.c:
	  Shhh! Don't need this for every single event.

2019-11-26 03:49  starseeker

	* [r74369] TODO:
	  bu_dir bin didn't work when I cd'd into my home directory.

2019-11-26 00:23  starseeker

	* [r74368] TODO:
	  No bu_dir entries are listed as unimplemented, but definitely
	  need a lot of testing...

2019-11-26 00:21  starseeker

	* [r74367] CMakeLists.txt, src/libbu/dir.c:
	  CMake knows exe and lib extensions - just use that information
	  directly for bu_dir.

2019-11-25 22:29  starseeker

	* [r74366] src/libbg/lseg_lseg.c:
	  Include the header in the C file

2019-11-25 22:05  starseeker

	* [r74365] include/bg.h, include/bg/CMakeLists.txt,
	  include/bg/lseg.h:
	  Whoops - commit header

2019-11-25 21:57  starseeker

	* [r74364] src/libbg/CMakeLists.txt, src/libbg/lseg_lseg.c,
	  src/libbg/tests/CMakeLists.txt, src/libbg/tests/lseg_lseg.c:
	  Port the GeometricTools closest points on line segements routine
	  to C and vmath.h

2019-11-23 14:44  starseeker

	* [r74363] src/libbrep/cdt_mesh.h:
	  Make GCC 9 happy - was getting a -Wdeprecated-copy error

2019-11-23 07:22  brlcad

	* [r74362] TODO:
	  libfb allocation really needs to be dynamic

2019-11-23 07:22  brlcad

	* [r74361] src/libfb/fb_private.h:
	  decrease the default memory buffer size used by some framebuffer
	  types from 4GB to 2GB. the increased size was causing excessive
	  startup delays on 4GB systems. this change is still not ideal as
	  it's not dynamic or performant, but does reduce usage closer to
	  previous values at 1.6GB.

2019-11-21 21:20  starseeker

	* [r74360] src/libbrep/cdt_ovlps.cpp:
	  Checkpoint a refactor (this doesn't work right, need to compare
	  with previous commit's behavior (which does look right) to see
	  what I got wrong.)

2019-11-20 19:52  starseeker

	* [r74359] doc/pre_BRL-CAD.bib:
	  Add a few more citations that are handy.

2019-11-20 17:13  starseeker

	* [r74358] doc/CMakeLists.txt, doc/pre_BRL-CAD.bib:
	  Start another bib file to hold historical publications relevant
	  in some way to BRL-CAD but preceeding it's actual development.

2019-11-18 23:23  brlcad

	* [r74357] doc/BRL-CAD.bib:
	  randomly came across the manual to IRPREP and company, published
	  as a BRL special report in 1992 by coates and davisson. reorder
	  the 92 entries based on date.

2019-11-18 19:51  starseeker

	* [r74356] src/libbrep/cdt_ovlps.cpp:
	  Start working on what will be need for this particular type of
	  polygon growth.

2019-11-18 01:09  starseeker

	* [r74355] misc/repoconv/cvs_authormap,
	  misc/repoconv/svn2git/account-map:
	  Sync other files

2019-11-17 21:53  starseeker

	* [r74354] src/libbrep/cdt_ovlps.cpp:
	  If we have an unpaired vertex in the shared_cdt stage, try to
	  introduce the point in question into the other mesh.

2019-11-17 21:17  starseeker

	* [r74353] src/libbrep/cdt_ovlps.cpp:
	  Add a search function for the closest uedge to a point

2019-11-17 19:52  starseeker

	* [r74352] src/libbrep/cdt_ovlps.cpp:
	  In the latter processing stages, vert_isect doesn't qualify as a
	  hit.

2019-11-17 02:46  starseeker

	* [r74351] src/libbrep/cdt_ovlps.cpp:
	  More work on overlap grouping

2019-11-17 02:06  starseeker

	* [r74350] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h,
	  src/libbrep/cdt_ovlps.cpp:
	  See if the simplier intrusion flagging combined with intersection
	  testing can do what is needed. So far just building groupings of
	  related triangles.

2019-11-17 00:51  starseeker

	* [r74349] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h,
	  src/libbrep/cdt_ovlps.cpp:
	  Working with the triangle info to see how we need to filter
	  things to get the necessary input sets - may do better working
	  with the intruding triangle list and skipping the alignment logic
	  based on what I'm seeing - the plots using intruding triangles
	  correspond pretty well to what rtcheck spots, at least when the
	  triangles come in pairs.

2019-11-16 22:51  starseeker

	* [r74348] src/libbrep/cdt_ovlps.cpp:
	  Add some notes on the overall logic flow for this stage

2019-11-16 22:27  starseeker

	* [r74347] src/libbrep/cdt_ovlps.cpp:
	  Start working on the logic for assembling the shared refinement
	  polygons.

2019-11-15 23:14  starseeker

	* [r74346] src/libbrep/cdt_ovlps.cpp:
	  As implemented, refine_omeshes isn't what we need for this last
	  step. It will be more akin to the repair operation in cdt_mesh in
	  the sense of having criteria for growing the polygon, but the
	  details will be very different.

2019-11-15 23:11  starseeker

	* [r74345] src/libbrep/cdt_ovlps.cpp:
	  Iterate on the steps until each category of refinement isn't
	  changing the meshes. The final category of overlap looks like it
	  is going to need a particular shared retriangulation to assemble
	  a non-interfering triangle set - successive refinements (at least
	  simple edge splitting) isn't really guaranteed to clear the
	  problem and can introduce a lot of unnecessary triangles in the
	  process.

2019-11-15 02:44  starseeker

	* [r74344] misc/repoconv/account-map:
	  whoops, missed one

2019-11-15 02:43  starseeker

	* [r74343] misc/repoconv/account-map:
	  Fill in a few more github accounts - probably not all of them
	  yet...

2019-11-14 23:32  starseeker

	* [r74342] src/libbrep/cdt_ovlps.cpp:
	  need to rule out stale edges in refinement set...

2019-11-14 20:46  starseeker

	* [r74341] src/libbrep/cdt_ovlps.cpp:
	  splitting, but not converging

2019-11-14 20:09  starseeker

	* [r74340] src/libbrep/cdt_ovlps.cpp:
	  More adjustments to the triangle intersection checks.

2019-11-14 15:29  starseeker

	* [r74339] src/libbrep/cdt_ovlps.cpp:
	  Turn off some debugging printing

2019-11-14 15:20  starseeker

	* [r74338] src/libbrep/cdt_ovlps.cpp:
	  Rework vert adjustment code.

2019-11-14 01:32  starseeker

	* [r74337] src/libbrep/cdt_ovlps.cpp:
	  Add some notes

2019-11-14 01:16  starseeker

	* [r74336] src/libbrep/cdt_ovlps.cpp:
	  Make a stab at refactoring logic duplication out of the edge
	  processing (untested)

2019-11-14 00:47  starseeker

	* [r74335] src/libbrep/cdt_ovlps.cpp:
	  If I'm not mistaken, one of the edge cases of the intersection is
	  recognizable as the 'need to split triangle' condition. Start
	  setting up to spot that (untested.)

2019-11-13 21:30  starseeker

	* [r74334] src/libbrep/cdt_ovlps.cpp:
	  Try using the triangle center instead of the far vertex for the
	  actual test, since the opposite vertex may be 'on' the mesh and
	  report inside...

2019-11-13 21:06  starseeker

	* [r74333] src/libbrep/cdt_ovlps.cpp:
	  checkpoint

2019-11-13 19:05  starseeker

	* [r74332] src/libbrep/cdt_ovlps.cpp:
	  checkpoint

2019-11-12 22:55  starseeker

	* [r74331] src/libbrep/opennurbs_ext.cpp:
	  Tweaks to closest-point-on-curve routine.

2019-11-10 21:18  starseeker

	* [r74330] src/libbrep/cdt_ovlps.cpp:
	  tweak plotting, edge assignments

2019-11-10 18:58  starseeker

	* [r74329] src/libbrep/cdt_ovlps.cpp:
	  Work on doing more with the edge triangle intersection cases.

2019-11-09 23:55  starseeker

	* [r74328] src/libbrep/cdt_ovlps.cpp:
	  I think this is closer to what this test should be - still need
	  to id interior verts along the edges.

2019-11-09 23:32  starseeker

	* [r74327] src/libbrep/cdt_ovlps.cpp:
	  Checkpoint experiment with edge tri intersection logic

2019-11-09 23:09  starseeker

	* [r74326] src/libbrep/cdt_ovlps.cpp:
	  Make a note about an extra check we need to do in the edge
	  intersection case.

2019-11-09 22:37  starseeker

	* [r74325] src/libbrep/cdt_ovlps.cpp:
	  Color edge point refinement pts according to their
	  categorization.

2019-11-09 22:15  starseeker

	* [r74324] src/libbrep/cdt_ovlps.cpp:
	  Wrap the vert bookkeeping into a function - not sure it's right
	  yet, but this way at least we'll only have to fix it once.

2019-11-09 21:59  starseeker

	* [r74323] src/libbrep/cdt_ovlps.cpp:
	  consistency

2019-11-09 21:54  starseeker

	* [r74322] src/libbrep/cdt_ovlps.cpp:
	  While we're at it, use this step to further filter points of
	  interest.

2019-11-09 21:49  starseeker

	* [r74321] src/libbrep/cdt_ovlps.cpp:
	  Experiment with using the triangle intersection step itself to
	  detect when we need to split a brep edge.

2019-11-09 19:41  starseeker

	* [r74320] src/libbrep/cdt_ovlps.cpp:
	  Need to replace triangles before adding new verts, since the
	  bounding box calculation depends on edge information.

2019-11-09 19:21  starseeker

	* [r74319] src/libbrep/cdt_ovlps.cpp:
	  Do need the map - edge splitting introduces vertices

2019-11-09 18:45  starseeker

	* [r74318] src/libbrep/cdt_ovlps.cpp:
	  checkpoint

2019-11-08 15:24  starseeker

	* [r74317] src/libbrep/cdt_ovlps.cpp:
	  Checkpoint a significant (but still incomplete) refactor of the
	  ovlp logic - need to adjust how we're bookkeeping intersection
	  information.

2019-11-08 05:01  brlcad

	* [r74316] regress/CMakeLists.txt:
	  missed the last one

2019-11-07 21:15  starseeker

	* [r74315] src/libbrep/cdt_ovlps.cpp:
	  Use the vtree to filter points. Looking like we'll need more
	  information returned from this function than just a yes/no
	  decision.

2019-11-07 20:16  starseeker

	* [r74314] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_ovlps.cpp:
	  Start working on how to spot and flag the intersection case we
	  need to consider (not there yet)

2019-11-07 17:03  starseeker

	* [r74313] src/libbrep/cdt_ovlps.cpp:
	  gqa spots an overlap we're not detecting - need to figure out why
	  (probably over-aggressive filtering of the triangle isects...)

2019-11-07 14:54  starseeker

	* [r74312] src/libbrep/cdt_ovlps.cpp:
	  Still have some issue with the vtree incremental building and
	  updating. However, if we brute force rebuild the vtree every time
	  and get more aggressive about splitting triangles during
	  iteration, we achive in 5 passes the very first successful
	  overlap clearing convergence of the cyl-in-hole mesh refinement.

2019-11-07 14:36  starseeker

	* [r74311] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h,
	  src/libbrep/cdt_ovlps.cpp:
	  If we're doing an interior processing step but the point ends up
	  at a brep face edge, skip - we'll just end up making degenerate
	  triangles doing this.

2019-11-06 21:03  starseeker

	* [r74310] src/libbrep/cdt_ovlps.cpp:
	  Mappings aren't right - not getting the new edges with the new
	  split point marked correctly as boundary edges. I don't think
	  this is right either, but it identifies the problem area.

2019-11-06 18:30  starseeker

	* [r74309] src/libbrep/cdt_ovlps.cpp:
	  Might as well fail fast and hard on validity failure - there's
	  not point in proceeding.

2019-11-06 16:55  starseeker

	* [r74308] src/libbrep/cdt_ovlps.cpp:
	  Ah! Of course. After adjusting vertices, their original vtree
	  boxes are invalid and need to be updated.

2019-11-06 16:29  brlcad

	* [r74307] src/liboptical/sh_text.c:
	  unnecessary forward decl

2019-11-06 16:28  brlcad

	* [r74306] src/conv/iges/g-iges.c:
	  log stats to stderr like bu_log does, so it's separate from
	  stdout iges data with output is redirected.

2019-11-06 14:43  starseeker

	* [r74305] src/libbrep/RTree.h, src/libbrep/cdt_ovlps.cpp:
	  Validation test was too generous - boxes may overlap without
	  containing the actual point in question.

2019-11-06 08:50  brlcad

	* [r74304] regress/CMakeLists.txt:
	  update the list of files produced by iges regression test

2019-11-06 08:47  brlcad

	* [r74303] regress/iges.sh, regress/library.sh:
	  the iges regression was actually doing a bunch of work, ignoring
	  it all, and only failing if the singular m35 region tested at the
	  end failed. fixed the STATUS propagation so now all issues are
	  detected and reported correctly. alas, this means they cannot be
	  turned on because there are problems that need to be fixed --
	  they are currently commented out with FIXME notes.

2019-11-06 00:36  starseeker

	* [r74302] src/libbrep/RTree.h, src/libbrep/cdt_ovlps.cpp:
	  Temporary (and ugly) visualization mechanism for RTree boxes.
	  Need to inspect what's going on as we test and manipulate the
	  boxes.

2019-11-05 23:56  brlcad

	* [r74301] regress/library.sh, regress/red.sh:
	  rename for brevity

2019-11-05 23:12  brlcad

	* [r74300] regress/iges.sh:
	  add additional error checking to the iges testing. fix error
	  introduced during prior refactoring where we are intentionally
	  testing whether g-iges redirected output works. only caught
	  triggered failure on distcheck-full.

2019-11-05 22:30  brlcad

	* [r74299] regress/library.sh:
	  symmetry, show the end

2019-11-05 22:27  brlcad

	* [r74298] regress/library.sh:
	  document the two file comparison functions, define behavior and
	  add additional tests to make sure the filename args are as
	  expected.

2019-11-05 20:47  brlcad

	* [r74297] regress/library.sh, regress/red.sh:
	  move file comparison functions from red.sh to library.sh since
	  they are generally useful, so other tests can use them.

2019-11-05 20:45  brlcad

	* [r74296] regress/red.sh:
	  replacing FAILURES with STATUS. uncovered a bug; test was always
	  returning true as FAILED is not a variable defined.

2019-11-05 20:42  brlcad

	* [r74295] regress/red.sh:
	  make message agnostic to red

2019-11-04 23:04  starseeker

	* [r74294] src/libbrep/cdt_ovlps.cpp:
	  At the failure point, explicitly test for the bbox reported
	  during successful validation of the vtree corresponding to the
	  point we should be close to. That is found, but the candidate
	  isn't, and at least visually they both seem to be centered around
	  the point - only difference is the box around the point not
	  succeeding in the search is somewhat smaller. Trying to narrow in
	  on the cause of failure...

2019-11-04 22:39  starseeker

	* [r74293] src/libbrep/cdt_ovlps.cpp:
	  Use the closest pnt bbox for the initial search as well. Still
	  not finding the existing point, however, and a rebuild of the
	  tree prior to search does result in a hit.

2019-11-04 22:28  starseeker

	* [r74292] src/libbrep/cdt_ovlps.cpp:
	  Getting a degenerate triangle, which traces back to a dupliate
	  point getting introduced again. Search is still failing, just
	  doing so earlier now.

2019-11-04 21:50  starseeker

	* [r74291] src/libbrep/cdt_ovlps.cpp:
	  Make the bounding box around the surface point center on the
	  surface point, don't just copy the ov bbox. Not getting the vtree
	  error now, but still have problem edges (seeing them earlier now,
	  I think...)

2019-11-04 21:28  starseeker

	* [r74290] src/libbrep/cdt_ovlps.cpp:
	  one of the tests in RTree.h at line 1546 changes its answer after
	  a tree rebuild, which is consistent with observed results but
	  doesn't really hit as to why...

2019-11-04 20:58  brlcad

	* [r74289] regress/rtedge.sh:
	  make sure we quote LOGFILE in case there are spaces in the pwd.

2019-11-04 20:39  starseeker

	* [r74288] src/libbrep/RTree.h:
	  hit RTree.h with astyle

2019-11-04 15:52  starseeker

	* [r74287] src/libbrep/cdt_ovlps.cpp:
	  Implement a validation test for the RTree that iterates over all
	  vertices in the tree with the iterator and then searches for each
	  one to verify it can be found. Looks like it is catching the
	  problem case - now to find out why it's happening.

2019-11-03 17:13  starseeker

	* [r74286] misc/repoconv/account-map, misc/repoconv/cvs_authormap,
	  misc/repoconv/svn2git/account-map:
	  Add a couple specific contacts I can clearly identify, fix
	  Cezar's name, put generics in for the two
	  no-known-associated-name ids...

2019-11-03 16:20  starseeker

	* [r74285] misc/repoconv/account-map, misc/repoconv/cvs_authormap,
	  misc/repoconv/svn2git/account-map:
	  Pull the authors emails into the maps (unless we have newer
	  information already from users) and get all three versions in
	  sync. Editing cvs_authormap manually was a mistake - "cat
	  account-map | sed 's/ / = /' > cvs_authormap" should do the
	  trick. Not sure yet how to unambiguously identify github accounts
	  for users - there are enough registered github users at this
	  point that names by themselves won't be reliable.

2019-11-01 20:28  starseeker

	* [r74284] src/libbrep/RTree.h:
	  Going to have to drill into the RTree oddity and figure out if
	  it's me or them (and either way fix it) to make sure that's not a
	  source of some of the odd behavior I'm seeing...

2019-11-01 20:22  starseeker

	* [r74283] src/libbrep/cdt_ovlps.cpp:
	  Only adjusting verts generally on the first pass avoids some
	  errors, but that's a bit surprising - it shouldn't matter...
	  still getting issues on the 3rd pass.

2019-11-01 20:14  starseeker

	* [r74282] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h,
	  src/libbrep/cdt_ovlps.cpp:
	  Get longest edges first, only grab 2 longest edges from a
	  triangle.

2019-10-31 20:53  starseeker

	* [r74281] src/libbrep/cdt_ovlps.cpp:
	  Probably not the validity issue, but need to adjust order of
	  processing for edges.

2019-10-31 20:50  starseeker

	* [r74280] src/libbrep/cdt_ovlps.cpp:
	  Add a routine to split the largest triangle of each pair if we
	  still have surviving overlaps. I'm suspicious of some of the
	  triangles we're getting, and the second pass is prodicing invalid
	  triangles again, so more investigation needed.

2019-10-31 20:25  starseeker

	* [r74279] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h,
	  src/libbrep/cdt_ovlps.cpp:
	  Adjust the edge tolerances for edge-only intersections. In
	  principle we may not be able to reliably ignore all edge
	  intersections - if a mesh has an intruding 'pyramid' shape where
	  all mesh edges align but there is still an intruding interior
	  point at the peak of the pyramid this might end up missing that -
	  but the first cut at a test for that case is overcounting
	  intersections and needs more investigation.

2019-10-31 19:08  starseeker

	* [r74278] src/libbrep/cdt_ovlps.cpp:
	  Quick and dirty way to iteratively test - after we're done
	  processing the mesh pairs, start over again from scratch in a
	  while loop. Not ready quite yet to do more than one iteration,
	  but commiting so it doesn't get mixed up with other work.

2019-10-31 18:41  starseeker

	* [r74277] include/brep/cdt.h, src/libbrep/cdt_mesh.h,
	  src/libbrep/tests/brep_cdt_mesh.cpp:
	  Tweak test code further for Windows.

2019-10-31 18:23  starseeker

	* [r74276] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h,
	  src/libbrep/tests/brep_cdt_mesh.cpp:
	  MSVC isn't liking calling the methods from the dll - see if we
	  can use the PImpl pattern for this...

2019-10-31 16:29  d_rossberg

	* [r74275] misc/win32-msvc/Dll/CMakeLists.txt,
	  misc/win32-msvc/Dll/TclDummies.c, misc/win32-msvc/Dll/brlcad.def:
	  revived the brlcad.dll build

2019-10-31 15:52  starseeker

	* [r74270] src/libbrep/cdt_edge.cpp,
	  src/other/openNURBS/opennurbs_optimize.h:
	  Visual Studio 2015 build fixes

2019-10-30 21:43  starseeker

	* [r74269] src/libbrep/cdt_ovlps.cpp:
	  Address a couple issues that resulted in invalid meshes. One was
	  obvious in retrospect - a surface point has no context by itself
	  to make a sane bounding box, so it has to come from its parent
	  overt. The other is a little more worrisome - getting failing
	  RTree searches for vertex lookup unless we do a full tree rebuild
	  after the vertex insertion. My understanding is that we shouldn't
	  have to do this, but unwinding what's going on is going to need a
	  pretty deep dive into the RTree.h code. In the meantime, just
	  rebuild the tree so we can do other testing...

2019-10-30 19:02  brlcad

	* [r74268] src/libged/attr.cpp:
	  wow, thanks clang 11 for making this incredibly difficult to
	  intepret and diagnose. end result: the comparison function needs
	  to be const.

2019-10-30 16:01  starseeker

	* [r74267] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_ovlps.cpp:
	  More tweaks to validity reporting

2019-10-30 15:53  starseeker

	* [r74266] src/libbrep/cdt_mesh.cpp:
	  Report name and face id in message

2019-10-30 11:02  starseeker

	* [r74265] misc/repoconv/account-map, misc/repoconv/cvs_authormap:
	  Couple more updates where we have specific current information.

2019-10-30 10:59  starseeker

	* [r74264] misc/repoconv/account-map:
	  Looks like github is wanting emails after all (per Sean) so we'll
	  need to do this after all. Putting back specifically set email -
	  Sean is working on an approch and when we have a way forward
	  we'll adjust all the map entries. This will require a full re-run
	  of the commit process (and manual updating of the sync merges) so
	  we only want to do it once.

2019-10-30 10:50  starseeker

	* [r74263] misc/repoconv/CONVERT.sh:
	  We're not archiving old branches any more

2019-10-29 21:42  starseeker

	* [r74262] src/libbrep/cdt_ovlps.cpp:
	  Make closest uedge search more robust. Still getting invalidity
	  from somewhere.

2019-10-29 21:07  starseeker

	* [r74261] src/libbrep/cdt_ovlps.cpp:
	  Right general idea, but some errors are being introduced.

2019-10-29 20:04  starseeker

	* [r74260] src/libbrep/cdt_ovlps.cpp:
	  The vertices introduced when splitting edges deserve special
	  attention - we know these are being introduced in an area close
	  to another mesh, so we most likely want/need to put new points in
	  the other mesh close to these points.

2019-10-29 14:33  starseeker

	* [r74259] src/libbrep/cdt_ovlps.cpp:
	  Ah, that's why poly2tri was unhappy - wasn't correctly yanking
	  points too close to existing vertices in projections - resulted
	  in points very close to verts, which crossed the 'no-good'
	  threshold for the poly2tri algorithm. As a byproduct, can clearly
	  see now by real examples why we do need full CDT - the
	  quick-and-dirty tricks with the plain DT won't work reliably.

2019-10-28 21:33  starseeker

	* [r74258] src/libbrep/cdt_ovlps.cpp:
	  Looks like the yank-the-outside-triangles trick isn't going to
	  work, and poly2tri is crashing on these inputs still...

2019-10-28 21:15  starseeker

	* [r74257] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h:
	  If we're using the plain Delaunay method of triangulation, make
	  sure any triangles returned are inside the polygon.

2019-10-28 20:36  starseeker

	* [r74256] src/libbrep/cdt_ovlps.cpp:
	  Don't remove and replace triangles if we don't need to.

2019-10-28 16:25  starseeker

	* [r74255] src/libbrep/cdt_ovlps.cpp:
	  more cleanup

2019-10-28 16:19  starseeker

	* [r74254] src/libbrep/cdt_ovlps.cpp:
	  cleanup, start working on edge reassignment

2019-10-28 15:44  starseeker

	* [r74253] src/libbrep/cdt_ovlps.cpp:
	  Take a stab at replacing the triangle pairs with the CDT.
	  Exposing one brep face edge case where we're not getting the
	  splitting we need...

2019-10-28 14:17  starseeker

	* [r74252] src/libbrep/cdt_ovlps.cpp:
	  Closest surface point is essentially always going to project onto
	  the polygon - what we want to catch is when the original vertex
	  is far away from the polygon in question. Pass both the closest
	  point and the vert point through, and use the vert point to do
	  the filtering check.

2019-10-28 13:31  starseeker

	* [r74251] src/libbrep/cdt_ovlps.cpp:
	  Need the polygon point mapping for the second triangle as well.

2019-10-26 21:59  starseeker

	* [r74250] src/libbrep/cdt_ovlps.cpp:
	  Start roughing in the logic for constructing the CDT problem
	  around interior edges. Not working yet.

2019-10-26 19:42  starseeker

	* [r74249] src/libbrep/cdt_ovlps.cpp,
	  src/libbrep/opennurbs_ext.cpp:
	  Use the ON_FindLocalMinimum function from openNURBS to more
	  properly implement the NURBS curve get closest point function.

2019-10-25 22:07  starseeker

	* [r74248] src/libbrep/cdt_mesh.cpp:
	  Check for the correct max line parameter value.

2019-10-25 21:06  starseeker

	* [r74247] src/libbrep/cdt_ovlps.cpp:
	  Look for nearby vertices and cull them from the splitting inputs
	  if we're too close to produce reasonable triangles.

2019-10-25 19:36  starseeker

	* [r74246] src/libbrep/cdt_ovlps.cpp:
	  Adjust printing of info, design thoughts...

2019-10-25 19:24  starseeker

	* [r74245] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h,
	  src/libbrep/cdt_ovlps.cpp:
	  Rather than tracking the edges separately, just use the triangles
	  and construct the edge info on the fly.

2019-10-25 18:17  starseeker

	* [r74244] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h,
	  src/libbrep/cdt_ovlps.cpp:
	  Start working on locating the refinement verts with respect to
	  their target mesh. This time we don't have mesh topology to fall
	  back on, so we're going to have to go hunting.

2019-10-25 17:31  starseeker

	* [r74243] src/libbg/tests/tri_closest_pt.c:
	  fix header

2019-10-25 17:31  starseeker

	* [r74242] src/libbg/tests/CMakeLists.txt,
	  src/libbg/tests/tri_closest_pt.c, src/libbg/tests/tri_pt_dist.c:
	  rename test file

2019-10-25 17:28  starseeker

	* [r74241] src/libbg/tests/tri_pt_dist.c:
	  fix test function name

2019-10-25 15:28  starseeker

	* [r74240] src/libbrep/cdt_mesh.cpp:
	  Don't use >= when comparing floating point...

2019-10-25 14:23  starseeker

	* [r74239] include/bg/tri_pt.h, src/libbg/tri_pt.c,
	  src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_ovlps.cpp:
	  Have the closest-pt-on-tri calculation optionally return the
	  point as well.

2019-10-25 13:57  starseeker

	* [r74238] src/libbrep/cdt_ovlps.cpp:
	  Ah. Wasn't stashing the edge curve pointer to split correctly,
	  and splitting the wrong curve.

2019-10-25 00:42  starseeker

	* [r74237] misc/repoconv/NOTES:
	  Probably want to mention what to do with Git on case insensitive
	  filesystems (warrants some experimentation...)

2019-10-24 21:50  starseeker

	* [r74236] src/libbrep/cdt_ovlps.cpp:
	  Don't adjust edge verts - however, still seeing triangle issue.

2019-10-24 21:29  starseeker

	* [r74235] src/libbrep/cdt_ovlps.cpp:
	  another thought on where to look for trouble.

2019-10-24 21:27  starseeker

	* [r74234] src/libbrep/cdt_ovlps.cpp:
	  Issue is probably either in this code somewhere or in the edge
	  point being picked as close to the vertex...

2019-10-24 21:17  starseeker

	* [r74233] src/libbrep/cdt_ovlps.cpp:
	  Better - seeing an odd triangle issue, but splitting the edge
	  curves where expected/intended.

2019-10-24 20:31  starseeker

	* [r74232] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h,
	  src/libbrep/cdt_ovlps.cpp:
	  checkpoint - working on a better way to tell when we need to
	  split edge curves

2019-10-24 19:55  erikgreenwald

	* [r74231] misc/repoconv/account-map:
	  update email address for repo map

2019-10-24 18:32  starseeker

	* [r74230] misc/CMakeLists.txt, misc/repoconv/CONVERT.sh,
	  misc/repoconv/archive_branches.sh:
	  After looking over the options with Sean, and how git behaves
	  listing branches (or not) by default when doing a checkout from
	  remote, we don't need to make these tags and remove the branches.

2019-10-24 12:08  starseeker

	* [r74229] misc/repoconv/CONVERT.sh:
	  If we're using clone for this we want to remove the origin (it
	  only points to the original conversion dir location, which is no
	  longer useful.)

2019-10-24 01:51  starseeker

	* [r74228] TODO:
	  rtedge.sh is making distcheck-odd_pathnames very unhappy...

2019-10-23 20:30  starseeker

	* [r74227] src/libbrep/cdt_ovlps.cpp:
	  Not working yet, but start on logic for recognizing when we have
	  refinement vertices near brep face edges.

2019-10-23 18:54  starseeker

	* [r74226] src/libbrep/cdt_ovlps.cpp:
	  If we're fully edge centric, probably not going to need to
	  categorize points in this fashion.

2019-10-23 18:51  starseeker

	* [r74225] src/libbrep/cdt_ovlps.cpp:
	  Remove unused code, clear split_edges after we're done with a
	  pass.

2019-10-23 18:04  starseeker

	* [r74224] src/libbrep/cdt_ovlps.cpp:
	  Use an rtree to hold the refinement points

2019-10-23 17:43  starseeker

	* [r74223] src/libbrep/cdt_ovlps.cpp:
	  Try just the longest edge for splitting

2019-10-23 16:08  starseeker

	* [r74222] src/libbrep/cdt_ovlps.cpp:
	  Might do better to focus on long edges for splitting...

2019-10-23 15:56  starseeker

	* [r74221] src/libbrep/cdt_ovlps.cpp:
	  More refactoring/cleanup - trying to narrow in on the necessary
	  steps.

2019-10-23 14:08  starseeker

	* [r74220] src/libbrep/cdt_ovlps.cpp:
	  Split out the actual split-edge-near-vert logic into its own
	  function - looks like we'll need to resuse it.

2019-10-23 13:55  starseeker

	* [r74219] src/libbrep/cdt_ovlps.cpp:
	  Try this more generally - should work the same way for both
	  interior and exterior...

2019-10-23 13:49  starseeker

	* [r74218] src/libbrep/cdt_mesh.h, src/libbrep/cdt_ovlps.cpp:
	  Use a multi-triangle intersection criteria to select outside
	  points as refinement seeds.

2019-10-23 13:29  starseeker

	* [r74217] src/libbrep/cdt_ovlps.cpp:
	  Refactor dupicate code into function

2019-10-23 00:51  starseeker

	* [r74216] misc/repoconv/CONVERT.sh:
	  use git clone --mirror to strip out the log messages left by the
	  fast-import process - want a 'clean' archive as a starting point.

2019-10-22 22:46  starseeker

	* [r74215] src/libbrep/cdt_ovlps.cpp:
	  Add a bit more locality checking, start thinking about how to set
	  up the core piece - find the closest edges to closest surface
	  points, and retriangulate in the projection of the pairs.

2019-10-22 20:03  starseeker

	* [r74214] src/libbrep/cdt_ovlps.cpp:
	  more bookkeeping work...

2019-10-22 16:49  starseeker

	* [r74213] src/libbrep/cdt_ovlps.cpp:
	  Make a stab at tracking edges through splitting

2019-10-22 16:16  starseeker

	* [r74212] src/libbrep/cdt_ovlps.cpp:
	  add vertex introduced by edge split to omeshes

2019-10-22 15:43  starseeker

	* [r74211] src/libbrep/cdt.cpp, src/libbrep/cdt_mesh.h,
	  src/libbrep/cdt_ovlps.cpp:
	  checkpoint

2019-10-22 13:36  starseeker

	* [r74210] src/libbrep/cdt_ovlps.cpp:
	  It's possible to have intersecting triangles with no interior
	  vertices - probably have to use the isect points?

2019-10-22 12:06  starseeker

	* [r74209] misc/repoconv/archive_branches.sh:
	  Order the tagging so that it matches with the branch dates - this
	  way github doesn't end up with all the old branch archivings as
	  recent 'releases'

2019-10-21 21:08  starseeker

	* [r74208] src/libbrep/cdt.h, src/libbrep/cdt_mesh.cpp,
	  src/libbrep/cdt_mesh.h, src/libbrep/cdt_ovlps.cpp,
	  src/libbrep/cdt_util.cpp:
	  fmeshes aren't closed by themselves - inside/outside is only
	  properly defined at the object level.

2019-10-21 20:20  starseeker

	* [r74207] src/libbrep/cdt_ovlps.cpp:
	  Plot 'interior' points for a given mesh. Doesn't look right...

2019-10-21 19:36  starseeker

	* [r74206] src/libbrep/cdt_ovlps.cpp:
	  add a plotting method so we can immediately see which triangles
	  are overlapping

2019-10-21 19:06  starseeker

	* [r74205] src/libbrep/cdt_ovlps.cpp:
	  Move tree build inside function

2019-10-21 17:41  starseeker

	* [r74204] src/libbrep/cdt_ovlps.cpp:
	  Rework vert-near-brep-edge testing - shouldn't be face centric
	  for this stage.

2019-10-21 15:51  starseeker

	* [r74203] src/libbrep/cdt_ovlps.cpp:
	  remove unused code

2019-10-21 14:17  starseeker

	* [r74202] src/libbrep/cdt_ovlps.cpp:
	  adapt vertex adjustment code for new data structures

2019-10-21 01:32  starseeker

	* [r74201] misc/CMake/distcheck_repo_verify.cmake.in:
	  More svn vs git changes for distcheck

2019-10-21 01:20  starseeker

	* [r74200] misc/CMake/distcheck_repo_verify.cmake.in:
	  don't use the regex to shift the list from line return to
	  semicolons

2019-10-21 01:12  starseeker

	* [r74199] CMakeLists.txt:
	  The conversion will have a .gitignore file, so list that if it
	  exists (it doesn't and won't in svn, so make its inclusion
	  conditional.)

2019-10-21 00:59  starseeker

	* [r74198] misc/repoconv/svnfexport.cxx:
	  One last bug - don't skip the last revision when doing the
	  conversion.

2019-10-20 21:31  starseeker

	* [r74197] misc/CMake/distcheck_repo_verify.cmake.in:
	  Needs more testing, but set up the repository verification to
	  work with either Subversion or Git, depending on which VCS
	  configuration directory is present.

2019-10-20 20:44  starseeker

	* [r74196] misc/CMakeLists.txt, src/conv/CMakeLists.txt,
	  src/libbrep/CMakeLists.txt, src/other/Eigen.dist:
	  list files for distcheck

2019-10-20 14:08  starseeker

	* [r74195] misc/repoconv/NOTES:
	  Tested uploading to github successfully, but do need some extra
	  steps for the notes

2019-10-19 21:02  starseeker

	* [r74194] src/libbrep/cdt_ovlps.cpp:
	  Whoops, helps to use the right mesh

2019-10-19 21:00  starseeker

	* [r74193] src/libbrep/cdt_ovlps.cpp:
	  Start looking at the vert box interactions

2019-10-19 20:48  starseeker

	* [r74192] src/libbrep/cdt_ovlps.cpp:
	  Start setting up to feed data into the omesh containers.

2019-10-19 19:13  starseeker

	* [r74191] src/libbrep/cdt_ovlps.cpp:
	  Right - define the vert search as well.

2019-10-19 19:10  starseeker

	* [r74190] src/libbrep/cdt_ovlps.cpp:
	  use the right keys for the map types.

2019-10-19 19:03  starseeker

	* [r74189] src/libbrep/cdt_ovlps.cpp:
	  Remove the edge from all three containers, add some comments.

2019-10-19 18:58  starseeker

	* [r74188] src/libbrep/cdt_ovlps.cpp:
	  check validity

2019-10-19 18:58  starseeker

	* [r74187] src/libbrep/cdt_ovlps.cpp:
	  Track the closest uedge at the omesh level as well.

2019-10-19 18:46  starseeker

	* [r74186] src/libbrep/cdt_ovlps.cpp:
	  More roughing out of functions

2019-10-19 17:44  starseeker

	* [r74185] src/libbrep/cdt_ovlps.cpp:
	  Initial stab at interior mesh edge tree (untested).

2019-10-19 16:12  starseeker

	* [r74184] src/libbrep/cdt_ovlps.cpp:
	  Start working in initial implementations of lowest level
	  operations for omesh

2019-10-19 15:34  starseeker

	* [r74183] src/libbrep/cdt_ovlps.cpp:
	  Start thinking about how to reorganize the necessary information
	  so it's easier to deal with.

2019-10-19 14:34  starseeker

	* [r74182] src/libbrep/cdt_ovlps.cpp:
	  Proof of principle check to look for close mesh vertices. Need to
	  take a step back and think about how to organize these containers
	  - using vert trees in several places, and will almost certainly
	  need edge trees as well - need to do a better job of handling
	  them.

2019-10-19 13:13  starseeker

	* [r74181] src/libbrep/cdt_ovlps.cpp:
	  Filter inside/outside on both faces in the interaction pair, not
	  just one, and visualize the p_mvert points to be considered for
	  triangle splitting. Can see visually we need to filter cases when
	  the closest_surf_pnt is already an existing vertex, and we
	  definitely need to handle situations where the new closest point
	  is sitting on the edge between two triangles.

2019-10-19 11:20  starseeker

	* [r74180] misc/repoconv/CONVERT.sh:
	  Actually script is archive_branches.sh, not archive_tags.sh

2019-10-18 18:20  starseeker

	* [r74179] src/libbrep/cdt_ovlps.cpp:
	  OK, the original test was what I wanted to do - the consequences
	  of splitting individual triangles just aren't helpful. Definitely
	  need better logic for that...

2019-10-18 18:03  starseeker

	* [r74178] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_ovlps.cpp:
	  Need to figure out some more useful visuals for this, and
	  probably experiment with edge centric triangle replacement...

2019-10-18 15:00  starseeker

	* [r74177] src/libbg/CMakeLists.txt, src/libbg/trimesh_pt_in.c,
	  src/libbg/trimesh_pt_in.cpp:
	  This can now be a straightforward C file

2019-10-18 14:59  starseeker

	* [r74176] src/libbg/trimesh_pt_in.cpp:
	  declarations first

2019-10-18 14:57  starseeker

	* [r74175] src/libbg/trimesh_pt_in.cpp:
	  Variety of cleanups

2019-10-18 14:46  starseeker

	* [r74174] src/libbg/trimesh_pt_in.cpp:
	  Based on the flipped tri test, this logic appears to be
	  independent of the specific triangle orientation as long as its
	  solid.

2019-10-18 14:43  starseeker

	* [r74173] src/libbg/tests/trimesh_pt_in.c:
	  Actually make the test succeed/fail based on correctness of
	  answer.

2019-10-17 22:29  starseeker

	* [r74172] doc/docbook/system/mann/attr.xml:
	  Update the attr man page to document the new list subcommand
	  behavior.

2019-10-17 22:12  starseeker

	* [r74171] NEWS:
	  attr list command will now accept filters and do more
	  sophisticated printing of available data.

2019-10-17 22:11  starseeker

	* [r74170] NEWS:
	  Updated gqa and rtweight man pages to refer to mater -d for
	  density information rather than the old bo command.

2019-10-17 22:09  starseeker

	* [r74169] src/libged/attr.cpp:
	  Extend the attr list subcommand to optionally accept key and
	  value filters, to allow for summary printing not just of all the
	  attributes in a .g, but all the unique key/value assignments.
	  This, for example, can be used to get a listing of all unique
	  material_id values in a database.

2019-10-17 21:16  starseeker

	* [r74168] src/libged/attr.cpp:
	  fix header and footer

2019-10-17 21:14  starseeker

	* [r74167] src/libged/CMakeLists.txt, src/libged/attr.c,
	  src/libged/attr.cpp:
	  Rename attr.c as a C++ file.

2019-10-17 16:27  starseeker

	* [r74166] db/faa/Generic_Twin.fg4:
	  We had added an explanatory comment at the beginning not in the
	  original faa version - do the same for this verison.

2019-10-17 16:21  starseeker

	* [r74165] db/faa/Generic_Twin.fg4, db/faa/README,
	  doc/legal/embedded/db_faa-info.txt:
	  Update the Generic Twin example FASTGEN model to a newer, better
	  looking version. Kudos to Ellen Phifer for spotting that we were
	  still using the old version and helping get us updated.

2019-10-17 11:55  starseeker

	* [r74164] misc/repoconv/CONVERT.sh:
	  The 'test acl' CVS commit that never migrated into the svn
	  history shows up in a git fsck --lost-found check. Clean it out.

2019-10-17 11:53  starseeker

	* [r74163] misc/repoconv/archive_branches.sh:
	  rel-5-4 didn't end up as a git branch. Otherwise, looks like the
	  fix worked to delete the right things.

2019-10-16 22:23  starseeker

	* [r74162] doc/docbook/system/man1/rtweight.xml:
	  Update rtweight man page - just point to gqa man page rather than
	  duplicating the whole density file explanation.

2019-10-16 22:16  starseeker

	* [r74161] doc/docbook/system/man1/gqa.xml,
	  doc/docbook/system/mann/gqa.xml:
	  More updates to gqa man pages

2019-10-16 22:03  starseeker

	* [r74160] src/conv/fast4-g.c:
	  Make gcv fixes to fast4-g as well. (Really need to make this just
	  call the libgcv code...)

2019-10-16 21:41  starseeker

	* [r74159] src/libgcv/plugins/fastgen4/fastgen4_read.c:
	  Before we make a unique name at this stage, see if we've already
	  encountered the region id. If we have, don't make another unique
	  name copy of it - that will fail validation in later processing.
	  If we leave the original name, existing conversion logic will
	  reject insertion of a duplicate name.

2019-10-15 22:09  starseeker

	* [r74158] src/tclscripts/mged/help.tcl,
	  src/tclscripts/mged/openw.tcl:
	  This dialog depended on command no longer in the distribution.

2019-10-15 21:03  starseeker

	* [r74157] doc/docbook/articles/main_menu.xml,
	  doc/docbook/articles/mged.xml,
	  doc/docbook/system/mann/CMakeLists.txt,
	  doc/docbook/system/mann/anim_cascade.xml,
	  doc/docbook/system/mann/anim_fly.xml,
	  doc/docbook/system/mann/anim_hardtrack.xml,
	  doc/docbook/system/mann/anim_keyread.xml,
	  doc/docbook/system/mann/anim_lookat.xml,
	  doc/docbook/system/mann/anim_offset.xml,
	  doc/docbook/system/mann/anim_orient.xml,
	  doc/docbook/system/mann/rmats.xml,
	  doc/docbook/system/mann/savekey.xml,
	  doc/docbook/system/mann/saveview.xml,
	  doc/html/manuals/mged/mged_cmd_index.html,
	  doc/html/manuals/mged/mged_gui.html, doc/tool_categories.txt,
	  doc/trunk_hierarchy.org, src/tclscripts/mged/CMakeLists.txt,
	  src/tclscripts/mged/anim.tcl:
	  Remove some old anim_* related logic and docs. Really need to
	  make as much as possible of this autogenerated...

2019-10-15 19:01  starseeker

	* [r74156] src/libgcv/plugins/fastgen4/fastgen4_read.c:
	  Explain what the magic 56 is about in the line offset. (Note: I
	  think as a byproduct this rework also made us more flexible about
	  supporting longer fastgen NAME strings...)

2019-10-15 18:54  starseeker

	* [r74155] src/libbg/tests/CMakeLists.txt:
	  Helps to have the right executable name in the test...

2019-10-15 18:54  starseeker

	* [r74154] src/libgcv/plugins/fastgen4/fastgen4_read.c:
	  Fix (and simplify) handling of duplicate names in fastgen files

2019-10-15 13:44  d_rossberg

	* [r74153] CMakeLists.txt, include/config_win.h.in:
	  it looks like MS Visual Studio 2019 hase lseek aboard

2019-10-15 12:55  d_rossberg

	* [r74152] src/libbu/CMakeLists.txt, src/libbu/tests/vls.c:
	  it is a bad idea to add CMAKE_CURRENT_SOURCE_DIR to the includes,
	  because then "#include <~>" is the same as "#include "~"", which
	  rises the risk of conflicting headers
	  here e.g. process.h in MS Visual Studio 2019

2019-10-15 12:39  d_rossberg

	* [r74151] src/conv/iges/check_names.c,
	  src/conv/iges/conv_drawings.c, src/conv/iges/iges_extern.h,
	  src/conv/iges/main.c, src/conv/iges/readcnv.c,
	  src/conv/iges/readdbl.c, src/conv/iges/readflt.c,
	  src/conv/iges/readglobal.c, src/conv/iges/readint.c,
	  src/conv/iges/readname.c, src/conv/iges/readstrg.c,
	  src/conv/iges/readtime.c, src/conv/vdeck/vdeck.c,
	  src/libged/track.c, src/mged/track.c:
	  it is a bad idea to give variables or functions names from
	  standard library entities (e.g. eof, itoa), sooner or later, this
	  will cause conflicts
	  here e.g. in MS Visual Studio 2019

2019-10-14 15:46  starseeker

	* [r74150] include/bg/trimesh.h, src/libbg/trimesh_pt_in.cpp,
	  src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h,
	  src/libbrep/cdt_ovlps.cpp:
	  Untested for correctness, but wire in the in/out test into the
	  overlap code

2019-10-14 15:31  starseeker

	* [r74149] src/libbg/tests/trimesh_pt_in.c:
	  test with flipped triangles

2019-10-14 15:26  starseeker

	* [r74148] doc/legal/embedded/CMakeLists.txt,
	  doc/legal/embedded/point_in_polyhedron.txt, include/bg/trimesh.h,
	  src/libbg/CMakeLists.txt, src/libbg/tests/CMakeLists.txt,
	  src/libbg/tests/trimesh_pt_in.c, src/libbg/trimesh_pt_in.cpp:
	  Add a C++ translation of https://github.com/mdickinson/polyhedron
	  for inside/outside mesh testing. Got success with an initial
	  simple test case.

2019-10-14 14:42  starseeker

	* [r74147] src/libbrep/cdt_mesh.h:
	  Need this for the triangulation type

2019-10-14 00:00  starseeker

	* [r74146] src/libbg/trimesh_pt_in.cpp:
	  Compiles, but untested.

2019-10-13 12:55  starseeker

	* [r74145] src/libbg/CMakeLists.txt, src/libbg/trimesh_pt_in.c,
	  src/libbg/trimesh_pt_in.cpp:
	  rename

2019-10-13 02:09  starseeker

	* [r74144] src/libbg/CMakeLists.txt, src/libbg/trimesh_pt_in.c:
	  checkpoint

2019-10-12 23:00  starseeker

	* [r74143] src/libbrep/cdt_ovlps.cpp:
	  Add note.

2019-10-12 22:26  starseeker

	* [r74142] doc/legal/embedded/CMakeLists.txt,
	  doc/legal/embedded/delaunator.txt, src/libbg/delaunator.hpp,
	  src/libbg/polygon_triangulate.cpp, src/libbrep/cdt_ovlps.cpp:
	  As an interim measure use
	  https://github.com/flippmoke/delaunator-cpp to get replacement
	  triangles. This probably isn't what we'll want as a long term
	  solution, but it allows for testing of the overall workflow's
	  logic.

2019-10-12 21:02  starseeker

	* [r74141] src/libbg/polygon_triangulate.cpp:
	  If we've got steiner points ear clipping won't work.

2019-10-12 20:52  starseeker

	* [r74140] src/libbg/earcut.hpp:
	  Update earcut.hpp

2019-10-12 20:48  starseeker

	* [r74139] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h:
	  Add option to set triangulation method to polygon cdt, although
	  at the moment only the poly2tri can handle steiner points

2019-10-12 20:39  starseeker

	* [r74138] src/libbrep/cdt_ovlps.cpp:
	  Use the right index. Sometimes getting a processed point, but
	  still crashing - may need to check how close to the edge we are
	  in the projection and characterize/process accordingly?

2019-10-12 20:33  starseeker

	* [r74137] src/libbrep/cdt_ovlps.cpp:
	  OK, checked count with and without this function and it matched -
	  probably a bit of variation in the tessellations.

2019-10-12 20:29  starseeker

	* [r74136] src/libbrep/cdt_ovlps.cpp:
	  better but still losing 2 cnt from one of the meshes

2019-10-12 20:20  starseeker

	* [r74135] src/libbrep/cdt_ovlps.cpp:
	  cdt without the interior point seems to work, but what should be
	  a no-op yank-cdt-replace of the same triangle lowers the triangle
	  count by 1.

2019-10-12 20:08  starseeker

	* [r74134] src/libbrep/cdt_ovlps.cpp:
	  hmm. cdt of the polygon is crashing.

2019-10-12 19:50  starseeker

	* [r74133] src/libbrep/cdt_ovlps.cpp:
	  Not working yet, but start working on the necessary logic to
	  replace a triangle with its cdt.

2019-10-12 19:16  starseeker

	* [r74132] src/libbrep/cdt_ovlps.cpp:
	  Add a filter to avoid making duplicate mverts

2019-10-12 19:16  starseeker

	* [r74131] src/libbrep/cdt_ovlps.cpp:
	  plot all the types again

2019-10-12 19:15  starseeker

	* [r74130] src/libbrep/cdt_ovlps.cpp:
	  cleanup some unused logic

2019-10-12 17:52  starseeker

	* [r74129] src/libbrep/cdt_ovlps.cpp:
	  Break some logic out into functions

2019-10-12 17:33  starseeker

	* [r74128] src/libbrep/cdt_ovlps.cpp:
	  Count the triangle intersections and report them after each major
	  step.

2019-10-12 17:21  starseeker

	* [r74127] src/libbrep/cdt_ovlps.cpp:
	  Oh, right... 0 is actually a legimitate distance...

2019-10-12 15:35  starseeker

	* [r74126] src/libbrep/cdt_ovlps.cpp:
	  Zeroing in - getting odd (overlapping, actually) triangles back
	  from the multi-verts-on-edge split, but not sure why yet.
	  Bookkeeping problem somewhere, since the wrong edge points are
	  ending up used...

2019-10-12 14:32  starseeker

	* [r74125] src/libbrep/cdt_ovlps.cpp:
	  Initialize both sources of p_mvert_info points. Exposes a problem
	  with edge splitting.

2019-10-12 14:19  starseeker

	* [r74124] src/libbrep/cdt_ovlps.cpp:
	  plot each individual 4 type

2019-10-12 14:17  starseeker

	* [r74123] src/libbrep/cdt_ovlps.cpp:
	  turn off some logic for now

2019-10-12 14:13  starseeker

	* [r74122] src/libbrep/cdt_ovlps.cpp:
	  Let's not make these statics yet - logic is too much in flux

2019-10-11 21:48  starseeker

	* [r74121] src/libbrep/cdt_ovlps.cpp:
	  Still need to do more thorough testing of bg_tri_pt_dist, but
	  this is where we will need it and a quick test seems to produce
	  sane results.

2019-10-11 16:24  starseeker

	* [r74120] include/bg.h, src/libbrep/cdt_ovlps.cpp:
	  Plotting the working data sets indicates we'll need the proper
	  closest triangle check...

2019-10-11 16:23  starseeker

	* [r74119] doc/legal/embedded/CMakeLists.txt,
	  doc/legal/embedded/tri_pt.txt, include/bg/CMakeLists.txt,
	  include/bg/tri_pt.h, src/libbg/CMakeLists.txt,
	  src/libbg/tests/CMakeLists.txt, src/libbg/tests/tri_pt_dist.c,
	  src/libbg/tri_pt.c:
	  Needs quite a bit more testing, but incorporate a version of
	  geometrictools distance-to-triangle routine recast into C and
	  vmath.h types.

2019-10-11 14:08  starseeker

	* [r74118] src/libbrep/cdt_ovlps.cpp:
	  shift around the edge case plotting code

2019-10-11 13:31  starseeker

	* [r74117] src/libbrep/cdt_ovlps.cpp:
	  edge_split_only points aren't active in the triangle step

2019-10-10 22:31  starseeker

	* [r74116] doc/docbook/system/man1/gqa.xml,
	  doc/docbook/system/mann/gqa.xml:
	  Whoops - correct gqa man pages to refer to the mater -d import
	  command instead of using the low level bo command.

2019-10-10 22:01  n_reed

	* [r74115] src/tclscripts/CMakeLists.txt, src/tclscripts/shotvis,
	  src/tclscripts/shotvis/CMakeLists.txt,
	  src/tclscripts/shotvis/shotvis.tcl:
	  Add WIP GUI for visual interactive shotline editing. Runs nirt
	  and saves output to a comb. The ray is visualized as a modeled
	  arrow that can be edited to achieve a specific shotline. Saved
	  shotlines can be subsequently re-loaded and re-edited.

2019-10-10 20:24  starseeker

	* [r74114] src/libbrep/tests/CMakeLists.txt,
	  src/libbrep/tests/plate_mode_samples.g:
	  Not sure these are 'properly' identified as plate mode per newer
	  work, but get specifically created/sized basic geometric shape
	  surface examples intended for plate mode raytracing testing into
	  the repo (thanks Shannon).

2019-10-10 15:41  starseeker

	* [r74113] src/libbrep/cdt_ovlps.cpp:
	  Getting deactivations on points that are also getting flagged as
	  splitting points... hmm...

2019-10-10 15:28  starseeker

	* [r74112] src/libbrep/cdt_ovlps.cpp:
	  Start visualizing the closest point/edge interactions. Can end up
	  close to existing edge verts - for now try turning those off,
	  although we'll probably have to revisit that.

2019-10-09 21:36  starseeker

	* [r74111] src/libbrep/cdt_ovlps.cpp:
	  Add a note to investigate a possibility.

2019-10-09 21:33  starseeker

	* [r74110] src/libbrep/cdt_ovlps.cpp:
	  This logic needs to avoid super-slim triangles near edges if
	  possible. Needs more thought.

2019-10-09 21:24  starseeker

	* [r74109] src/libbrep/cdt_ovlps.cpp:
	  Fix a few of the conditional tests, print out what's going on.

2019-10-09 20:33  starseeker

	* [r74108] src/libbrep/cdt_ovlps.cpp:
	  Fiddle with the numerical ordering of the point types.

2019-10-09 20:27  starseeker

	* [r74107] src/libbrep/cdt_ovlps.cpp:
	  Will need immediate local neighborhood of faces around points to
	  be characterized to determine what operations are needed.

2019-10-08 21:08  starseeker

	* [r74106] src/libbrep/cdt_ovlps.cpp:
	  Initialize

2019-10-07 22:06  starseeker

	* [r74105] src/libbrep/cdt_ovlps.cpp:
	  More roughing in of the logic flow.

2019-10-07 20:28  starseeker

	* [r74104] src/libbrep/cdt_ovlps.cpp:
	  Start roughing out edge point search logic

2019-10-07 17:54  starseeker

	* [r74103] src/libbrep/cdt_ovlps.cpp:
	  Start thinking through the logic flow

2019-10-07 14:45  starseeker

	* [r74102] src/libbrep/cdt_ovlps.cpp:
	  Start setting up containers to hold the 'points this brep face
	  needs to accomidate' sets.

2019-10-07 11:53  starseeker

	* [r74101] src/libbrep/cdt_ovlps.cpp:
	  Need to find the intruding vertices and build point sets...

2019-10-06 15:13  starseeker

	* [r74100] misc/repoconv/NOTES:
	  While we're at it, fix the NOTES template

2019-10-06 15:10  starseeker

	* [r74099] misc/repoconv/manual_merge_info.tar.gz:
	  Ah hah! The commit fi files with the manually added merge
	  information were hiding in the tar ball - that's how they
	  escaped.

2019-10-06 15:01  starseeker

	* [r74098] misc/repoconv/29886-note-template.fi,
	  misc/repoconv/svn2git/account-map:
	  Missed one email in the template, and update the sv2git map
	  (shouldn't be used) but still getting a few emails from
	  somewhere.

2019-10-05 19:36  starseeker

	* [r74097] src/libbrep/cdt_ovlps.cpp:
	  Need to try the intruding point with this setup instead of the
	  avg intersection point...

2019-10-05 19:14  starseeker

	* [r74096] src/libbrep/cdt_ovlps.cpp:
	  Plot candidate new points and associated triangles.

2019-10-05 18:08  starseeker

	* [r74095] src/libbrep/cdt_ovlps.cpp:
	  include brep name in printout

2019-10-05 18:03  starseeker

	* [r74094] src/libbrep/cdt_ovlps.cpp:
	  Identify the source data for each case

2019-10-05 17:56  starseeker

	* [r74093] src/libbrep/cdt_ovlps.cpp:
	  Hmm. Projection failures are on edge-edge cases, and don't seem
	  to be on the brep face edge - definitely need to visualize.

2019-10-05 17:42  starseeker

	* [r74092] src/libbrep/cdt_ovlps.cpp:
	  Check the closest points rather than the avg to see if they will
	  project successfully. A couple cases indicate they will not, so
	  we need to examine them and see what the correct action is.
	  Hopefully those are the cases where it would make more sense to
	  use the vertex to calculate the opposite closest point anyway...

2019-10-05 16:44  starseeker

	* [r74091] src/libbrep/cdt_ovlps.cpp:
	  Use the ntri_pnt filter. This gives us a look at the world
	  according to each triangle from a splitting perspective. Next
	  step is probably to plot...

2019-10-05 16:40  starseeker

	* [r74090] src/libbrep/cdt_ovlps.cpp:
	  Raw list of types per triangle, unfiltered by closeness test.

2019-10-05 16:26  starseeker

	* [r74089] src/libbrep/cdt_ovlps.cpp:
	  Missed one case. The idea here is to eventually use this
	  information to guide decisions about how to introduce points for
	  triangle splitting.

2019-10-05 16:13  starseeker

	* [r74088] src/libbrep/cdt_ovlps.cpp:
	  Turn off some of the debugging printing, report on pairs of types
	  from triangle intersections rather than just individual cases.

2019-10-05 15:03  starseeker

	* [r74087] src/libbrep/cdt_ovlps.cpp:
	  Start working on characterizing the relationship between
	  intersection points and the triangles.

2019-10-04 20:07  starseeker

	* [r74086] src/libbrep/cdt_ovlps.cpp:
	  Explore a possible approach for building per-triangle sets of 3D
	  points to use for refinement.

2019-10-04 19:15  starseeker

	* [r74085] src/libbrep/cdt_edge.cpp:
	  Remove debug printing

2019-10-04 14:18  starseeker

	* [r74084] src/libbrep/cdt_ovlps.cpp:
	  Unsurprisingly, the edge-near-edge check doesn't appear to be
	  clearing anything overlap wise - left it on while debugging rtree
	  problems since it triggered previously unseen issues, but it will
	  probably go in the final cut.

2019-10-04 14:15  starseeker

	* [r74083] src/libbrep/cdt_edge.cpp, src/libbrep/cdt_ovlps.cpp:
	  Vert 3D boxes also store the polyedge pointer, so they need to
	  come out when their parent polyedge does.

2019-10-04 13:49  starseeker

	* [r74082] src/libbrep/cdt_edge.cpp:
	  Wasn't adding the initial 3D bbox in the first stage breakdown.

2019-10-04 13:32  starseeker

	* [r74081] src/libbrep/cdt_edge.cpp:
	  ce bbox plot is a 2D plot - concern right now is 3D...

2019-10-04 13:29  starseeker

	* [r74080] src/libbrep/cdt_edge.cpp:
	  Double check that our inserts succeeded, plot some of the objects
	  in question.

2019-10-03 21:32  starseeker

	* [r74079] src/libbrep/cdt_edge.cpp:
	  Yep, a few of the Rtree 3D removals are failing. Now the question
	  is why.

2019-10-03 21:19  starseeker

	* [r74078] src/libbrep/cdt_edge.cpp, src/libbrep/cdt_ovlps.cpp:
	  Update the fmesh container about it's new boundary data. It's
	  looking as if the Remove call isn't actually removing the leaf
	  from the rtree the way I expected in 3D - probably a bug
	  somewhere...

2019-10-03 20:03  starseeker

	* [r74077] src/libbrep/cdt_ovlps.cpp:
	  Consolidate validity check code into function

2019-10-03 19:53  starseeker

	* [r74076] src/libbrep/cdt_ovlps.cpp:
	  fix normal if face is reversed

2019-10-03 19:50  starseeker

	* [r74075] src/libbrep/cdt_ovlps.cpp:
	  Do some validity checking - introducing some problems with
	  normals.

2019-10-03 17:31  starseeker

	* [r74074] src/libbrep/cdt_ovlps.cpp:
	  Break out the actual edge splitting logic into a function.

2019-10-03 16:21  starseeker

	* [r74073] src/libbrep/cdt_ovlps.cpp:
	  More testing to see what we can find with edge segements.

2019-10-03 15:55  starseeker

	* [r74072] src/libbrep/cdt_ovlps.cpp:
	  Filter out chords near vertices

2019-10-03 15:41  starseeker

	* [r74071] src/libbrep/cdt_ovlps.cpp:
	  See what we can tell from the edge segments (probably not a whole
	  lot...)

2019-10-03 15:28  starseeker

	* [r74070] src/libbrep/cdt_edge.cpp, src/libbrep/cdt_ovlps.cpp:
	  split zaps pe, so we need to pull it out of the tree before
	  splitting.

2019-10-03 15:18  starseeker

	* [r74069] src/libbrep/cdt.h, src/libbrep/cdt_edge.cpp,
	  src/libbrep/cdt_ovlps.cpp:
	  Not updating some container correctly after edge splitting.
	  Working on it...

2019-10-03 14:12  starseeker

	* [r74068] src/libbrep/cdt_ovlps.cpp:
	  Report count of triangles replaced.

2019-10-03 13:39  starseeker

	* [r74067] src/libbrep/cdt_ovlps.cpp:
	  Fix conditional check, add some debug plotting

2019-10-03 13:26  starseeker

	* [r74066] src/libbrep/cdt_mesh.h, src/libbrep/cdt_ovlps.cpp:
	  Checkpoint first attempt at removing/adding triangles based on an
	  overlap operation (edge splitting, in this case).

2019-10-03 12:56  starseeker

	* [r74065] src/libbrep/cdt_ovlps.cpp:
	  If we're only dealing with 1 face, the edge should have exactly 2
	  triangles from that face.

2019-10-03 05:14  brlcad

	* [r74064] include/rt/uv.h:
	  reorder and comment

2019-10-03 05:13  brlcad

	* [r74063] src/librt/uv.c:
	  testing shows the caller has to init the rt_texture. to avoid,
	  first step we create an init function that sets the stage for
	  filling in with read values.

2019-10-03 00:58  starseeker

	* [r74062] src/libbrep/cdt_ovlps.cpp:
	  Add some debugging code - the odd tri counts are probably a
	  consequence of the closed surface, but not 100% sure yet.

2019-10-02 22:44  starseeker

	* [r74061] src/libbrep/cdt_ovlps.cpp:
	  Better, but still have one oddball...

2019-10-02 21:27  starseeker

	* [r74060] src/libbrep/cdt_edge.cpp, src/libbrep/cdt_mesh.h,
	  src/libbrep/cdt_ovlps.cpp:
	  Keep the cdt pointer with the edge to preclude bookkeeping errors
	  of that variety...

2019-10-02 21:19  starseeker

	* [r74059] src/libbrep/cdt.h, src/libbrep/cdt_edge.cpp,
	  src/libbrep/cdt_ovlps.cpp:
	  Start working on one of the trickiest operations - splitting a
	  brep edge near a foreign vertex. Not close to working yet - not
	  even getting the right triangles...

2019-10-02 19:43  starseeker

	* [r74058] include/brep/pullback.h, src/libbrep/cdt_ovlps.cpp,
	  src/libbrep/opennurbs_ext.cpp:
	  Checkpoint an implemention of a poor man's get closest point for
	  edge curves.

2019-10-02 13:38  starseeker

	* [r74057] src/libbrep/cdt_ovlps.cpp:
	  Compare vertex boxes against brep face edge bboxes

2019-10-02 13:13  starseeker

	* [r74056] src/libbrep/cdt_edge.cpp:
	  Added extra box - remove TODO comment.

2019-10-02 13:10  starseeker

	* [r74055] src/libbrep/cdt_ovlps.cpp:
	  Break the point bbox build out into a function.

2019-10-02 02:22  starseeker

	* [r74054] misc/repoconv/custom/30760-commit.fi,
	  misc/repoconv/custom/36053-commit.fi,
	  misc/repoconv/custom/36472-commit.fi,
	  misc/repoconv/custom/36633-commit.fi,
	  misc/repoconv/custom/36843-commit.fi,
	  misc/repoconv/custom/39465-commit.fi,
	  misc/repoconv/custom/61149-commit.fi,
	  misc/repoconv/custom/64060-commit.fi,
	  misc/repoconv/custom/65867-commit.fi,
	  misc/repoconv/custom/68611-commit.fi,
	  misc/repoconv/custom/69909-commit.fi,
	  misc/repoconv/custom/70326-commit.fi,
	  misc/repoconv/custom/71925-commit.fi,
	  misc/repoconv/custom/72855-commit.fi,
	  misc/repoconv/custom/73059-commit.fi,
	  misc/repoconv/custom/r29886_cjohnson_mac_hack.fi,
	  misc/repoconv/custom/r29886_cvs_svn_rel-5-1-branch_sync.fi,
	  misc/repoconv/custom/r29886_cvs_svn_trunk_sync.fi,
	  misc/repoconv/custom/r29886_tags.fi:
	  Blast it. Custom commit files also had the brlcad.org email baked
	  in. OK, starting over one more time...

2019-10-02 02:08  starseeker

	* [r74053] misc/repoconv/svn_map_commit_revs.cxx:
	  Oh, blast it. Had brlcad.org email encoded in the code.

2019-10-01 22:26  starseeker

	* [r74052] src/libbrep/cdt.h, src/libbrep/cdt_util.cpp:
	  not using etrees any more

2019-10-01 22:26  starseeker

	* [r74051] src/libbrep/cdt_ovlps.cpp:
	  Track which vertices we have adjusted

2019-10-01 16:53  starseeker

	* [r74050] src/librt/uv.c:
	  Getting a set-but-unused build error

2019-10-01 16:26  starseeker

	* [r74049] src/libbrep/cdt_ovlps.cpp:
	  A with-and-without test indicates that the vertex adjustment is
	  indeed avoiding/clearing triangle overlaps.

2019-10-01 16:19  starseeker

	* [r74048] src/libbrep/cdt_ovlps.cpp:
	  Yank this piece for now - not clear it is working or needed.

2019-10-01 16:04  starseeker

	* [r74047] src/libbrep/cdt_ovlps.cpp:
	  fix comments

2019-10-01 15:55  starseeker

	* [r74046] misc/repoconv/NOTES:
	  The --all flag isn't what we're looking for here...

2019-10-01 14:54  starseeker

	* [r74045] src/libbrep/cdt_ovlps.cpp:
	  Update mvert_info minedges after every vertex pair alteration
	  operation.

2019-10-01 13:42  starseeker

	* [r74044] src/libbrep/cdt_ovlps.cpp:
	  weight the midpoint we're aiming for to be closer to the vertex
	  that has smaller triangle edges.

2019-10-01 13:23  starseeker

	* [r74043] src/libbrep/cdt_ovlps.cpp:
	  refactor duplicate code

2019-10-01 02:41  brlcad

	* [r74042] src/mged/wdb_obj.c:
	  if there are no args, there's nothing to do. this hides the
	  problem of a wdb_obj command spewing an error message along with
	  pages of available commands. does not fix whatever issue is
	  underlying the spewage.

2019-10-01 02:23  brlcad

	* [r74041] include/brep/defines.h:
	  opennurbs has 'read' and 'write' in their 'archive_mode' enum.
	  since it's not something we use, just rename them before
	  inclusion.

2019-10-01 02:21  brlcad

	* [r74040] include/rt/uv.h:
	  add a define to zero-initialize the rt_texture structure

2019-10-01 02:20  brlcad

	* [r74039] src/libbu/log.c:
	  the logging hooks are bad practice for library code. fixing will
	  be invasive.

2019-10-01 02:15  brlcad

	* [r74038] src/librt/uv.c:
	  implement the second half, rt_texture_lookup() . need to make
	  output more flexible (not assume rgb texture data), but this
	  should to the immediate task at hand.

2019-09-30 21:46  starseeker

	* [r74037] src/libbrep/cdt_ovlps.cpp:
	  checkpoint some experiments.

2019-09-30 21:16  brlcad

	* [r74036] src/conv/step/step-g/Axis2Placement.cpp,
	  src/conv/step/step-g/Axis2Placement.h,
	  src/conv/step/step-g/CharacterizedDefinition.cpp,
	  src/conv/step/step-g/CharacterizedDefinition.h,
	  src/conv/step/step-g/CharacterizedProductDefinition.cpp,
	  src/conv/step/step-g/CharacterizedProductDefinition.h,
	  src/conv/step/step-g/Conic.h, src/conv/step/step-g/Curve.h,
	  src/conv/step/step-g/GeometricSetSelect.cpp,
	  src/conv/step/step-g/GeometricSetSelect.h,
	  src/conv/step/step-g/MeasureValue.cpp,
	  src/conv/step/step-g/MeasureValue.h,
	  src/conv/step/step-g/PCurveOrSurface.cpp,
	  src/conv/step/step-g/PCurveOrSurface.h,
	  src/conv/step/step-g/RepresentedDefinition.cpp,
	  src/conv/step/step-g/RepresentedDefinition.h,
	  src/conv/step/step-g/ShapeDefinition.cpp,
	  src/conv/step/step-g/ShapeDefinition.h,
	  src/conv/step/step-g/TrimmingSelect.cpp,
	  src/conv/step/step-g/TrimmingSelect.h:
	  getting new mac errors with UNKNOWN being already defined (by
	  clstepcore), so rename the individual types uniquely.

2019-09-30 19:51  starseeker

	* [r74035] src/libbrep/cdt_ovlps.cpp:
	  Will need to guard against the avg pulling a point too far away
	  from its parent triangle.

2019-09-30 19:45  starseeker

	* [r74034] src/libbrep/cdt_ovlps.cpp:
	  Report the distance moved

2019-09-30 19:43  starseeker

	* [r74033] src/libbrep/cdt_ovlps.cpp:
	  Ah, need to loosen the tolerance for this application of the
	  closest point routine.

2019-09-30 19:32  starseeker

	* [r74032] src/libbrep/cdt_ovlps.cpp:
	  Don't mess with the points if we have an evaluation failure.

2019-09-30 19:28  starseeker

	* [r74031] src/libbrep/cdt_ovlps.cpp:
	  Start testing the closest point lookups for the pavg usage.

2019-09-30 18:25  starseeker

	* [r74030] src/libbrep/cdt_ovlps.cpp:
	  Sort out simple pairs of points from more complex scenarios

2019-09-30 17:43  starseeker

	* [r74029] src/libbrep/cdt_ovlps.cpp:
	  Plot per-point boxes.

2019-09-30 15:33  starseeker

	* [r74028] src/libbrep/cdt_ovlps.cpp:
	  Initial stab at generating boxes for the vertices.

2019-09-30 13:42  starseeker

	* [r74027] src/libbrep/cdt_mesh.h, src/libbrep/cdt_ovlps.cpp:
	  Start looking at the neighborhood around vertices to try to
	  characterize their properties.

2019-09-30 13:18  starseeker

	* [r74026] src/libbrep/cdt_ovlps.cpp:
	  Break the face bbox check out into a function.

2019-09-27 20:25  starseeker

	* [r74025] src/libbrep/cdt_ovlps.cpp:
	  Start thinking about how to examine vertices.

2019-09-27 19:37  starseeker

	* [r74024] src/libbrep/cdt_ovlps.cpp:
	  Looking at the data being generated by the test case, we need an
	  initial pass to resolve close vertices before we get into the
	  triangles.

2019-09-27 18:07  starseeker

	* [r74023] src/libbrep/cdt_ovlps.cpp:
	  Go with the closest surface point. (For the moment we're using
	  the existing surface, not trying to use the triangle as the outer
	  loop...)

2019-09-27 17:57  starseeker

	* [r74022] src/libbrep/cdt_ovlps.cpp:
	  Hmm. Looking like the 2D and 3D spaces are different enough this
	  might not be viable...

2019-09-27 17:02  starseeker

	* [r74021] src/libbrep/cdt_ovlps.cpp:
	  Math isn't right yet, but start working on barycentric addressing
	  to get associated 3D points from 2D triangle intersections.

2019-09-27 13:46  starseeker

	* [r74020] src/libbrep/cdt_ovlps.cpp:
	  Make a stab at skipping edge-only intersections - i.e. no
	  intrusion into the interior of either triangle.

2019-09-27 13:11  starseeker

	* [r74019] src/libbrep/cdt.h, src/libbrep/cdt_ovlps.cpp:
	  Visualize the triangle intersections as well.

2019-09-27 12:59  starseeker

	* [r74018] src/libbrep/cdt_ovlps.cpp:
	  More localized visualization of overlap instances.

2019-09-26 23:14  starseeker

	* [r74017] src/libbrep/cdt_ovlps.cpp:
	  Identify the routines we'll need to check out for pullback
	  utility.

2019-09-26 23:11  starseeker

	* [r74016] src/libbrep/cdt.h, src/libbrep/cdt_ovlps.cpp:
	  What we're probably going to actually want for pullback is the
	  unique set of points of interest, which are multi-counted by the
	  detailed overlap recording.

2019-09-26 12:45  starseeker

	* [r74015] src/libbrep/cdt_ovlps.cpp:
	  Start outlining the next steps to work on. Need to implement the
	  various pieces to get a processing pipeline in place.

2019-09-26 01:11  starseeker

	* [r74014] misc/repoconv/custom/r29886_branches.fi,
	  misc/repoconv/custom/r29886_cjohnson_mac_hack.fi,
	  misc/repoconv/custom/r29886_cvs_svn_rel-5-1-branch_sync.fi,
	  misc/repoconv/custom/r29886_cvs_svn_trunk_sync.fi,
	  misc/repoconv/custom/r29886_tags.fi:
	  Checkpoint - I think that's got the sync commits updated, but
	  need to test.

2019-09-26 00:37  starseeker

	* [r74013] misc/repoconv/account-map, misc/repoconv/cvs_authormap:
	  It looks like we may be able to use the commit names as the
	  'email address' for the git conversion. After discussion, barring
	  some major breakage, this looks like our best option. Will need
	  to update the custom syncing commits to apply to the cvs
	  converison.

2019-09-25 20:39  starseeker

	* [r74012] src/libbrep/cdt_ovlps.cpp:
	  gcc wasn't liking the ascii art

2019-09-25 17:44  starseeker

	* [r74011] src/libbrep/cdt_ovlps.cpp:
	  Number the regions

2019-09-25 17:35  starseeker

	* [r74010] src/libbrep/cdt_ovlps.cpp:
	  Schematic notion of a triangle's regions where intruding points
	  will impact splitting behavior.

2019-09-25 13:51  starseeker

	* [r74009] src/libbrep/cdt_ovlps.cpp:
	  Need to think about closest points that involve existing vertices
	  as well.

2019-09-25 03:47  brlcad

	* [r74008] include/bu/hook.h:
	  document the hook api

2019-09-25 03:47  brlcad

	* [r74007] src/libbu/tests/hook.c:
	  behavior changed, NULL hooks are no longer disallowed so update
	  test accordingly.

2019-09-23 17:00  starseeker

	* [r74006] src/libbrep/cdt_ovlps.cpp:
	  More notes...

2019-09-23 13:23  starseeker

	* [r74005] src/libbrep/cdt_ovlps.cpp:
	  Record some initial thoughts on the processing patterns needed.

2019-09-23 12:47  starseeker

	* [r74004] src/libbrep/cdt_ovlps.cpp:
	  See if we can look systematically at the cases we may encounter,
	  and what operations make sense to deal with them.

2019-09-22 21:40  starseeker

	* [r74003] src/libbrep/cdt_ovlps.cpp:
	  Start thinking about the mechanics of splitting the triangles.

2019-09-22 15:24  starseeker

	* [r74002] src/libbrep/cdt_ovlps.cpp:
	  Outline the basics of the fundamental split operation.

2019-09-22 15:04  starseeker

	* [r74001] src/libbrep/cdt_ovlps.cpp:
	  Run through the overlapping tris and characterize them as being
	  either edge or surface interior tris.

2019-09-22 14:42  starseeker

	* [r74000] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h:
	  No longer using this function.

2019-09-22 14:38  starseeker

	* [r73999] src/libbrep/cdt.h, src/libbrep/cdt_ovlps.cpp:
	  Build the simpler tri set as well - not sure yet what info will
	  be needed where.

2019-09-21 21:00  starseeker

	* [r73998] src/libbrep/cdt_ovlps.cpp:
	  Need to back up and try the simplest thing first, just to verify
	  we can refine the mesh in this stage. If it looks worthwhile we
	  can refine the process, but let's start as basic as we can...

2019-09-21 20:29  starseeker

	* [r73997] src/libbrep/cdt_ovlps.cpp:
	  Need to think about when/how to break down triangles - overlaps
	  aren't always between parallel faces.

2019-09-21 20:07  starseeker

	* [r73996] src/libbrep/cdt.h, src/libbrep/cdt_ovlps.cpp:
	  Turn near-edge checks back on.

2019-09-21 17:52  starseeker

	* [r73995] src/libbrep/cdt.h, src/libbrep/cdt_mesh.cpp,
	  src/libbrep/cdt_mesh.h, src/libbrep/cdt_ovlps.cpp,
	  src/libbrep/cdt_util.cpp:
	  Add logic for plotting the overlap information.

2019-09-21 17:20  ejno

	* [r73994] misc/repoconv/account-map:
	  Update email address.

2019-09-21 17:00  starseeker

	* [r73993] src/libbrep/cdt_ovlps.cpp:
	  Quite the printing a bit - next step is probably to figure out
	  how to plot overlap instances.

2019-09-21 16:52  starseeker

	* [r73992] src/libbrep/cdt.h, src/libbrep/cdt_util.cpp:
	  remove obsolete, unused entry

2019-09-21 16:50  starseeker

	* [r73991] src/libbrep/cdt.h, src/libbrep/cdt_mesh.cpp,
	  src/libbrep/cdt_mesh.h, src/libbrep/cdt_ovlps.cpp:
	  Break out triangle test into function, start defining a notion of
	  an overlap instance.

2019-09-21 16:09  starseeker

	* [r73990] src/libbrep/CMakeLists.txt, src/libbrep/cdt.cpp,
	  src/libbrep/cdt_ovlps.cpp:
	  Break the overlaps code out into its own file.

2019-09-20 20:10  starseeker

	* [r73989] src/libbrep/cdt.cpp:
	  Start working on the 'is triangle involved with opposing edge
	  curve' preliminary filtering.

2019-09-20 19:43  starseeker

	* [r73988] src/libbrep/cdt.cpp:
	  have this backwards - edge concerns are not with current edge
	  points but the edges we may need to split.

2019-09-20 19:37  starseeker

	* [r73987] src/libbrep/cdt.cpp:
	  Detect which triangle interfering points are brep edge points.

2019-09-20 18:11  starseeker

	* [r73986] include/bg/tri_tri.h:
	  Document the bg_tri_tri_isect_with_line routine

2019-09-20 18:04  starseeker

	* [r73985] src/libbrep/cdt.cpp, src/libbrep/cdt_mesh.cpp,
	  src/libbrep/cdt_mesh.h:
	  Use the triangle planes to determine which specific points are
	  intruding into the other mesh.

2019-09-20 17:41  starseeker

	* [r73984] src/libbrep/cdt.cpp:
	  Filter out point-only intersections.

2019-09-20 16:12  starseeker

	* [r73983] include/bg/tri_tri.h:
	  Document what the return int means for bg_tri_tri_isect

2019-09-20 16:01  starseeker

	* [r73982] src/libbrep/RTree.h, src/libbrep/cdt.cpp,
	  src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h:
	  Return the (aggressive) set of overlapping triangles. This is
	  reporting triangles with a single point overlap, which isn't what
	  we actually want here, but it's a start.

2019-09-20 13:28  starseeker

	* [r73981] src/libbrep/cdt.cpp:
	  The criteria for rejecting tri-tri 'intersections' is more
	  specific, and doesn't actually rely on face neighbors - it's
	  quite possible in principle that a crescent moon subset of a
	  cylinder, for example, would produce overlaps from neighboring
	  faces.

2019-09-20 13:23  starseeker

	* [r73980] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h:
	  Give each triangle knowledge of its parent mesh.

2019-09-19 22:05  starseeker

	* [r73979] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_mesh.h, src/libbrep/cdt_util.cpp:
	  Use an rtree container to see what we need to be checking
	  according to the face bboxes.

2019-09-19 20:23  starseeker

	* [r73978] src/libbrep/cdt.cpp:
	  should really use rtrees for the bboxes too

2019-09-19 20:19  starseeker

	* [r73977] src/libged/shape_recognition.cpp:
	  Hook up the Ovlp_Resolve function (only initial checking for
	  overlaps in place at the moment.) Initial cyl_hole.g results look
	  sane as far as disjoint bbox testing - need to check reported tri
	  overlaps.

2019-09-19 20:08  starseeker

	* [r73976] src/libged/brep.c, src/libged/ged_private.h,
	  src/libged/shape_recognition.cpp:
	  Stub in a command to trigger the brep<->brep comparison piece -
	  eventually we'll feed a tree to this routine, but for now want
	  precise object/object testing.

2019-09-19 20:03  starseeker

	* [r73975] src/libbrep/tests/CMakeLists.txt,
	  src/libbrep/tests/cyl_hole.g:
	  Add a simpler test case for interference testing (thanks Shannon)
	  - start basic before we go after the comprehensive set.

2019-09-19 16:24  brlcad

	* [r73974] include/bu/cmd.h:
	  provide an example how to disable the log

2019-09-19 16:18  starseeker

	* [r73973] src/libbrep/cdt_mesh.cpp:
	  Adjust edge checker logic for edges2tri change.

2019-09-19 16:10  starseeker

	* [r73972] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h:
	  ditto edges2tris - use size_t index.

2019-09-19 16:08  starseeker

	* [r73971] src/libbrep/cdt_mesh.cpp:
	  Actually erase the edge->tri mapping from edges2tris when
	  removing a triangle...

2019-09-19 16:07  brlcad

	* [r73970] src/libbu/hook.c:
	  allow callers to register NULL hooks. this simplifies turning off
	  logging temporarily.

2019-09-19 16:05  starseeker

	* [r73969] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h:
	  ditto v2tris - use the index

2019-09-19 16:01  starseeker

	* [r73968] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h:
	  Use the index into tris_vect rather than copying triangle_t
	  structures around for uedges2tris.

2019-09-19 15:34  starseeker

	* [r73967] src/libbrep/cdt_edge.cpp, src/libbrep/cdt_mesh.cpp:
	  This check detects additional edge issues, but isn't able to
	  repair them - more investigation needed.

2019-09-19 14:22  brlcad

	* [r73966] src/libbu/cmd.c:
	  suppress blather when trying to run a command and nothing was
	  provided.

2019-09-19 05:06  brlcad

	* [r73965] CHANGES, include/bg/polygon.h, include/bn/mat.h,
	  include/bn/numgen.h, include/bn/plane.h, include/bn/tabdata.h,
	  include/ged/commands.h, include/nmg.h, include/rt/db4.h,
	  include/rt/geom.h, include/rt/primitives/ell.h,
	  include/rt/primitives/metaball.h, include/rt/primitives/pipe.h,
	  include/rt/primitives/rhc.h, include/rt/primitives/rpc.h,
	  include/rt/primitives/tgc.h, include/rt/private.h,
	  include/rt/rt_instance.h, include/vmath.h, include/wdb.h,
	  src/adrt/isst.c, src/conv/asc/asc2g.c, src/conv/asc/g2asc.c,
	  src/conv/comgeom/solid.c, src/conv/g-shell-rect.c,
	  src/conv/iges/make_face.c, src/conv/iges/trimsurf.c,
	  src/conv/intaval/write_brl.cpp, src/conv/nastran-g.c,
	  src/conv/obj-g.c, src/conv/patch/patch-g.c, src/conv/proe-g.c,
	  src/conv/tankill/tankill-g.c, src/external/Unigraphics/ug-g.c,
	  src/libanalyze/nirt.cpp, src/libanalyze/obj_to_pnts.cpp,
	  src/libanalyze/raydiff.c, src/libanalyze/util.cpp,
	  src/libanalyze/wnsurface.cpp, src/libbg/obr.c,
	  src/libbg/polygon.c, src/libbg/polygon_point_in.c,
	  src/libbg/tri_tri.c, src/libbg/trimesh.cpp,
	  src/libbg/trimesh_isect.cpp, src/libbg/util.c, src/libbn/mat.c,
	  src/libbn/numgen.c, src/libbn/plane.cpp, src/libbn/tabdata.c,
	  src/libbn/tests/bntester.c, src/libbn/tests/mat.c,
	  src/libbn/tests/plane_dist.c, src/libbn/tests/plane_pt.c,
	  src/libbrep/BBNode.cpp, src/libbrep/BRNode.cpp,
	  src/libbrep/boolean.cpp, src/libbrep/cdt_closed_surf.cpp,
	  src/libbrep/cdt_mesh.cpp, src/libbrep/opennurbs_ext.cpp,
	  src/libbrep/test_point_intersect.cpp, src/libdm/dm_util.c,
	  src/libgcv/bottess.c, src/libgcv/plugins/obj/obj_read.c,
	  src/libged/analyze.c, src/libged/bb.c, src/libged/bigE.c,
	  src/libged/clone.c, src/libged/coil.c, src/libged/comb.c,
	  src/libged/combmem.c, src/libged/display_list.c,
	  src/libged/edbot.c, src/libged/edit_metaball.c,
	  src/libged/edpipe.c, src/libged/facedef.c, src/libged/gdiff.c,
	  src/libged/get_solid_kp.c, src/libged/inside.c,
	  src/libged/joint.c, src/libged/libfuncs.c, src/libged/make.c,
	  src/libged/move_arb_edge.c, src/libged/orotate.c,
	  src/libged/oscale.c, src/libged/pnts.cpp, src/libged/sphgroup.c,
	  src/libged/typein.c, src/libged/view_obj.c, src/libged/vutil.c,
	  src/libnmg/ck.c, src/libnmg/class.c, src/libnmg/extrude.c,
	  src/libnmg/fcut.c, src/libnmg/fuse.c, src/libnmg/info.c,
	  src/libnmg/inter.c, src/libnmg/isect.c, src/libnmg/junk.c,
	  src/libnmg/mesh.c, src/libnmg/misc.c, src/libnmg/mk.c,
	  src/libnmg/mod.c, src/libnmg/nurb_util.c, src/libnmg/pt_fu.c,
	  src/libnmg/tri.c, src/librt/bool.c, src/librt/db_anim.c,
	  src/librt/librt_private.h, src/librt/pr.c,
	  src/librt/primitives/arb8/arb8.c,
	  src/librt/primitives/arb8/arb_edit.c,
	  src/librt/primitives/arbn/arbn.c, src/librt/primitives/ars/ars.c,
	  src/librt/primitives/bot/bot.c,
	  src/librt/primitives/bot/bot_wireframe.cpp,
	  src/librt/primitives/bot/decimate.c,
	  src/librt/primitives/bot/tie_kdtree.c,
	  src/librt/primitives/brep/brep.cpp,
	  src/librt/primitives/brep/brep_cdt.cpp,
	  src/librt/primitives/bspline/bspline.cpp,
	  src/librt/primitives/cline/cline.c,
	  src/librt/primitives/dsp/dsp.c,
	  src/librt/primitives/dsp/dsp_brep.cpp,
	  src/librt/primitives/ehy/ehy.c, src/librt/primitives/ell/ell.c,
	  src/librt/primitives/epa/epa.c, src/librt/primitives/eto/eto.c,
	  src/librt/primitives/extrude/extrude.c,
	  src/librt/primitives/hrt/hrt.c, src/librt/primitives/hyp/hyp.c,
	  src/librt/primitives/joint/joint.c,
	  src/librt/primitives/metaball/metaball.c,
	  src/librt/primitives/metaball/metaball_tri.c,
	  src/librt/primitives/nmg/nmg.c,
	  src/librt/primitives/nmg/nmg_tri_mc.c,
	  src/librt/primitives/part/part.c,
	  src/librt/primitives/pipe/pipe.c,
	  src/librt/primitives/pipe/pipe_brep.cpp,
	  src/librt/primitives/pipe/pipe_mirror.c,
	  src/librt/primitives/poly/poly.c,
	  src/librt/primitives/primitive_util.c,
	  src/librt/primitives/revolve/revolve_brep.cpp,
	  src/librt/primitives/rhc/rhc.c, src/librt/primitives/rpc/rpc.c,
	  src/librt/primitives/sketch/sketch_brep.cpp,
	  src/librt/primitives/superell/superell.c,
	  src/librt/primitives/tgc/tgc.c, src/librt/primitives/tor/tor.c,
	  src/librt/test_bot2nurbs.cpp, src/librt/tests/rt_datum.c,
	  src/librt/tests/ssi.cpp, src/libtclcad/libfuncs.c,
	  src/libtclcad/tclcad_obj.c, src/libwdb/pipe.c,
	  src/mged/chgview.c, src/mged/clone.c, src/mged/edars.c,
	  src/mged/edpipe.c, src/mged/edsol.c, src/mged/facedef.c,
	  src/mged/mged.h, src/mged/setup.c, src/mged/usepen.c,
	  src/nirt/command.c, src/proc-db/csgbrep.cpp,
	  src/proc-db/metaball.c, src/proc-db/nmgmodel.c,
	  src/proc-db/pipetest.c, src/rt/view.c, src/rt/viewxray.c,
	  src/rt/worker.c, src/tclscripts/archer/Archer.tcl,
	  src/tclscripts/archer/BotEditFrame.tcl,
	  src/tclscripts/archer/MetaballEditFrame.tcl,
	  src/tclscripts/archer/PipeEditFrame.tcl,
	  src/tclscripts/helplib.tcl, src/tclscripts/lib/Ged.tcl:
	  minimally impactful renaming of functions, defines, and structs
	  to use pnt vs pt in the name.

2019-09-19 00:49  starseeker

	* [r73964] src/libbrep/cdt_mesh.cpp:
	  NIST2 face 193 is exposing a problem...

2019-09-19 00:44  starseeker

	* [r73963] src/libbrep/cdt_mesh.cpp:
	  Might as well use a vector here and avoid the overhead of set

2019-09-18 22:25  starseeker

	* [r73962] include/brep/cdt.h, src/libbrep/RTree.h,
	  src/libbrep/cdt.cpp:
	  Start working on the high level logic flow to actually perform
	  comparisons between two brep meshes.

2019-09-18 20:41  starseeker

	* [r73961] src/libbrep/RTree.h:
	  Initial stab at boiling down the idea outlined by the openNURBS
	  code into RTree.h terms. Untested.

2019-09-18 19:59  starseeker

	* [r73960] src/libbrep/RTree.h:
	  footer, ws

2019-09-18 19:56  starseeker

	* [r73959] src/libbrep/cdt_edge.cpp, src/libbrep/cdt_mesh.h,
	  src/libbrep/cdt_surf.cpp:
	  Stash 3d->2d mappings when we have them (should be everywhere
	  except singularities)

2019-09-18 19:55  starseeker

	* [r73958] src/libbrep/RTree.h:
	  Start thinking about how to use the openNURBS logic for getting
	  overlapping boxes from two rtrees to identify what we have to
	  check for overlaps. Will want to refactor their implementation
	  into the version we're actually using (and make sure it works the
	  way we expect/need, or adjust it if it doesn't)

2019-09-18 17:44  starseeker

	* [r73957] src/libbrep/RTree.h:
	  Existing behavior seems to work, and substituting m_level - 1
	  does not work.

2019-09-18 17:28  starseeker

	* [r73956] src/libbrep/tests/CMakeLists.txt,
	  src/libbrep/tests/cyls_holes.g:
	  Add Shannon's set of NURBS cylinders in holes in a cube (designed
	  for meshing interference testing)

2019-09-18 15:28  starseeker

	* [r73955] src/libbrep/cdt_mesh.h:
	  Not sure RTrees are actually faster here, at least using them
	  naively - still liking the possibility of using them during
	  overlap checking, so may need to consider a fallback strategy.

2019-09-18 15:23  starseeker

	* [r73954] src/libbrep/cdt.cpp, src/libbrep/cdt_edge.cpp,
	  src/libbrep/cdt_surf.cpp:
	  Turn off the more verbose of the debugging plots.

2019-09-18 15:11  starseeker

	* [r73953] src/libbrep/cdt_mesh.cpp:
	  Saw what appears to be a case where this flipping was incorrect,
	  and I think the case it was originally intended for is being
	  avoided by the logic keeping surface points away from edges.

2019-09-18 12:40  starseeker

	* [r73952] src/libbrep/cdt_mesh.cpp:
	  Whoops - stray NOT flip from an earlier experiment didn't get
	  cleaned up. Every repair reported failure in initial loop growth
	  as a consequence.

2019-09-17 23:30  starseeker

	* [r73951] src/libbrep/cdt.cpp, src/libbrep/cdt_mesh.cpp,
	  src/libbrep/cdt_mesh.h, src/libbrep/cdt_util.cpp:
	  Checkpoint - not working with repairs yet, and seeing some signs
	  that the RTree container may not scale well to the larger meshes
	  using one-box-per-triangle insertion.

2019-09-17 22:23  starseeker

	* [r73950] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h:
	  Generate an rtree version of the triangle container which (at
	  least according to container sizes) is staying in sync with the
	  set.

2019-09-17 22:02  brlcad

	* [r73949] src/libged/libfuncs.c, src/libtclcad/libfuncs.c,
	  src/mged/setup.c:
	  refactor and reduce the other three as well: mat_mul, mat4x3pnt,
	  and mat_scale_about_pt moved to libged

2019-09-17 21:50  brlcad

	* [r73948] include/tclcad.h, src/libtclcad/libfuncs.c:
	  unused funcs

2019-09-17 21:48  brlcad

	* [r73947] src/libtclcad/libfuncs.c, src/mged/setup.c:
	  refactor and reduce now that there's a version of bn_mat_ae in
	  libged

2019-09-17 21:47  brlcad

	* [r73946] src/libged/libfuncs.c:
	  spell them out

2019-09-17 21:29  brlcad

	* [r73945] src/libged/TODO:
	  how to integrate the the tclcad Init specific functionality not
	  yet present in libged.

2019-09-17 15:30  starseeker

	* [r73944] src/libbrep/cdt_mesh.cpp:
	  Stash a note to eventually look into mesh unwrapping if local
	  planar projection proves insufficient.

2019-09-17 15:26  brlcad

	* [r73943] include/bn/numgen.h, src/libbn/numgen.c:
	  looks like pt and pts have a convention supermajority, so change
	  the public name

2019-09-17 07:40  brlcad

	* [r73942] src/librt/CMakeLists.txt, src/librt/uv.c:
	  implement the first half, rt_texture_load(). need to refactor
	  source and eliminate logging.

2019-09-17 01:03  starseeker

	* [r73941] src/libbrep/cdt_mesh.h:
	  This will need to be done a bit carefully, as tris holds the core
	  output data...

2019-09-17 00:46  starseeker

	* [r73940] src/libbrep/cdt.h, src/libbrep/cdt_mesh.cpp,
	  src/libbrep/cdt_mesh.h, src/libbrep/cdt_util.cpp:
	  poly2tri has been successfully pushed down into libbg.

2019-09-17 00:43  starseeker

	* [r73939] src/libbrep/cdt_mesh.h:
	  Need to explore the possibility of using an RTree to hold the
	  triangles - has potential utility in overlap checking, but may
	  also help the current performance issue of tri_add...

2019-09-17 00:39  starseeker

	* [r73938] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h:
	  Change the 2d triangles to use a vector - no uniqueness
	  guarantees are needed at this point.

2019-09-16 21:24  starseeker

	* [r73937] src/libbrep/cdt_surf.cpp:
	  Checkpoint an experiment - rather than using the normals from the
	  surface, look at the distance of the midpoints from the edge
	  curves in the outer curve. Then, iff we need to, evaluate the
	  midpoints on the edges of spatch and check the distance of the
	  midpoint of the surface patch from those lines against the
	  largest of the similar distances from the curved edges. In
	  essense, we're letting the curve breakdown handle the resolution
	  of how 'smooth' to make things and then having the surface match
	  the results of the edge breakdown.

2019-09-16 19:00  starseeker

	* [r73936] src/libbrep/cdt.cpp, src/libbrep/cdt_edge.cpp,
	  src/libbrep/cdt_surf.cpp:
	  Use the edge information to inform the surface sampling -
	  whatever the original settings were (or weren't) we need to match
	  the surface up to what the edge curves are expecting based on
	  their initial breakdown (particularly if they had to do essential
	  curved edge splitting.)

2019-09-16 12:33  starseeker

	* [r73931] src/libbrep/cdt_edge.cpp:
	  Stash some preliminary thoughts on how to better find a surface
	  point from the trim - other issues to deal with first, but I want
	  to come back to this.

2019-09-14 21:32  starseeker

	* [r73930] src/libbrep/cdt_mesh.cpp:
	  Got perf on a run - note the hot spot.

2019-09-14 16:34  starseeker

	* [r73929] src/libbrep/cdt_surf.cpp:
	  40 was too high a threshold at which to define a 'high level'
	  box.

2019-09-14 16:04  starseeker

	* [r73928] src/libbrep/cdt_surf.cpp:
	  Whoops - want min_edge, not max_edge, if we're looking at a high
	  level spatch. Considerably slows the face building stage, but
	  output looks more like what is expected.

2019-09-14 14:42  starseeker

	* [r73927] src/libbrep/cdt_surf.cpp:
	  Don't 3D filter the points from trims - that was the whole point
	  of breaking this out. However, we may want to incorproate a 'will
	  this make a valid face' check into the rtree_bbox routine, so we
	  can push the point out further into the surface if we need to.

2019-09-14 14:35  starseeker

	* [r73926] src/libbrep/cdt_edge.cpp:
	  Add point bboxes in 3D as well.

2019-09-14 14:02  starseeker

	* [r73925] src/libbrep/cdt.cpp, src/libbrep/cdt_surf.cpp:
	  Manage the trim-contributed surface points separately from the
	  those sampled in the surface breakdown. Be more aggressive about
	  rejecting points anywhere near trims, since the trim-contributed
	  points (which were actually being culled reliably by the 3D edge
	  segment check, unsurprsingly in retrospect) are there
	  specifically to handle those regions of the surface. Also plug
	  the bbox 'holes' in the 2D polygon loop trees by adding boxes
	  around the edge points. Should probably still do the same thing
	  for 3D, but this is looking better.

2019-09-13 18:51  starseeker

	* [r73924] src/libbrep/cdt_surf.cpp:
	  Add a note to check why we're not getting some expected
	  refinement of surface triangles in NIST2.

2019-09-13 18:48  starseeker

	* [r73923] src/libbrep/cdt.cpp, src/libbrep/cdt_edge.cpp:
	  Cute... turning on the additional refinements for NIST2 catches a
	  point sneaking outside one of the faces and making a few invalid
	  edges, right in the crack between to rtree3d boxes. Fix is pretty
	  straightforward (box the verteices) but will take a bit of work.

2019-09-12 23:21  starseeker

	* [r73922] src/libbrep/cdt_surf.cpp:
	  For the first time, all valid NIST examples ran through a CDT
	  cycle without reporting invalidities in output. Very slow, and
	  not as sparse in the triangle count department as might be
	  wished, but still a significant marker.

2019-09-12 23:11  starseeker

	* [r73921] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_edge.cpp:
	  adjust the singular_edges splitting logic to be updatable by
	  split_singular_seg

2019-09-12 21:30  starseeker

	* [r73920] src/libbrep/cdt.cpp:
	  not going the cdt early/often route

2019-09-12 21:28  starseeker

	* [r73919] src/libbrep/cdt_mesh.cpp:
	  this seems to work...

2019-09-12 21:07  starseeker

	* [r73918] src/libbrep/cdt_mesh.cpp:
	  Don't just erase from tris - properly remove

2019-09-12 20:57  starseeker

	* [r73917] src/libbrep/cdt_edge.cpp, src/libbrep/cdt_surf.cpp:
	  Add audit information.

2019-09-12 20:37  starseeker

	* [r73916] src/libbrep/cdt.cpp:
	  Maybe we don't need this?

2019-09-12 20:36  starseeker

	* [r73915] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h:
	  Stage logic for just yanking triangle with one bad edge. Not 100%
	  sure about this yet...

2019-09-12 19:46  starseeker

	* [r73914] src/libbrep/tests/CMakeLists.txt,
	  src/libbrep/tests/single_bad_edge.cdtmesh:
	  This mesh is an example of a bad triangle generated with only a
	  single bad edge from CDT, a case I'd not encountered previously.

2019-09-12 19:18  starseeker

	* [r73913] src/libbrep/cdt_mesh.cpp:
	  If we have a valid starting triangle, don't keep going.

2019-09-12 18:36  starseeker

	* [r73912] src/libbrep/cdt_mesh.h:
	  Make sure these containers are set up at initialization - for
	  some reason seed_tris was in an odd state when trying to load a
	  cdtmesh serialization.

2019-09-12 18:19  starseeker

	* [r73911] src/libbrep/cdt_mesh.cpp:
	  If there are only two triangles at the singularity, both of them
	  are edge triangles (i.e. each of them shares two edge points with
	  another face. A basic flip should be enough...

2019-09-12 18:11  starseeker

	* [r73910] src/libbrep/cdt_mesh.cpp:
	  typo

2019-09-12 18:08  starseeker

	* [r73909] src/libbrep/cdt_mesh.cpp:
	  Don't worry about it if we've only got one triangle at the
	  singularity to start with.

2019-09-12 17:42  starseeker

	* [r73908] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_edge.cpp:
	  Make edge splitter responsible for maintaining e2polysegs

2019-09-12 15:56  starseeker

	* [r73907] src/libbrep/cdt.cpp, src/libbrep/cdt_edge.cpp,
	  src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_surf.cpp:
	  Get more aggressive about keeping points away from 3D edges.
	  Unfortunately, the 3D rtrees are currently messed up somehow (per
	  NIST2 face 259.)

2019-09-12 15:06  starseeker

	* [r73906] src/libbrep/cdt_mesh.cpp:
	  got a crash to reproduce. steiner points can't be on the outer
	  loop.

2019-09-12 14:35  starseeker

	* [r73905] src/libbrep/cdt_mesh.cpp:
	  quoting

2019-09-12 14:30  starseeker

	* [r73904] src/libbrep/cdt_mesh.cpp:
	  be a bit more informative about the results\n

2019-09-12 14:00  starseeker

	* [r73903] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h:
	  Ah! traced a crash back to the repair polygon cdt step, rather
	  than the full CDT. Instrument that as well, although a quick test
	  still suggests it doesn't reproduce the crash...

2019-09-12 13:30  starseeker

	* [r73902] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h:
	  Add the ability to print out a C program to duplicate a CDT's
	  inputs stand-alone. Maddeningly, the crash doesn't reproduce...
	  unclear why.

2019-09-12 12:40  starseeker

	* [r73901] src/libbrep/cdt_edge.cpp, src/libbrep/cdt_surf.cpp:
	  Turn off the trim points temporarily - trying to get a handle on
	  what p2t's problem is.

2019-09-12 12:30  starseeker

	* [r73900] src/libbrep/cdt_surf.cpp:
	  Back up - that approach is probably less random when it comes to
	  p2t's orientations...

2019-09-12 00:49  starseeker

	* [r73899] src/libbrep/cdt_surf.cpp:
	  Note a few things to try. p2t crashes are hard to debug - there's
	  no clear sense of why an input isn't suitable - so some
	  experimentation is probably in order.

2019-09-11 23:01  starseeker

	* [r73898] src/libbrep/cdt_surf.cpp:
	  Try another approach to jittering the trim points, but even this
	  isn't doing it...

2019-09-11 22:34  starseeker

	* [r73897] src/libbrep/cdt.cpp, src/libbrep/cdt_surf.cpp:
	  Adjustments to surface point insertion.

2019-09-11 22:12  starseeker

	* [r73896] src/libbrep/cdt.cpp, src/libbrep/cdt_mesh.cpp,
	  src/libbrep/cdt_mesh.h:
	  Add an ability to plot the inputs being fed to p2t

2019-09-11 21:19  starseeker

	* [r73895] src/libbrep/cdt_surf.cpp:
	  Start working on incorporating sampled surface points into the
	  process. NIST2 293 is crashing in p2t right now...

2019-09-11 20:23  starseeker

	* [r73894] src/libbrep/cdt_edge.cpp, src/libbrep/cdt_mesh.cpp:
	  If we run into edge triangles that are flipped, just flip them -
	  if things can be sorted out, it will be with interior faces.

2019-09-11 19:15  starseeker

	* [r73893] src/libbrep/cdt.cpp:
	  A couple of tests show (unsurprisingly) that NIST 493 doesn't
	  exhibit the desired behavior if we do this.

2019-09-11 19:06  starseeker

	* [r73892] src/libbrep/cdt_surf.cpp:
	  We need to jitter the surface points from the trims to bump them
	  out of colinearity, just like we need to do for the main surface
	  sampling.

2019-09-11 18:41  starseeker

	* [r73891] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_edge.cpp, src/libbrep/cdt_mesh.h,
	  src/libbrep/cdt_surf.cpp, src/libbrep/cdt_util.cpp:
	  Test inserting trim points that don't fall into another trim's UV
	  bbox into the on_surf_points set.

2019-09-11 17:08  starseeker

	* [r73890] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_edge.cpp, src/libbrep/cdt_surf.cpp:
	  Back up the surface logic - want to try a slightly different
	  idea.

2019-09-11 16:53  starseeker

	* [r73889] src/libbrep/cdt.cpp, src/libbrep/cdt_edge.cpp,
	  src/libbrep/cdt_mesh.h:
	  Experiment with defining a point based on the polyedge.

2019-09-11 13:02  starseeker

	* [r73888] src/libbrep/cdt_edge.cpp, src/libbrep/cdt_mesh.h:
	  Stash in the polyedge which loop type it comes from.

2019-09-11 13:00  starseeker

	* [r73887] src/libbrep/cdt_surf.cpp:
	  This may not be the right approach - might be better to go with
	  inserting local points based on the trim bboxes, then just doing
	  the surface breakdown and rejecting at the end any points inside
	  either the trim bboxes or bboxes defined around the trim-inserted
	  points. Need to experiment with whether inserting points near
	  trims from their bboxes is workable.

2019-09-10 20:55  starseeker

	* [r73886] src/libbrep/cdt_edge.cpp:
	  (untested) we'll want to retain edge status information from
	  closest_edge processing for later reuse

2019-09-10 20:44  starseeker

	* [r73885] src/libbrep/cdt_surf.cpp:
	  Not sure if it's practical or advisable, but note a possible
	  strategy for trim surface point insertion...

2019-09-10 20:31  starseeker

	* [r73884] src/libbrep/cdt_edge.cpp, src/libbrep/cdt_surf.cpp:
	  Don't RemoveAll in the rtrees when we're calculating the distance
	  (copy paste strikes again...)

2019-09-10 18:35  starseeker

	* [r73883] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_edge.cpp, src/libbrep/cdt_mesh.h,
	  src/libbrep/cdt_surf.cpp:
	  Stash local information about how far away neighbor points are in
	  2D

2019-09-10 17:45  starseeker

	* [r73882] src/libbrep/cdt_surf.cpp:
	  Set up to plot individual surface patch bboxes in 2D.

2019-09-10 16:40  brlcad

	* [r73881] include/rt/defines.h,
	  src/librt/primitives/primitive_util.c:
	  apply vasco's sf patch #380 (OpenCL librt compilation errors)

2019-09-10 16:22  starseeker

	* [r73880] src/libbrep/cdt_surf.cpp:
	  As expected, there will be some thought needed on categorizing
	  surface patches relative to trim bboxes.

2019-09-10 16:15  starseeker

	* [r73879] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_edge.cpp:
	  After the initial breakdown, we won't need updated rtrees again
	  until the surface points are added.

2019-09-10 15:32  starseeker

	* [r73878] src/libbrep/cdt.h, src/libbrep/cdt_edge.cpp,
	  src/libbrep/cdt_surf.cpp:
	  rename rtree container

2019-09-10 15:20  starseeker

	* [r73877] src/libbrep/cdt_surf.cpp:
	  Stash local copies of the trimming loops in libbg form.

2019-09-10 15:12  starseeker

	* [r73876] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h:
	  Expose the ability to create a libbg style polygon - it's looking
	  like we'll need to use it.

2019-09-10 14:58  starseeker

	* [r73875] src/libbrep/cdt_surf.cpp:
	  Move the initialization to a function

2019-09-10 14:49  starseeker

	* [r73874] src/libbrep/cdt_surf.cpp:
	  If we want to produce valid meshes for small objects, BN_TOL_DIST
	  is probably too big here...

2019-09-10 14:42  starseeker

	* [r73873] src/libbrep/cdt_edge.cpp:
	  Use the 2d points from the polygon rather than recalculating.
	  TODO - may need to use face points via maps if there's any
	  disconnect between the polygons and the surface parameter
	  space...

2019-09-10 14:31  starseeker

	* [r73872] src/libbrep/cdt.h, src/libbrep/cdt_surf.cpp:
	  remove old cdt_surf_info definition

2019-09-10 14:28  starseeker

	* [r73871] src/libbrep/cdt_edge.cpp:
	  print out the initial state as well...

2019-09-10 13:22  starseeker

	* [r73870] src/libbrep/cdt_edge.cpp:
	  notes

2019-09-10 13:19  starseeker

	* [r73869] src/libbrep/cdt.cpp, src/libbrep/cdt_edge.cpp:
	  near loops check should be redundant now...

2019-09-10 13:07  starseeker

	* [r73868] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_edge.cpp, src/libbrep/cdt_mesh.h,
	  src/libbrep/cdt_util.cpp:
	  Change the bookkeeping logic somewhat, but not really a
	  substantial speedup. Need to slap a profiler on this to see where
	  we're spending time - if the extra time is necessary for geometry
	  correctness so be it, but should make sure.

2019-09-10 01:06  starseeker

	* [r73867] src/libbrep/cdt.cpp:
	  May want to reconsider matching the aspect ratio of the 3D
	  surface when it's really wacky...

2019-09-09 22:30  starseeker

	* [r73866] src/libbrep/cdt_edge.cpp:
	  2x is too big of a differential. However, we also need to cap the
	  depth to which we're splitting - faces like NIST2 172 will split
	  almost indefinitely if allowed.

2019-09-09 21:54  starseeker

	* [r73865] src/libbrep/cdt_edge.cpp:
	  Better, but face 493 isn't correctly refining. Also, this is
	  looking like it will be slow without some significant
	  optimization...

2019-09-09 20:56  starseeker

	* [r73864] src/libbrep/cdt_edge.cpp:
	  Making a bbox with two points doesn't do what I expected in some
	  cases. NIST2 face 5 new converges, on to face 37...

2019-09-09 20:18  starseeker

	* [r73863] src/libbrep/cdt_edge.cpp, src/libbrep/cdt_util.cpp:
	  Add some debug printing. Getting an unexpected miss in the rtree
	  search, not sure yet if I'm giving it bad input or it's a bug in
	  the tree...

2019-09-09 19:35  starseeker

	* [r73862] src/libbrep/cdt.h, src/libbrep/cdt_util.cpp:
	  Plot the bbox for a cpolyedge

2019-09-09 19:33  starseeker

	* [r73861] src/libbrep/RTree.h:
	  curBranch is supposed to be a pointer.

2019-09-09 15:49  starseeker

	* [r73860] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_edge.cpp:
	  Not working yet, but start trying to do the splitting based on
	  tree leaf overlapping.

2019-09-09 13:18  starseeker

	* [r73859] src/libbrep/cdt_edge.cpp:
	  Experiment with building up the initial 2d rtrees as we're doing
	  the initial splitting.

2019-09-08 15:03  starseeker

	* [r73858] src/libbrep/cdt_edge.cpp:
	  (Untested) start working on the logic to trigger a removal of a
	  bbox from an RTree

2019-09-07 23:04  starseeker

	* [r73857] src/libbrep/cdt_edge.cpp:
	  fix comment

2019-09-07 23:01  starseeker

	* [r73856] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_edge.cpp:
	  move the iteration down into the initialize_edge_segs function.

2019-09-07 22:51  starseeker

	* [r73855] src/libbrep/CMakeLists.txt, src/libbrep/cdt.cpp,
	  src/libbrep/cdt.h, src/libbrep/cdt_edge.cpp:
	  We're accumulating a fair bit of specialized edge logic again -
	  break it back out so the top level flow is easier to follow.

2019-09-07 21:56  starseeker

	* [r73854] src/libbrep/cdt.cpp:
	  Start thinking about how to do the RTree callback for
	  non-neighbor UV bbox overlap checking.

2019-09-07 14:58  starseeker

	* [r73853] src/libbrep/cdt.cpp:
	  The two polyedges connected to any given edge will most likely
	  have overlapping bboxes, and that's OK - it's the non-neighbor
	  overlaps that are the indication that an opposite edge is too
	  close to be reliably worked.

2019-09-07 12:07  starseeker

	* [r73852] src/libbrep/cdt.cpp:
	  implementation note

2019-09-07 12:01  starseeker

	* [r73851] src/libbrep/cdt_surf.cpp:
	  Sparse inputs are useful for thinking about what criteria we
	  actually need to satisfy to get what we need. Need to adjust the
	  surface sampling a bit, once we've refined the edge rtree logic.

2019-09-07 11:49  starseeker

	* [r73850] src/libbrep/cdt.cpp:
	  Need a somewhat different test here - right idea, but the CDT
	  validity can't be guaranteed at this point.

2019-09-06 20:00  starseeker

	* [r73849] src/libbrep/cdt.cpp:
	  Expand the boxes for the rtrees, so we can have better local
	  awareness when iterating down the surface. In particular, want to
	  study NIST2 face 493 behavior.

2019-09-06 19:31  starseeker

	* [r73848] src/libbrep/cdt.cpp:
	  The refinement of edges has to be paired with surface sampling,
	  or we quickly get into unworkable territory. NIST7 Solid1.s won't
	  quite work even in this basic mode because of a corner meeting
	  that produces an inconvenient triangle. That problem gets
	  heightned drastically when we sample more deeply. Need to look
	  carefully at surface sampling to make sure density near edges is
	  adequate.

2019-09-06 18:17  starseeker

	* [r73847] src/libbrep/cdt.cpp, src/libbrep/cdt_mesh.cpp,
	  src/libbrep/cdt_mesh.h:
	  This gets Solid1.s in NIST7-10 generating a solid bot, but NIST2
	  isn't quite happy.

2019-09-06 15:46  starseeker

	* [r73846] src/libbrep/cdt.cpp:
	  Better yet, only go smaller if we really need to.

2019-09-06 15:44  starseeker

	* [r73845] src/libbrep/cdt.cpp:
	  BREP_PLANAR_TOL is too large for some objects - base it off of
	  the surface bounds.

2019-09-06 13:40  starseeker

	* [r73844] src/libbrep/cdt.cpp:
	  Split curved edges an additional time so we don't end up with
	  square circles. Interestingly, with NIST2 this one refinement
	  introduces a need for repairs to a number of faces, not due to a
	  topologically invalid output but rather due to triangles on the
	  edges that end up at right angles to the face. That situation was
	  originally observed in sparse sampling and has a much higher
	  probability in this testing (since surface point sampling is
	  currently off) than in normal mesh sampling, but at least for
	  NIST2 the repair logic appears able to deal with it even working
	  only with edge points.

2019-09-06 13:12  starseeker

	* [r73843] src/libbrep/cdt.cpp, src/libbrep/cdt_mesh.cpp,
	  src/libbrep/cdt_mesh.h:
	  Do a test on the post initialization polygons to see if we can
	  get a valid face from the sparse inputs. If not, split the longer
	  edges until we can. In a sense, this is similar to the inital
	  breakdown of closed loops and always splitting curved edges at
	  least once (probably should be at least twice, really - squares
	  in place of circles is a jarring visual) in that we need to do
	  this refinement regardless of how liberal the tolerance settings
	  are in order to be able to return something valid. Have the rest
	  of the processing turned off for now - need to hammer out each
	  stage and build on it. The repair logic can mask problems earlier
	  in the chain, which we don't want - repair is a last resort after
	  everything else has been done right.

2019-09-06 02:04  starseeker

	* [r73842] src/libbrep/cdt.cpp:
	  ON_ZERO_TOLERANCE looks like it was too tight here - just take
	  the closest one, or if we only got one use that.

2019-09-05 23:57  starseeker

	* [r73841] src/libbrep/cdt.cpp, src/libbrep/cdt_mesh.cpp,
	  src/libbrep/cdt_surf.cpp, src/libbrep/cdt_util.cpp:
	  This works better for face 86 in NIST7-10 Solid1.s, but breaks a
	  fair number of other faces...

2019-09-05 23:17  starseeker

	* [r73840] src/libbrep/cdt.cpp:
	  Use calc_trim_vnorm, but something about the m_bRev handling is
	  out of kilter somehow...

2019-09-05 20:32  bob1961

	* [r73839] include/ged/commands.h, src/libged/CMakeLists.txt,
	  src/libged/libfuncs.c:
	  Exposed a bit of libbn's functionality through libged's
	  interface. At the moment it's only mat_ae, mat_mul, mat4x3pnt and
	  mat_scale_about_pt.

2019-09-05 16:30  starseeker

	* [r73838] src/libbrep/cdt.cpp, src/libbrep/cdt_mesh.h:
	  If we do preliminary triangulations, make sure to reset
	  afterwards.

2019-09-05 16:15  starseeker

	* [r73837] src/libbrep/cdt.cpp:
	  Remove debugging code.

2019-09-05 16:11  starseeker

	* [r73836] src/libbrep/cdt.cpp:
	  Match trim1 and trim2 with the corresponding bseg->tseg trim
	  index, not the edge's 0/1 listings.

2019-09-05 15:32  starseeker

	* [r73835] src/libbrep/cdt.cpp, src/libbrep/cdt_mesh.cpp:
	  NIST7-10 Solid1.s Face 24 is exposing a bookkeeping problem of
	  some sort.

2019-09-05 13:16  starseeker

	* [r73834] src/libbrep/cdt.cpp:
	  Start experimenting to see whether we can use the triangulation
	  information at the very beginning of the refinement process to
	  get the edges into a sufficiently refined state that after this
	  point the processing can keep things valid at all stages, instead
	  of trying to refine sufficiently to clear a bad state. If we can,
	  let's get over any such hurdles immediately, early in the
	  refinement process.

2019-09-05 13:03  starseeker

	* [r73833] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h,
	  src/libbrep/cdt_surf.cpp:
	  Not sure this is really necessary, but use point-in-polygon test
	  to pre-cull points outside the outer loop or inside the inner
	  trimming loops before handing off for triangulation. poly2tri may
	  handle this itself correctly, but a couple of planar
	  triangulation oddities make me wonder enough to want to try an
	  extra culling step.

2019-09-05 01:49  starseeker

	* [r73832] src/libbrep/cdt.cpp:
	  NIST2 edge 613 and face 493 are giving the triangulation at low
	  splitting levels some problems.

2019-09-04 19:49  starseeker

	* [r73831] src/libbrep/cdt.cpp:
	  update bot writing logic

2019-09-04 19:38  starseeker

	* [r73830] src/libbrep/cdt_util.cpp:
	  flip the normals if the face is reversed

2019-09-04 19:19  starseeker

	* [r73829] src/libbrep/cdt_util.cpp:
	  Remove the hardcoded tolerance for normal refinement testing

2019-09-04 19:14  starseeker

	* [r73828] src/libbrep/cdt.cpp:
	  Remove debug msg

2019-09-04 19:13  starseeker

	* [r73827] src/libbrep/CMakeLists.txt, src/libbrep/cdt.cpp,
	  src/libbrep/cdt2.cpp, src/libbrep/cdt_surf.cpp,
	  src/libbrep/cdt_surf2.cpp:
	  Consolidate cdt2.cpp back into cdt.cpp, rename cdt_surf2

2019-09-04 19:07  starseeker

	* [r73826] src/libbrep/CMakeLists.txt, src/libbrep/cdt.cpp,
	  src/libbrep/cdt.h, src/libbrep/cdt_edge.cpp,
	  src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h,
	  src/libbrep/cdt_patch.cpp, src/libbrep/cdt_surf.cpp,
	  src/libbrep/cdt_util.cpp, src/libbrep/cdt_validate.cpp,
	  src/libbrep/trimesh.cpp, src/libbrep/trimesh.h:
	  Begin scrubbing out the code no longer used by the new logic
	  flow.

2019-09-04 18:42  starseeker

	* [r73825] include/brep/cdt.h, src/libbrep/cdt.cpp,
	  src/libbrep/cdt2.cpp, src/libbrep/cdt_mesh.cpp,
	  src/libbrep/cdt_mesh.h, src/libbrep/cdt_surf2.cpp,
	  src/libbrep/cdt_util.cpp:
	  Restore vlist and triangle plotting using new setup.

2019-09-04 01:39  starseeker

	* [r73824] src/libbrep/cdt.cpp:
	  checkpoint - still need to make sure we have all the repair
	  information correctly in place.

2019-09-03 22:35  starseeker

	* [r73823] src/libbrep/cdt.cpp, src/libbrep/cdt2.cpp,
	  src/libbrep/cdt_mesh.h:
	  Start looking at how the logic flows will change in the main
	  tessellation logic. Some work here - this is a significant
	  change.

2019-09-03 22:10  starseeker

	* [r73822] src/libbrep/cdt2.cpp:
	  Large segments on curved edges in the same loop with more finely
	  refined curved segments is likely to lead to surface sampling
	  problems near the larger segments. Refine in those situations.

2019-09-03 20:59  starseeker

	* [r73821] src/libbrep/cdt2.cpp:
	  We need to do a bit more specialized edge refinement on the
	  curved edges.

2019-09-03 20:43  starseeker

	* [r73820] src/libbrep/cdt_surf2.cpp:
	  Populate the 3D points - first successful creation of triangles
	  on the rcc sample using interior points with the new setup.

2019-09-03 20:20  starseeker

	* [r73819] src/libbrep/cdt2.cpp, src/libbrep/cdt_surf2.cpp:
	  Not working yet, but start looking at the surface sampling logic
	  and what's needed to integrate it into the new setup.

2019-09-03 18:50  starseeker

	* [r73818] src/libbrep/cdt2.cpp:
	  Only use the loop median lengths from associated non-planar
	  surfaces. This is still less than ideal for locality...

2019-09-03 16:55  starseeker

	* [r73817] src/libbrep/cdt2.cpp:
	  Be a bit more aggressive in local searching, and consider newly
	  created segments for splitting as well.

2019-09-03 16:44  starseeker

	* [r73816] src/libbrep/cdt.h, src/libbrep/cdt2.cpp:
	  Make a stab at splitting edges that are long compared to their
	  local environment.

2019-09-01 22:32  starseeker

	* [r73815] src/libbrep/cdt2.cpp:
	  Start thinking about how to assemble loop rtrees

2019-09-01 12:24  starseeker

	* [r73814] src/libbrep/cdt2.cpp:
	  Probably need to check for close neighbor loops when splitting
	  edge segments.

2019-09-01 00:33  starseeker

	* [r73813] src/libbrep/cdt2.cpp, src/libbrep/cdt_mesh.cpp,
	  src/libbrep/cdt_mesh.h:
	  Do the assignment of each trim segment's edge segment after all
	  else is finalized.

2019-08-31 21:50  starseeker

	* [r73812] src/libbrep/cdt2.cpp, src/libbrep/cdt_mesh.cpp,
	  src/libbrep/cdt_mesh.h:
	  Associating the edge segments with the trims isn't working
	  reliably - some segments seem to be referencing deleted edges.
	  I'm still not completely sure why that wasn't working - a trim
	  shouldn't survive to reference an obsolete edge container, so it
	  may be an indication of a bookkeeping problem somewhere... For
	  now, just go with using the trim information directly. Slightly
	  less than ideal if the trims are far from the edge when building
	  3D rtrees - boxes will have to be expanded enough to be sure
	  we're capturing the needed locality.

2019-08-31 21:19  starseeker

	* [r73811] src/libbrep/cdt2.cpp:
	  NIST2 is exposing problems when we split the edges deeper...

2019-08-31 20:58  starseeker

	* [r73810] src/libbrep/cdt2.cpp, src/libbrep/cdt_util.cpp:
	  Continue splitting edges until tolerances are met.

2019-08-31 19:29  starseeker

	* [r73809] src/libbrep/cdt_surf2.cpp:
	  notes

2019-08-31 19:19  starseeker

	* [r73808] src/libbrep/CMakeLists.txt, src/libbrep/cdt_surf2.cpp:
	  Start working on mapping the surface sampling logic onto the new
	  structures. Will need some careful testing and probably
	  printing/plotting to make sure the pieces are right here...

2019-08-31 18:25  starseeker

	* [r73807] src/libbrep/cdt.h, src/libbrep/cdt2.cpp:
	  At least for now, we'll need singularity information for the
	  surface sampling logic.

2019-08-31 16:05  starseeker

	* [r73806] src/libbrep/cdt2.cpp:
	  Remove debugging code.

2019-08-31 16:01  starseeker

	* [r73805] src/libbrep/cdt2.cpp:
	  Add a similar ability to the cdt.cpp curve building - break down
	  the singular 2D trims so the 2D CDT algorithm has more points to
	  target along singularity trims.

2019-08-31 14:37  starseeker

	* [r73804] src/libbrep/cdt2.cpp, src/libbrep/cdt_mesh.cpp,
	  src/libbrep/cdt_mesh.h:
	  If we want the polygon to be robust to degenerate edge
	  manipulations, we have to act on ordered rather than unordered
	  edges. Repair situations preclude this happening by always
	  starting with a triangle, but face loops may begin (in the early
	  stages of splitting) with degenerate edges. The cylinder with a
	  closed loop edge was getting a 0-1 and 1-0 edges, which needed to
	  be distinct for subsequent splitting but were the same when
	  converted to an unordered edge. We want the unordered insertion
	  for robustness in repair situations, where we may need to walk
	  over odd edges, but for face loop building our ordering is
	  constrained by the loop itself. Add API to the polygon that lets
	  us bypass the unordering portion of the edge insertion/removal
	  logic for this case.

2019-08-30 20:40  starseeker

	* [r73803] src/libbrep/cdt2.cpp, src/libbrep/cdt_mesh.cpp:
	  Let the loop close the polygon. This exposes an oddity where
	  remove_edge corrupts the working memory of the parent polygon
	  container when there's only one edge present, but haven't run
	  that to ground yet... valgrind isn't seeing anything and it will
	  work successfuly in valgrind. For the moment, disable the
	  deletion of the culled edge.

2019-08-30 19:50  starseeker

	* [r73802] src/libbrep/cdt2.cpp:
	  Didn't mean to commit that file yet.

2019-08-30 19:48  starseeker

	* [r73801] src/libbrep/cdt2.cpp, src/libbrep/cdt_mesh.h:
	  Initialize

2019-08-30 18:50  starseeker

	* [r73800] src/libbrep/cdt2.cpp:
	  Accumulate the cpolyedge pointers associated with singularities.

2019-08-30 18:37  starseeker

	* [r73799] src/libbrep/cdt2.cpp:
	  Stress the importance of getting this piece correct - was hard to
	  run down from the graphically observed errors.

2019-08-30 18:32  starseeker

	* [r73798] src/libbrep/cdt2.cpp:
	  Scrub out the debugging code, but just ifdef out the debug
	  plotting/printing functions for now - we may need them again.

2019-08-30 18:22  starseeker

	* [r73797] src/libbrep/cdt2.cpp:
	  More debug printing, and a combination of settings that appears
	  to result in NIST2 face 34 working correctly.

2019-08-29 20:27  brlcad

	* [r73796] src/librt/primitives/brep/brep.cpp:
	  remove comments

2019-08-29 20:19  starseeker

	* [r73795] src/libbrep/cdt2.cpp:
	  OK... we're considering the wrong trim range for the edge_mid_3d
	  point. The question is how to change that...

2019-08-29 20:02  starseeker

	* [r73794] src/libbrep/cdt2.cpp, src/libbrep/cdt_mesh.cpp,
	  src/libbrep/cdt_mesh.h:
	  More debugging output

2019-08-29 17:30  starseeker

	* [r73793] src/libbrep/cdt2.cpp, src/libbrep/cdt_mesh.h:
	  Start setting up exhaustive information output on a NIST2 face
	  that's not behaving the way we want. Not closed, so it doesn't
	  have that added visual complication in interpreting output.

2019-08-28 21:42  starseeker

	* [r73792] src/libbrep/cdt2.cpp:
	  Trim point distances are better this way, but the loops
	  self-intersect. Hmm...

2019-08-28 20:40  starseeker

	* [r73791] src/libbrep/cdt2.cpp:
	  NIST2 face 34 is closer to correct this way, but the interior 3D
	  points on the splits are still reversed.

2019-08-28 20:29  starseeker

	* [r73790] src/libbrep/cdt2.cpp:
	  NIST2 isn't reporting any more closure failures, but we're back
	  to the cylinder not triangulating correctly...

2019-08-28 20:26  starseeker

	* [r73789] src/libbrep/cdt2.cpp:
	  Check the correct trim for reversal

2019-08-28 20:04  starseeker

	* [r73788] src/libbrep/cdt2.cpp, src/libbrep/cdt_util.cpp:
	  A run through the NIST2 model shows we're still not handling a
	  variety of cases correctly.

2019-08-28 18:32  starseeker

	* [r73787] src/libbrep/cdt2.cpp:
	  Set the face index, fix rtree printing

2019-08-28 17:38  starseeker

	* [r73786] src/libbrep/cdt2.cpp, src/libbrep/cdt_mesh.cpp:
	  Go looking for singularity trims in loops

2019-08-28 17:18  starseeker

	* [r73785] src/libbrep/cdt.h, src/libbrep/cdt2.cpp,
	  src/libbrep/cdt_util.cpp:
	  Build RTree lookup structures for 2D and 3D.

2019-08-28 15:23  starseeker

	* [r73784] src/libbrep/cdt2.cpp:
	  rtrees are up next...

2019-08-28 15:19  starseeker

	* [r73783] src/libbrep/cdt2.cpp:
	  Flip the trim_start and trim_end values for splitting if trim is
	  reversed, but not when building the initial loop - we're handling
	  it at that level by flipping the vertex references.

2019-08-28 15:16  brlcad

	* [r73782] src/librt/primitives/brep/brep.cpp:
	  document some of the constants now that I have a slightly better
	  understanding of them

2019-08-28 15:03  brlcad

	* [r73781] src/librt/primitives/brep/brep.cpp:
	  bio.h takes care of not breaking std::min and std::max

2019-08-28 14:59  starseeker

	* [r73780] src/libbrep/cdt2.cpp:
	  Well, this avoids warnings about large distance offsets, but
	  doesn't untwist the cylinder.

2019-08-28 14:43  starseeker

	* [r73779] src/libbrep/cdt_mesh.cpp:
	  Print out the 2D coordinates as well

2019-08-28 11:53  starseeker

	* [r73778] src/libbrep/cdt2.cpp:
	  Refine where we need to test evaluation incorporating trim
	  reversal.

2019-08-28 02:13  brlcad

	* [r73777] src/librt/primitives/brep/brep.cpp:
	  reduce scope of all functions only used locally and eliminate all
	  unused code. this includes huge chunks of works-in-progress that
	  were never completed, debugging code, plotting code, and more.
	  code is completed enough to have to wade through over 30% that
	  was dead.

2019-08-28 01:55  brlcad

	* [r73776] src/librt/primitives/brep/brep_debug.cpp:
	  decouple from brep.cpp since this is a one-line helper func.

2019-08-27 23:59  starseeker

	* [r73775] src/libbrep/cdt2.cpp:
	  Need to try to get smarter about which 2D point we're returning
	  when the trim curve is reversed.

2019-08-27 23:54  starseeker

	* [r73774] src/libbrep/cdt2.cpp:
	  I don't think this routine is actually specific to the
	  midpoint...

2019-08-27 21:39  starseeker

	* [r73773] src/libbrep/cdt2.cpp:
	  The 2D plot looks right when we go this route, but the cylinder
	  is twisted in 3D. I'm wondering if adding the surface points will
	  fix this - with a reversed trim, the closest edge point in 2D for
	  the triangulation is in fact the one that is further away in 3D,
	  and the edges near the linear edge split are slightly better...

2019-08-27 20:44  brlcad

	* [r73772] src/librt/primitives/brep/brep.cpp:
	  normal is computed during shot() so callback needs to do nothing
	  but return.

2019-08-27 20:42  brlcad

	* [r73771] src/liboptical/shade.c:
	  remove debugging

2019-08-27 20:11  starseeker

	* [r73770] src/libbrep/cdt2.cpp, src/libbrep/cdt_mesh.cpp,
	  src/libbrep/cdt_mesh.h:
	  Add 2d triangulation plotting for debugging

2019-08-27 18:36  bob1961

	* [r73769] src/libtclcad/tclcad_obj.c:
	  Use %zu for scanning size_t.

2019-08-27 15:48  starseeker

	* [r73768] src/libbrep/cdt.h, src/libbrep/cdt2.cpp:
	  Got linear split, but it's messing up the tessellation - lost one
	  of the cylinder face loops.

2019-08-27 14:58  starseeker

	* [r73767] src/libbrep/cdt2.cpp:
	  Non-linear edges only at this stage

2019-08-27 14:54  starseeker

	* [r73766] src/libbrep/cdt2.cpp:
	  Only one type number per edge

2019-08-27 11:27  starseeker

	* [r73765] src/proc-db/brep_trimmed.cpp:
	  fix build

2019-08-27 06:49  brlcad

	* [r73764] src/librt/primitives/brep/brep.cpp:
	  no longer need the compile-time single-surface conditional

2019-08-27 06:47  brlcad

	* [r73763] src/librt/primitives/brep/brep.cpp:
	  this enables ray tracing of non-solid NURBS geometry.
	  
	  instead of letting shotlines with non-even parity hit counts
	  return
	  nothing, we now returns all intersection points encountered. this
	  has
	  the intended affect of always allowing NURBS geometry to render
	  while
	  still having no LOS contribution towards analyses.
	  
	  more bits are needed to not give a false sense of solidity,
	  namely
	  that non-solid geometry is reported as such during import and
	  marked
	  as plate-mode or rejected, for example.
	  
	  one unintended discovery is I'm seeing non-even parity hits on
	  solid
	  geometry (e.g., nist #1). will need to be investigated as now
	  those
	  previously rejected hits (presumably edge grazings) will now
	  report
	  zero-thickness hits. this can introduce flipped normal reporting
	  where there previously was none if we graze on a back-facing
	  surface
	  edge.

2019-08-27 06:33  brlcad

	* [r73762] src/librt/primitives/brep/brep_local.h:
	  stash a solidity bit in the brep_specific so we only need to
	  traverse topology once, during prep

2019-08-27 04:47  brlcad

	* [r73761] src/librt/primitives/brep/brep.cpp:
	  restore print statement informing when a brep is invalid, but
	  don't halt.

2019-08-27 03:28  brlcad

	* [r73760] NEWS:
	  credit wu for his OBJ parser memory leak fix. empty string
	  entities weren't being memory-managed properly.

2019-08-27 03:22  brlcad

	* [r73759] src/proc-db/CMakeLists.txt,
	  src/proc-db/brep_invalid.cpp, src/proc-db/brep_trimmed.cpp:
	  add two more helper utilities for testing, derived from wu's
	  gsoc16 work. includes an interior trim example as well as an
	  invalid trim case.

2019-08-26 22:09  brlcad

	* [r73758] src/libgcv/plugins/obj/wfobj/obj_parser_state.h:
	  fix indent

2019-08-26 21:03  starseeker

	* [r73757] src/libbrep/cdt.h, src/libbrep/cdt2.cpp:
	  Print out calculated medians

2019-08-26 19:51  starseeker

	* [r73756] src/libbrep/cdt2.cpp:
	  Got what appears to be a successful tolerance breakdown.

2019-08-26 19:47  starseeker

	* [r73755] src/libbrep/cdt2.cpp:
	  Vertex points are coming from trims at this stage - use the
	  sind/eind variables.

2019-08-26 19:40  starseeker

	* [r73754] src/libbrep/cdt2.cpp, src/libbrep/cdt_mesh.h,
	  src/libbrep/cdt_util.cpp:
	  Checkpoint some tolerance work - will get back to this once the
	  more basic bugs are run to ground...

2019-08-26 19:38  starseeker

	* [r73753] src/libbrep/cdt2.cpp:
	  Blast it. Something isn't right with the reversed trimming
	  curves. This is a bit closer, but still not there.

2019-08-26 19:13  starseeker

	* [r73752] src/libbrep/cdt2.cpp:
	  Using the wrong tmid here...

2019-08-26 17:54  starseeker

	* [r73751] src/libbrep/cdt2.cpp:
	  Don't do this branch if we're close to zero distance.

2019-08-26 15:51  starseeker

	* [r73750] src/librt/primitives/brep/brep_debug.cpp:
	  Initialize the tolerance structures

2019-08-26 14:38  starseeker

	* [r73749] src/libbrep/cdt2.cpp, src/libbrep/cdt_util.cpp:
	  Start trying to think systematically about edges and when to
	  split them.

2019-08-26 01:38  starseeker

	* [r73748] src/libbrep/cdt2.cpp:
	  More notes on tolerance and edge splitting.

2019-08-25 19:08  d_rossberg

	* [r73747] src/librt/primitives/annot/annot.c:
	  Why so complicated and the +1? Simplified the computation and
	  counted from the reference point because the bmin may contain
	  descenders as in the "g" letter.

2019-08-25 18:03  d_rossberg

	* [r73746] src/librt/primitives/annot/annot.c:
	  removed unused functions rt_annot_import4() and
	  rt_annot_export4()
	  There is no need to support version 4 databases. BRL-CAD versions
	  using this don't know about annotations.

2019-08-25 17:52  d_rossberg

	* [r73745] src/librt/primitives/annot/annot.c,
	  src/librt/primitives/table.cpp:
	  patch #531 (https://sourceforge.net/p/brlcad/patches/531/) from
	  ali haydar: a bug in l command when used on the annotation
	  primitive
	  when we use the l command for an annotation the text label is not
	  printed if it was more than one letter I think the reason is the
	  inconsistent behavior between the exporting and the importing
	  operation of the primitive

2019-08-25 17:35  d_rossberg

	* [r73744] src/librt/primitives/annot/annot.c:
	  patch #534 (https://sourceforge.net/p/brlcad/patches/534/) from
	  ali haydar: a bug due to the new ant_label_dimensions() function
	  reviewing the committed code I found this bug which breaks the
	  whole drawing operation of the primitive, the initialization of
	  the bu_list is not correct so its magic is zero so
	  bn_vlist_2string() function will not work

2019-08-25 14:38  starseeker

	* [r73743] src/libbrep/cdt2.cpp, src/libbrep/cdt_mesh.h:
	  Commit some thoughts on tolerance interpretation in a brep CDT
	  context.

2019-08-23 16:26  starseeker

	* [r73742] src/libbrep/cdt2.cpp, src/libbrep/cdt_mesh.cpp:
	  Move the unique index comment to where we're actually applying
	  it.

2019-08-23 15:49  starseeker

	* [r73741] src/libbrep/CMakeLists.txt, src/libbrep/cdt.cpp,
	  src/libbrep/cdt2.cpp, src/libbrep/cdt_mesh.cpp,
	  src/libbrep/cdt_mesh.h:
	  Turn back on the cdt2.cpp experimental code.

2019-08-23 15:23  starseeker

	* [r73740] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h:
	  clean up the cpolygon_t class a bit.

2019-08-23 15:03  starseeker

	* [r73739] src/libbrep/cdt_mesh.cpp:
	  Turn best fit projection back on

2019-08-23 14:47  starseeker

	* [r73738] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h:
	  Untangle the 3D logic using cmesh from the 2D cpolygon_t logic.

2019-08-23 12:25  starseeker

	* [r73737] src/libbrep/CMakeLists.txt, src/libbrep/cdt.cpp,
	  src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h:
	  Walk back a few of the changes

2019-08-23 10:45  starseeker

	* [r73736] src/libbrep/cdt_mesh.h:
	  Make a note on how to rework cdt_mesh and cpolygon

2019-08-23 09:47  starseeker

	* [r73735] misc/repoconv/CONVERT.sh:
	  Will want a backup before we try this step.

2019-08-23 09:36  starseeker

	* [r73734] misc/repoconv/NOTES:
	  Dredge up the previous filter-branch attempt and tweak it with
	  the commit-filter suggestion. Untested, and since we'll be doing
	  one final run anyway to correct multiple issues it's not needed
	  currently, but it would be a useful thing to demonstrate on the
	  previous test commit as a proof of concept to know we CAN do it
	  successfully if we have to.

2019-08-23 09:22  starseeker

	* [r73733] misc/repoconv/NOTES:
	  Sean checked with the Git email list and it looks like there may
	  be a way to handle filter-branch operations in a way that keeps
	  the notes.

2019-08-23 03:05  starseeker

	* [r73732] src/libbrep/cdt2.cpp, src/libbrep/cdt_mesh.cpp,
	  src/libbrep/cdt_mesh.h:
	  Operations on 3D polygons often won't make sense working with 2D
	  points in the UV domain. Need to keep better track of what we're
	  processing.

2019-08-22 22:43  bob1961

	* [r73731] src/libtclcad/tclcad_obj.c:
	  Fixed a bit of code in to_data_move_point_mode_func() that didn't
	  get updated during a previous refactor.

2019-08-22 19:49  starseeker

	* [r73730] src/libbrep/cdt2.cpp:
	  Need to think about how to store and move tolerance information
	  in the new setup.

2019-08-22 19:41  starseeker

	* [r73729] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h:
	  Add a couple methods to reduce the verbosity of getting 3D points

2019-08-22 19:19  starseeker

	* [r73728] src/libbrep/cdt2.cpp:
	  don't wipe out the value if the tangent evaluation succeeds

2019-08-22 19:09  starseeker

	* [r73727] src/libbrep/cdt2.cpp, src/libbrep/cdt_mesh.cpp,
	  src/libbrep/cdt_mesh.h:
	  Add some debug printing capability for the edge and trim
	  segments.

2019-08-22 10:23  starseeker

	* [r73726] src/libbrep/cdt2.cpp:
	  Note other needed pieces

2019-08-22 10:18  starseeker

	* [r73725] src/libbrep/cdt2.cpp:
	  Next up is to add back in the tolerance based splitting decision
	  logic.

2019-08-22 05:00  brlcad

	* [r73724] src/libwdb/brep.cpp:
	  follow the advice and call New() instead of constructor for dll
	  vtable safety on windows

2019-08-22 04:48  brlcad

	* [r73723] src/proc-db/CMakeLists.txt,
	  src/proc-db/brep_surface.cpp:
	  add a modified version of wu's single-surface brep generator,
	  cleaned up for testing

2019-08-22 01:45  starseeker

	* [r73722] src/libbrep/cdt2.cpp:
	  Try to do better about finding close trim points when processing
	  edges

2019-08-21 23:27  starseeker

	* [r73721] src/libbrep/cdt2.cpp:
	  fix issues exposed by the basic rcc case

2019-08-21 21:37  starseeker

	* [r73720] src/libbrep/cdt2.cpp, src/libbrep/cdt_mesh.cpp,
	  src/libbrep/cdt_mesh.h:
	  Clearly the mappings aren't right yet - was working
	  coincidentally with NIST1

2019-08-21 21:24  starseeker

	* [r73719] src/libged/center.cpp:
	  Quick and dirty support for point specification using , or :
	  separators not involving spaces. This really should be a regex of
	  some sort.

2019-08-21 20:04  starseeker

	* [r73718] src/libbrep/cdt2.cpp, src/libbrep/cdt_mesh.cpp,
	  src/libbrep/cdt_mesh.h:
	  First successful split of edges with new logic.

2019-08-21 19:49  brlcad

	* [r73717] doc/docbook/system/mann/overlay.xml:
	  document pattern matching

2019-08-21 19:46  brlcad

	* [r73716] TODO:
	  overlay needs to accept multiple file arguments to be consistent
	  with accepting filepath pattern matching.

2019-08-21 19:43  brlcad

	* [r73715] NEWS:
	  cliff extended the plot 'overlay' command to accept filepath
	  patterns. this lets multiple plot files be specified more simply,
	  all at once.

2019-08-21 18:42  starseeker

	* [r73714] src/libbrep/cdt2.cpp, src/libbrep/cdt_mesh.cpp,
	  src/libbrep/cdt_mesh.h:
	  Checkpoint work on the polygon edge split attempt. Not correct
	  yet.

2019-08-21 16:55  starseeker

	* [r73713] src/libbrep/cdt2.cpp:
	  initialize

2019-08-21 13:50  starseeker

	* [r73712] src/libbrep/cdt2.cpp, src/libbrep/cdt_mesh.h:
	  Start working on boiling down the edge splitting logic so we can
	  connect it to the cpolygon loop management. Should be able to
	  maintain valid loops as we're splitting edges (e.g. 'tessellate
	  at any point') so we can id problems when they're simpler to
	  debug.

2019-08-21 11:39  starseeker

	* [r73711] src/libbrep/CMakeLists.txt, src/libbrep/cdt.cpp,
	  src/libbrep/cdt.h, src/libbrep/cdt2.cpp:
	  split the experimental code out

2019-08-21 11:32  starseeker

	* [r73710] src/libbrep/cdt_mesh.cpp:
	  Turn off some debug printing

2019-08-21 03:52  starseeker

	* [r73709] src/libbrep/cdt_mesh.cpp:
	  The line intersection was triggering results by successfully
	  intersecting infinite lines with non-local segments in such a way
	  that the params passed. May need more robustness handling here,
	  but start with the simple filter of disjoint bboxes to rule out
	  intersection.

2019-08-21 03:36  starseeker

	* [r73708] src/libbrep/cdt_mesh.cpp:
	  Debug printing hunting for cause of apparently incorrect
	  self-isect result...

2019-08-21 00:45  starseeker

	* [r73707] src/libbrep/cdt.cpp, src/libbrep/cdt_mesh.cpp:
	  Plot self-intersecting reporting edges in a different color. They
	  are visible, but it's still not clear yet what's going on...

2019-08-21 00:28  starseeker

	* [r73706] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h:
	  Hmm. NIST1 face 27 outer loop is reporting as self-intersecting,
	  but will still tessellate. Wireframe from brep plot F does look
	  self intersecting, but linear vertex interpolation doesn't to a
	  casual inspection. Need to check more closely.

2019-08-21 00:15  starseeker

	* [r73705] src/libbrep/cdt.cpp, src/libbrep/cdt_mesh.cpp,
	  src/libbrep/cdt_mesh.h:
	  Keep 3D points out of the cpolygon - just have the plotting
	  routine use p2f.

2019-08-20 23:35  starseeker

	* [r73704] src/libbrep/cdt.cpp, src/libbrep/cdt_mesh.cpp:
	  First demonstration of a cdt with holes using the new cdt()
	  function.

2019-08-20 21:40  starseeker

	* [r73703] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h:
	  Start roughing in a full polygon+holes cdt for the cdt_mesh class

2019-08-20 21:16  starseeker

	* [r73702] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h:
	  To see individual polygon triangulations we need to plot at the
	  polygon level.

2019-08-20 20:49  starseeker

	* [r73701] src/libbrep/RTree.h:
	  Right... include common.h

2019-08-20 20:45  brlcad

	* [r73700] include/rt/geom.h, src/libged/typein.c,
	  src/librt/primitives/annot/annot.c:
	  rename rt_pos_flag to rt_txt_pos_flag for consistency with the
	  struct group

2019-08-20 20:41  brlcad

	* [r73699] src/libged/typein.c, src/librt/primitives/annot/annot.c:
	  use first quadrant coding for consistency, not third...

2019-08-20 20:18  brlcad

	* [r73698] include/rt/geom.h, src/libged/typein.c,
	  src/librt/primitives/annot/annot.c:
	  rename pt_rel_pos to just rel_pos for clarity. swap typin
	  ordering so it's x-then-y, horizontal-then-vertical.

2019-08-20 20:10  brlcad

	* [r73697] include/rt/geom.h, include/rt/primitives/annot.h,
	  src/librt/primitives/annot/annot.c:
	  add some input parameter checking to rt_pos_flag() if it's going
	  to be a function called in typein.c; rename RT_ANNOT_POS defines
	  to RT_TXT_POS since they're not specific to annotations (they're
	  specific to txt_seg objects, which also need to be renamed but
	  can be done later along with the other _seg API.).

2019-08-20 18:18  brlcad

	* [r73696] include/rt/primitives/annot.h:
	  another unused

2019-08-20 18:14  brlcad

	* [r73695] src/librt/primitives/annot/annot.c:
	  ws indent clean up

2019-08-20 18:05  brlcad

	* [r73694] include/rt/primitives/annot.h,
	  src/librt/primitives/annot/annot.c:
	  reduce the scope of the locally used functions, rename
	  appropriately, remove unused vars.

2019-08-20 18:04  brlcad

	* [r73693] src/libanalyze/nirt.cpp:
	  quiet debug statements

2019-08-20 18:03  brlcad

	* [r73692] include/vmath.h:
	  remove unused c++ printing macros. keeping vmath C as there are
	  better ways to do this in c++.

2019-08-20 16:40  starseeker

	* [r73691] src/libbrep/cdt.cpp, src/libbrep/cdt_mesh.h:
	  See what cdt does with the super-sparse inputs.

2019-08-20 15:56  starseeker

	* [r73690] src/libbrep/cdt.cpp:
	  Note why we're doing normal calculations here.

2019-08-20 15:49  starseeker

	* [r73689] src/libbrep/cdt.cpp, src/libbrep/cdt_mesh.cpp,
	  src/libbrep/cdt_mesh.h:
	  Let fmesh know as well as the polygon

2019-08-20 15:17  starseeker

	* [r73688] src/libbrep/cdt.cpp, src/libbrep/cdt_mesh.cpp,
	  src/libbrep/cdt_mesh.h:
	  For visualzing polygons in 3D, stash local copies with the
	  polygon rather than trying to play games with the indices in the
	  cdt_mesh.

2019-08-20 12:52  starseeker

	* [r73687] src/libbrep/CMakeLists.txt, src/libbrep/cdt.cpp,
	  src/libbrep/cdt.h, src/libbrep/cdt_edge.cpp,
	  src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h,
	  src/libbrep/cdt_surf.cpp:
	  checkpoint

2019-08-20 11:20  starseeker

	* [r73686] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h:
	  Probably won't go the direction I was thinking with this change -
	  revert.

2019-08-20 05:26  brlcad

	* [r73685] include/rt/defines.h:
	  no utility in librt overriding the vmath printing macros.
	  eliminate.

2019-08-20 05:10  brlcad

	* [r73684] src/librt/primitives/annot/annot.c:
	  spelling

2019-08-20 05:09  brlcad

	* [r73683] src/librt/primitives/annot/annot.c:
	  seems to be a point size disconnect. had 4d pt, calling 3d
	  macros, setting 2d values... converted all to 2d.

2019-08-20 04:52  brlcad

	* [r73682] src/librt/primitives/annot/annot.c:
	  abs() works on integers, looks like fabs() was intended

2019-08-20 04:32  brlcad

	* [r73681] CMakeLists.txt, include/bu/defines.h:
	  first steps towards deeper automatic optimization. define a
	  handful additional function attributes for const, pure, cold,
	  nonnull, and warn_unused_result.

2019-08-20 04:18  starseeker

	* [r73680] src/libbrep/cdt_edge.cpp, src/libbrep/cdt_surf.cpp:
	  Remove some debugging messages

2019-08-20 04:15  starseeker

	* [r73679] src/libbrep/cdt_edge.cpp, src/libbrep/cdt_surf.cpp:
	  Use the bounding min/max

2019-08-20 01:37  starseeker

	* [r73678] src/libbrep/cdt_util.cpp:
	  Fix 3D rtree plotting

2019-08-20 01:24  starseeker

	* [r73677] doc/legal/embedded/CMakeLists.txt,
	  doc/legal/embedded/RTree.txt, src/libbrep/RTree.h,
	  src/libbrep/cdt.h, src/libbrep/cdt_edge.cpp,
	  src/libbrep/cdt_surf.cpp, src/libbrep/cdt_util.cpp:
	  Use https://github.com/DevHwan/RTree rather than the openNURBS
	  version - for whatever reason, that one is slightly easier for me
	  to understand. Stash the edge segments directly. It's not
	  building the tree for all faces for some reason, but on those
	  faces where it is the results are looking like what I would
	  expect.

2019-08-19 20:47  starseeker

	* [r73676] src/libbrep/cdt.cpp, src/libbrep/cdt_mesh.cpp,
	  src/libbrep/cdt_mesh.h, src/libbrep/cdt_surf.cpp:
	  Make the polygon points vector a pointer - intent is to allow an
	  external cdt_mesh array to be used.

2019-08-19 20:06  d_rossberg

	* [r73675] src/librt/primitives/annot/annot.c:
	  patch #530 (https://sourceforge.net/p/brlcad/patches/530/) from
	  ali haydar: the position adjustment of the annotations
	  the default position of the annotation in the previous primitive
	  was bottom left and the other eight choices of position flags
	  weren't implemented this patch solves the problem

2019-08-19 19:27  starseeker

	* [r73674] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h:
	  Get as far as using cdt_mesh to assemble unrefined polygon loops
	  from the Brep.

2019-08-19 19:04  starseeker

	* [r73673] src/libged/overlay.c:
	  Have the overlay command accept a pattern to match a list of
	  files (fallback if there's no literal filename match for argv[1])
	  to make it easy to view a large number of individual .plot3 files
	  at once.

2019-08-19 15:06  starseeker

	* [r73672] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_closed_surf.cpp:
	  Need to get some insight into what the closed_surf logic is
	  doing.

2019-08-19 12:51  starseeker

	* [r73671] src/libbrep/cdt_surf.cpp:
	  Make the use of the max_edge info more explicit.

2019-08-19 02:19  starseeker

	* [r73670] src/libbrep/cdt_surf.cpp:
	  SMALL_FASTF is too small - was letting singularities mess with
	  the values. Also, getting a side effect on the mesh by always
	  capping at max_edge - if I keep this it needs to move out of
	  involves_trims, since it's unexpected just due to calling that,
	  but it does have the result of avoiding large triangles in the
	  mesh... Also, BN_TOL_DIST may be too big for very small models -
	  might need to base that value on the overall brep bbox size.

2019-08-19 02:01  starseeker

	* [r73669] src/libbrep/cdt.h, src/libbrep/cdt_surf.cpp,
	  src/libbrep/cdt_util.cpp:
	  Can still use the tree data instead of the messy loop iteration,
	  but we need to iterate ourselves to check it like we were doing
	  with the loops earlier.

2019-08-19 00:34  starseeker

	* [r73668] src/libbrep/cdt_surf.cpp:
	  Bump the box out slightly, but it seems that the result set is
	  always coming back empty... sigh...

2019-08-19 00:27  starseeker

	* [r73667] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_edge.cpp, src/libbrep/cdt_surf.cpp,
	  src/libbrep/cdt_util.cpp:
	  Getting an empty rtree results set even when the boolean result
	  is true (NIST5 face 44)...

2019-08-18 14:31  starseeker

	* [r73666] src/libbrep/cdt.cpp, src/libbrep/cdt_mesh.cpp,
	  src/libbrep/cdt_mesh.h:
	  Experimenting with cpolygon...

2019-08-18 13:38  starseeker

	* [r73665] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h:
	  Not sure yet, but it's possible the cdt_mesh setup might allow
	  for simplified management of the initial stages of face mesh
	  creation. Do a little refactoring of the containers to see if the
	  stage can be set for this.

2019-08-18 01:19  starseeker

	* [r73664] src/libbrep/cdt.cpp:
	  cleanup

2019-08-18 00:59  starseeker

	* [r73663] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h:
	  Better debug info when we get invalid reports during valid()

2019-08-18 00:46  starseeker

	* [r73662] src/libbrep/cdt_mesh.cpp:
	  nothing is contained if the polygon isn't closed

2019-08-17 19:46  starseeker

	* [r73661] src/libbrep/cdt_mesh.cpp:
	  Preserve face id while we're at it.

2019-08-17 19:39  starseeker

	* [r73660] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h,
	  src/libbrep/tests/CMakeLists.txt,
	  src/libbrep/tests/brep_cdt_mesh.cpp:
	  Working on a serialization/deserialization of the key cdt_mesh
	  information so we can snapshot a face mesh that fails and debug
	  it in isolation instead of trying to get to reproduce and break
	  correctly in a larger run - latter is difficult even when the
	  problem is repeatable, and at least some of the time the
	  randomization makes repetition difficult.

2019-08-17 17:42  starseeker

	* [r73659] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h:
	  Work towards having all mappings be in terms of indices, not
	  actual pointers.

2019-08-17 17:08  starseeker

	* [r73658] src/libbrep/cdt_surf.cpp:
	  Need more though on how to cull 'too close' 3D points.

2019-08-17 14:26  starseeker

	* [r73657] src/libbrep/cdt_surf.cpp:
	  simplify

2019-08-17 14:04  starseeker

	* [r73656] src/libbrep/cdt.h, src/libbrep/cdt_surf.cpp:
	  Search the 3d tree, not the 2d tree

2019-08-17 13:55  starseeker

	* [r73655] src/libbrep/cdt_surf.cpp:
	  checkpoint

2019-08-16 23:25  starseeker

	* [r73654] src/libbrep/cdt_mesh.cpp:
	  Track not just a target face to encompass, but also specific
	  vertices from that face to head towards.

2019-08-16 22:50  starseeker

	* [r73653] src/libbrep/cdt_mesh.cpp:
	  In the very sparse situations, we're getting some tough cases
	  involving degenerate triangles.

2019-08-16 22:28  starseeker

	* [r73652] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h:
	  checkpoint

2019-08-16 20:15  starseeker

	* [r73651] src/libbrep/cdt_mesh.cpp:
	  Observed a case where a vertical edge triangle would have skipped
	  all the selection criteria - not sure this will handle it, but
	  give it a shot.

2019-08-16 19:40  starseeker

	* [r73650] src/libbrep/cdt_mesh.cpp:
	  Pay attention to the cdt() return code, and report failure if and
	  when.

2019-08-16 19:20  starseeker

	* [r73649] src/libbrep/cdt_mesh.cpp:
	  If we're close to being on the line, just return a very tiny
	  angle - we want to consider this triangle.

2019-08-16 19:08  starseeker

	* [r73648] src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h:
	  The polygon is fully internal as far as cdt_mesh is concerned,
	  relocate it to implementation.

2019-08-16 19:03  starseeker

	* [r73647] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_mesh.cpp, src/libbrep/cdt_mesh.h,
	  src/libbrep/cdt_patch.cpp, src/libbrep/cdt_util.cpp:
	  Update code to accomidate rename

2019-08-16 19:00  starseeker

	* [r73646] src/libbrep/CMakeLists.txt, src/libbrep/cdt_mesh.cpp,
	  src/libbrep/cdt_mesh.h, src/libbrep/cmesh.cpp,
	  src/libbrep/cmesh.h:
	  rename for consistency with other cdt files

2019-08-16 18:59  starseeker

	* [r73645] src/libbrep/CMakeLists.txt, src/libbrep/cmesh.cpp,
	  src/libbrep/cmesh.h, src/libbrep/csweep.cpp:
	  Consolidate this down to two files

2019-08-16 18:52  starseeker

	* [r73644] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_edge.cpp, src/libbrep/cmesh.cpp,
	  src/libbrep/cmesh.h:
	  Strictly speaking, not every triangle edge using two edge
	  vertices is a brep edge.

2019-08-16 18:02  starseeker

	* [r73643] src/libbrep/cdt.cpp, src/libbrep/cdt_validate.cpp,
	  src/libbrep/cmesh.cpp, src/libbrep/cmesh.h:
	  Turn off some of the debug plotting.

2019-08-16 11:13  starseeker

	* [r73642] src/libbrep/cdt_surf.cpp:
	  Note to check out use of the 3D RTree as well.

2019-08-16 11:12  starseeker

	* [r73641] src/libbrep/cdt_surf.cpp:
	  Add another note on an experiment I need to try for filtering
	  surface point selection near edges.

2019-08-16 11:07  starseeker

	* [r73640] src/libbrep/csweep.cpp:
	  There's another (unlikely but certainly not impossible) case here
	  we need to handle.

2019-08-15 20:36  starseeker

	* [r73639] src/libbrep/cdt.cpp, src/libbrep/cmesh.h,
	  src/libbrep/csweep.cpp:
	  Name the files with the face id.

2019-08-15 12:44  starseeker

	* [r73638] src/libbrep/cdt.cpp, src/libbrep/cdt_edge.cpp,
	  src/libbrep/cdt_util.cpp:
	  Start shifting to pulling triangles from the cmesh container
	  (which holds the 'repaired' output)

2019-08-14 22:25  starseeker

	* [r73637] src/libbrep/cmesh.cpp, src/libbrep/cmesh.h,
	  src/libbrep/csweep.cpp:
	  Move remaining csweep pieces into cpolygon for simplicity - extra
	  layer in the end didn't add any clarity and was extra complexity.

2019-08-14 22:06  starseeker

	* [r73636] src/libbrep/cdt.cpp, src/libbrep/cmesh.cpp,
	  src/libbrep/cmesh.h:
	  Differentiate between utter failure to produce a mesh and
	  producing a mesh that still doesn't satisfy all criteria.

2019-08-14 21:47  starseeker

	* [r73635] src/libbrep/cdt.cpp, src/libbrep/cmesh.cpp,
	  src/libbrep/cmesh.h:
	  Need to start thinking about how to get the cmesh data integrated
	  back into the main tessellation loop.

2019-08-14 21:35  bob1961

	* [r73634] include/tclcad.h, src/libtclcad/tclcad_obj.c:
	  Added the following functions (note - other functions were also
	  added as part of refactoring) to gain access to functionality
	  that was previously exposed only via Tcl: go_poly_cont_build(),
	  go_poly_cont_build_end().

2019-08-14 21:32  starseeker

	* [r73633] src/libbrep/csweep.cpp:
	  Just to be sure...

2019-08-14 21:27  starseeker

	* [r73632] src/libbrep/csweep.cpp:
	  Use one of the convenience functions instead of repeating the
	  work.

2019-08-14 21:14  starseeker

	* [r73631] src/libbrep/cdt.cpp, src/libbrep/cmesh.cpp,
	  src/libbrep/cmesh.h, src/libbrep/csweep.cpp:
	  Refactor the boundary edge calculations, change vert on bad edges
	  checks.

2019-08-14 19:55  starseeker

	* [r73630] src/libbrep/cmesh.cpp, src/libbrep/cmesh.h,
	  src/libbrep/csweep.cpp:
	  Consolidate mostly duplicate logic

2019-08-14 16:12  starseeker

	* [r73629] src/libbrep/cmesh.cpp, src/libbrep/csweep.cpp:
	  Place infinite loop guards in while loops.

2019-08-14 13:32  starseeker

	* [r73628] src/libbrep/csweep.cpp:
	  If we hit an infinite loop case, we want to see what we're
	  dealing with (and if in the debugger, step through why we're
	  infinite looping.

2019-08-14 13:25  starseeker

	* [r73627] src/libbrep/csweep.cpp:
	  Need to add a fair bit of infinite loop detecting with this
	  approach - start with the core growth loop.

2019-08-14 02:44  starseeker

	* [r73626] src/libbrep/csweep.cpp:
	  Erase, not insert...

2019-08-13 21:59  starseeker

	* [r73625] src/libbrep/cmesh.h, src/libbrep/csweep.cpp:
	  Refactor some of the priority assignment logic for clarity. Stack
	  smash was at line 890 per valgrind, so probably getting 3 points
	  assigned to the array somehow when I was only expecting 2...

2019-08-13 19:48  n_reed

	* [r73624] src/external/Creo/part.cpp:
	  Fix float to char color conversion error that was making all
	  parts convert with black color. Also, stop setting plastic
	  shaders on parts. Users don't generally want this. Should be an
	  option, just bypassing for now.

2019-08-13 19:47  starseeker

	* [r73623] src/libbrep/cmesh.h, src/libbrep/csweep.cpp:
	  Checkpoint an attempt to recognize the self-intersecting edge
	  segments in the polygon when that happens and prioritize adding
	  associated triangles for those edges, in an effort to 'walk
	  clear' of the self-intersecting region via growth. Not working
	  yet - seeing an occasional stack smash, so something's definitely
	  wrong somewhere, but haven't found it yet.

2019-08-13 18:36  starseeker

	* [r73622] src/libbrep/csweep.cpp:
	  Only stash positive vangles

2019-08-13 18:34  starseeker

	* [r73621] src/libbrep/cmesh.cpp, src/libbrep/cmesh.h,
	  src/libbrep/csweep.cpp:
	  Plot the polygon embedded in the 3-space plane as well.

2019-08-12 22:42  starseeker

	* [r73620] src/libbrep/cmesh.cpp, src/libbrep/cmesh.h,
	  src/libbrep/csweep.cpp:
	  fix projection (was getting XY coordinates of XYZ point in 3D
	  plane of triangle, not UV parametric points) and make a variety
	  of tweaks to the triangle grabbing logic to (hopefully) make it
	  smarter.

2019-08-12 19:58  starseeker

	* [r73619] src/libbrep/csweep.cpp:
	  Populate results vector, clean up

2019-08-12 15:41  starseeker

	* [r73618] src/libbrep/cmesh.h, src/libbrep/csweep.cpp:
	  checkpoint

2019-08-12 02:17  starseeker

	* [r73617] src/libbrep/csweep.cpp:
	  Need more intelligent re-enablement of triangles (face 294
	  triggers this)

2019-08-12 02:13  starseeker

	* [r73616] src/libbrep/csweep.cpp:
	  Well, this case is real - see if we can deal with it this way...

2019-08-12 01:48  starseeker

	* [r73615] src/libbrep/csweep.cpp:
	  Re-enable directly involved triangles if we need to keep going.

2019-08-12 00:27  starseeker

	* [r73614] src/libbrep/csweep.cpp:
	  fall off a little less steeply

2019-08-11 23:57  starseeker

	* [r73613] src/libbrep/csweep.cpp:
	  We want to be aggressive near the singularity, but less so
	  further away.

2019-08-11 23:15  starseeker

	* [r73612] src/libbrep/cmesh.cpp:
	  We're cleaning up triangles when we use this function, so use the
	  tnorm rather than the bnorm.

2019-08-11 21:52  starseeker

	* [r73611] src/libbrep/cdt_edge.cpp:
	  Don't use the singularity normal on the trim - can be quite wacky
	  compared to the rest of the trim. This appears to have been the
	  source of the difference between edges 541 and 542 on NIST2 face
	  147.

2019-08-11 20:40  starseeker

	* [r73610] src/libbrep/cdt_edge.cpp:
	  Try plotting the rtree contents... not sure the 2D is right yet,
	  but the 3D version is interesting. Can clearly see the asymmetry
	  in the line segment lengths on the two sides of the singularity
	  in face 147.

2019-08-11 13:05  starseeker

	* [r73609] src/libbrep/cdt_edge.cpp:
	  Not sure we need this, but stub it in. Face 147 in NIST2 is still
	  getting a lot of really fine triangles, so need to drill into
	  why...

2019-08-11 13:01  starseeker

	* [r73608] src/libbrep/cdt_edge.cpp:
	  Build the 3D tree at the same time we build the 2D tree

2019-08-11 12:56  starseeker

	* [r73607] src/libbrep/cdt.h, src/libbrep/cdt_edge.cpp,
	  src/libbrep/cdt_util.cpp:
	  Thinking we may want the 3D tree as well...

2019-08-11 00:06  starseeker

	* [r73606] src/libbrep/csweep.cpp:
	  Prioritize adding triangles that have something to do with
	  uncontained points, so we don't make triangles we need cause
	  subsequent self-intersections by prematurely adding unhelpful
	  triangles into the loop.

2019-08-10 22:36  starseeker

	* [r73605] src/libbrep/cmesh.cpp:
	  Use the correct index variable

2019-08-10 20:08  starseeker

	* [r73604] src/libbrep/cmesh.cpp, src/libbrep/cmesh.h,
	  src/libbrep/csweep.cpp:
	  Try to tune the degree for triangle inclusion to reflect the
	  triangle behavior at the singularity - not sure how well this
	  will work...

2019-08-10 20:05  starseeker

	* [r73603] src/libbg/polygon_triangulate.cpp:
	  poly2tri doesn't seem to like it when we free the points
	  ourselves...

2019-08-10 19:31  starseeker

	* [r73602] src/libbrep/cmesh.cpp, src/libbrep/cmesh.h,
	  src/libbrep/csweep.cpp:
	  Be more aggressive about avoiding triangles that would cause
	  self-intersecting polygons - was getting an infinite loop
	  continually trying to walk back into that situation...

2019-08-10 18:14  starseeker

	* [r73601] src/libbrep/cdt.cpp, src/libbrep/cmesh.cpp,
	  src/libbrep/cmesh.h, src/libbrep/csweep.cpp:
	  Various cleanup - I think the problem I saw (only once, so far)
	  was a self-intersection in the mesh itself. Not sure yet how to
	  handle it.

2019-08-10 16:46  starseeker

	* [r73600] src/libbrep/csweep.cpp:
	  If we hit an edge with multiple triangles, there's no guarantee
	  we'll add the 'bad' one first. If we don't, we get no shared
	  edges with the polygon. Handle that case.

2019-08-10 15:55  starseeker

	* [r73599] src/libbrep/cmesh.h, src/libbrep/csweep.cpp:
	  Make a stab at a function to test if the polygon has become
	  self-intersecting.

2019-08-10 10:39  starseeker

	* [r73598] src/libbrep/csweep.cpp:
	  Need to check for, and be prepared to handle, overlapping
	  triangles in the visited set that aren't angle based rejections.

2019-08-09 22:48  starseeker

	* [r73597] src/libbrep/cdt.cpp, src/libbrep/cmesh.cpp,
	  src/libbrep/cmesh.h:
	  Tweak plotting...

2019-08-09 17:20  starseeker

	* [r73596] src/libbrep/cmesh.cpp:
	  Arrgh. Somehow getting overlapping triangles introduced...

2019-08-09 17:01  starseeker

	* [r73595] src/libbrep/cmesh.cpp, src/libbrep/cmesh.h,
	  src/libbrep/csweep.cpp:
	  Logic flows still aren't quite right for the rebuilding.

2019-08-09 15:53  starseeker

	* [r73594] src/libbrep/cmesh.cpp, src/libbrep/csweep.cpp:
	  Termination criteria are different for angle loop growth.

2019-08-09 13:39  starseeker

	* [r73593] src/libbrep/cmesh.cpp, src/libbrep/cmesh.h:
	  Start working through the mechanics of triangle addition and
	  removal. At least initially the thought is to update all the
	  boundary edge information after every single triagnle operation,
	  so we can debug what each triangle add/remove does to the mesh at
	  need. Watching the plots after each operation, we should see the
	  non-brep boundary edge sets grow and shrink.

2019-08-08 22:18  starseeker

	* [r73592] src/libbrep/cmesh.cpp, src/libbrep/csweep.cpp:
	  Need to work on tri_add and tri_remove now - getting triangles
	  back from patch, so need to properly update bookkeeping maps so
	  we can still talk to the mesh intelligently (tri_remove in
	  particular has never been tested...)

2019-08-08 21:57  starseeker

	* [r73591] src/libbrep/cmesh.cpp, src/libbrep/cmesh.h,
	  src/libbrep/csweep.cpp:
	  Working on hooking up the patch triangulation.

2019-08-08 20:00  starseeker

	* [r73590] src/libbrep/csweep.cpp:
	  Make a stab at keeping the initial repair polygons tighter around
	  the problem areas.

2019-08-08 11:48  starseeker

	* [r73589] misc/repoconv/account-map, misc/repoconv/cvs_authormap:
	  Set the email addresses to a default pattern - any changes we
	  want before final conversion can just be added here.

2019-08-07 19:23  d_rossberg

	* [r73588] src/libbn/tests/CMakeLists.txt, src/libbn/tests/vlist.c:
	  patch #529 (https://sourceforge.net/p/brlcad/patches/529/) from
	  ali haydar: test program for bn_vlist_cmd_cnt() function in
	  vlist.c
	  a program for testing bn_vlist_cmd_cnt() function

2019-08-07 18:08  brlcad

	* [r73587] regress/repository.sh:
	  the various Find scripts are not necessarily ours, so not ours to
	  fix.

2019-08-07 06:47  brlcad

	* [r73586] src/libged/bot_remesh.cpp:
	  woot, fixed bot indexing. also added progress printing. still
	  hunting a bug on the newly stashed bot.

2019-08-06 23:17  brlcad

	* [r73585] src/libged/bot_remesh.cpp:
	  fix vertex indexing in the data adapter

2019-08-06 22:59  starseeker

	* [r73584] src/libged/bot_remesh.cpp:
	  Pull in vmath up front so the redefine of V2PRINT in rt/defines.h
	  will work correctly.

2019-08-06 22:20  brlcad

	* [r73583] src/libged/bot_remesh.cpp:
	  provide an implementation that compiles when openvdb is not
	  available or is disabled.

2019-08-06 20:53  starseeker

	* [r73582] src/libbrep/csweep.cpp:
	  Use plotting to observe the triangulation results.

2019-08-06 20:45  starseeker

	* [r73581] src/libbrep/cmesh.h, src/libbrep/csweep.cpp:
	  Don't know if it's producing correct output yet, but in principle
	  wire in the tessellation of the 2D polygon and its interior
	  points.

2019-08-06 20:15  bob1961

	* [r73580] include/tclcad.h, src/libtclcad/tclcad_obj.c:
	  Added the following functions (note - other functions were also
	  added as part of refactoring) to gain access to functionality
	  that was previously exposed only via Tcl: go_data_axes(),
	  go_data_lines(), go_data_move(), go_data_move_object_mode(),
	  go_data_move_point_mode(), go_data_polygons(),
	  go_mouse_poly_circ(), go_mouse_poly_cont(), go_mouse_poly_ell(),
	  go_mouse_poly_rect(), go_poly_circ_mode(), go_poly_ell_mode(),
	  go_poly_rect_mode(), go_run_tclscript().

2019-08-06 16:08  starseeker

	* [r73579] src/libbrep/csweep.cpp:
	  Add a note that we may want to be more selective about triangle
	  inclusion when building a problem-fixing subset (as opposed to a
	  'make nicer triangles' subset.)

2019-08-06 16:04  starseeker

	* [r73578] src/libbrep/csweep.cpp:
	  simplify

2019-08-06 16:01  starseeker

	* [r73577] src/libbrep/cmesh.h, src/libbrep/csweep.cpp:
	  Make an initial stab at wiring in the point-in-polygon test

2019-08-06 15:08  starseeker

	* [r73576] include/bg/polygon.h:
	  fix url

2019-08-06 13:59  starseeker

	* [r73575] src/libbrep/cmesh.h, src/libbrep/csweep.cpp:
	  switch to point2d_t to set up for using libbg routines

2019-08-06 13:38  starseeker

	* [r73574] src/libbrep/cmesh.cpp, src/libbrep/cmesh.h,
	  src/libbrep/csweep.cpp:
	  Getting as far as being able to grow the polygon (at least per
	  some debug plotting.)

2019-08-06 07:19  brlcad

	* [r73573] src/libged/bot_remesh.cpp:
	  progress towards basic no-frills remeshing, not yet ready.

2019-08-06 05:50  brlcad

	* [r73572] src/libged/CMakeLists.txt, src/libged/bot.c,
	  src/libged/bot_remesh.cpp:
	  stub in a preliminary bot 'remesh' subcommand that uses openvdb
	  for its implementation.

2019-08-06 05:48  brlcad

	* [r73571] src/libged/bot_smooth.c:
	  describe tol type

2019-08-06 05:47  brlcad

	* [r73570] src/libged/3ptarb.c:
	  uses object macros directly

2019-08-06 05:19  brlcad

	* [r73569] include/ged/commands.h:
	  declare a new remeshing subcommand

2019-08-06 05:19  brlcad

	* [r73568] include/ged/objects.h:
	  command declarations were moved to commands.h, remove these dupes

2019-08-06 02:04  starseeker

	* [r73567] CMakeLists.txt:
	  Leave this off by default right now - configure dies hard when it
	  can't find these dependencies, need to fix that so it continues
	  but leaves off the OpenVDB based features.

2019-08-06 00:51  brlcad

	* [r73566] CMakeLists.txt, misc/CMake/CMakeLists.txt,
	  misc/CMake/FindBlosc.cmake, misc/CMake/FindIlmBase.cmake,
	  misc/CMake/FindOpenEXR.cmake, misc/CMake/FindOpenVDB.cmake,
	  misc/CMake/FindTBB.cmake, misc/CMake/OpenVDBUtils.cmake,
	  src/conv/CMakeLists.txt, src/conv/g-vdb.cpp:
	  preliminary g-vdb converter that exports BRL-CAD geometry via
	  OpenVDB

2019-08-06 00:43  starseeker

	* [r73565] src/libbrep/cmesh.h, src/libbrep/csweep.cpp:
	  move the polygon plotting routine down to the cpolygon_t class

2019-08-06 00:27  starseeker

	* [r73564] src/libbrep/cmesh.h, src/libbrep/csweep.cpp:
	  More than just a filter at this point...

2019-08-06 00:16  starseeker

	* [r73563] src/libbrep/cmesh.cpp, src/libbrep/cmesh.h,
	  src/libbrep/csweep.cpp:
	  More pondering about how to do the sweep itself...

2019-08-05 22:06  brlcad

	* [r73562] src/nirt/main.cpp:
	  array of array of nulls

2019-08-05 21:44  starseeker

	* [r73561] src/libbrep/cmesh.h, src/libbrep/csweep.cpp:
	  slightly better naming

2019-08-05 21:38  starseeker

	* [r73560] src/libbrep/cmesh.h, src/libbrep/csweep.cpp:
	  The polygon is the data container that's going to know when
	  something is interior.

2019-08-05 21:23  starseeker

	* [r73559] src/libbrep/cmesh.cpp, src/libbrep/cmesh.h,
	  src/libbrep/csweep.cpp:
	  Try a slightly different approach - rather than trying to make
	  sense out of the bad triangle's immediate environ, simply look up
	  a valid face connected to it and use that to build an initial
	  loop. Then see if we can grow the loop and deal with points that
	  need to be 'interior' points as we sweep.

2019-08-05 18:49  starseeker

	* [r73558] src/libbrep/cmesh.cpp, src/libbrep/cmesh.h,
	  src/libbrep/csweep.cpp:
	  checkpoint

2019-08-05 15:57  starseeker

	* [r73557] src/libbrep/cmesh.h, src/libbrep/csweep.cpp:
	  fix build

2019-08-05 14:40  starseeker

	* [r73556] src/libbrep/cmesh.cpp, src/libbrep/cmesh.h,
	  src/libbrep/csweep.cpp:
	  Start thinking through how to build the initial loop. This is the
	  core of the problem that was never solved with the trimesh based
	  logic - how to guarantee a valid p2t outer loop when the mesh
	  topology is known to be incorrect. Previously we just tried to
	  suck in enough triangles that we ended up with inputs that
	  worked, but a sparse triangle set proved we can't ignore it. What
	  we really need to do is work with the local connectivity
	  information we *do* have from the mesh, starting at the problem
	  points, and grow out until we have a viable loop. Once we do have
	  such a loop there are other concerns (whether the interior points
	  are contained, self intersection if we need to grow out further
	  and how to incorporate new bad triangles encountered during
	  growth) but an initial valid loop must be the core from which we
	  start.

2019-08-05 13:20  starseeker

	* [r73555] src/libbrep/cmesh.cpp, src/libbrep/cmesh.h,
	  src/libbrep/csweep.cpp:
	  Singularity tri cleanup is nice, but elimination of problems is
	  vital. Start there.

2019-08-05 00:45  starseeker

	* [r73554] src/libbrep/cmesh.h, src/libbrep/csweep.cpp:
	  We're going to need some way to grow a polygon one edge at a
	  time. Start working on a data container for that...

2019-08-05 00:15  starseeker

	* [r73553] src/libbrep/cmesh.cpp, src/libbrep/cmesh.h:
	  Causing other issues, not worth untangling right now.

2019-08-05 00:03  starseeker

	* [r73552] src/libbrep/cmesh.cpp, src/libbrep/cmesh.h:
	  Rather than pieces, set up for stashing the face pointer

2019-08-04 15:06  starseeker

	* [r73551] src/libbrep/CMakeLists.txt, src/libbrep/cdt.cpp,
	  src/libbrep/cmesh.cpp, src/libbrep/cmesh.h,
	  src/libbrep/csweep.cpp:
	  The 2D projection polygon loop building process is a different
	  beast than the cmesh itself - rather than try to shoe-horn the
	  cmesh into doing it, stub in a separate entity to handle the data
	  and operations needed.

2019-08-03 22:13  starseeker

	* [r73550] src/libbrep/cmesh.h:
	  not a private function right now

2019-08-03 21:02  starseeker

	* [r73549] src/libbrep/cdt.cpp, src/libbrep/cmesh.cpp,
	  src/libbrep/cmesh.h:
	  checkpoint

2019-08-03 20:05  starseeker

	* [r73548] src/libbrep/cdt.cpp, src/libbrep/cmesh.cpp,
	  src/libbrep/cmesh.h:
	  Fix loop logic, more work setting up for remeshing.

2019-08-03 15:43  starseeker

	* [r73547] src/libbrep/cmesh.cpp:
	  We've got some edges with > 2 triangles, which makes sense out of
	  the edge problems.

2019-08-03 15:32  starseeker

	* [r73546] src/libbrep/cdt.cpp, src/libbrep/cmesh.cpp,
	  src/libbrep/cmesh.h:
	  Use the brep data to cheat and spot mesh boundary edges that
	  shouldn't be boundary edges.

2019-08-03 13:27  starseeker

	* [r73545] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_edge.cpp, src/libbrep/cdt_util.cpp,
	  src/libbrep/cmesh.cpp, src/libbrep/cmesh.h,
	  src/libbrep/trimesh.cpp:
	  Get a look at the boundaries of the mesh. Exposes a problem in
	  the data coming from the original 2D->3D cdt tessellation mapping
	  - we have 'interior' unmated edges in that data. Need to think
	  about how to handle it.

2019-08-03 02:00  starseeker

	* [r73544] src/libbrep/cdt.cpp, src/libbrep/cmesh.h:
	  Need better comparison operators for the triangles.

2019-08-02 22:38  starseeker

	* [r73543] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_patch.cpp, src/libbrep/cmesh.cpp,
	  src/libbrep/cmesh.h:
	  Working towards the hard part - submesh building - but not there
	  yet. This sets the stage for starting the real work.

2019-08-02 21:48  starseeker

	* [r73542] src/libbrep/cmesh.cpp:
	  visualize both triangle and brep normal

2019-08-02 21:42  starseeker

	* [r73541] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_edge.cpp, src/libbrep/cdt_util.cpp,
	  src/libbrep/cmesh.cpp, src/libbrep/cmesh.h:
	  checkpoint

2019-08-02 21:03  starseeker

	* [r73540] src/libbrep/cmesh.cpp, src/libbrep/cmesh.h:
	  Add ability to return the triangle normal

2019-08-02 20:34  starseeker

	* [r73539] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cmesh.cpp, src/libbrep/cmesh.h:
	  Start testing out the cmesh routines.

2019-08-02 19:55  starseeker

	* [r73538] src/libbu/color.cpp:
	  Go ahead and use the random device from the standard

2019-08-02 19:41  starseeker

	* [r73537] src/libbrep/CMakeLists.txt, src/libbrep/cdt.h,
	  src/libbrep/cmesh.cpp, src/libbrep/cmesh.h:
	  checkpoint

2019-08-02 01:53  starseeker

	* [r73536] src/conv/CMakeLists.txt:
	  g-vdb.cpp not in tree

2019-08-02 01:45  starseeker

	* [r73535] src/libbrep/cdt_patch.cpp:
	  Make a note about a possible way to refactor this.

2019-08-02 00:29  starseeker

	* [r73534] src/libbrep/cdt_patch.cpp:
	  report what the butterfly vertices actually are, so we can
	  inspect what's going on.

2019-08-02 00:15  starseeker

	* [r73533] src/libbrep/cdt_patch.cpp, src/libbrep/cdt_util.cpp,
	  src/libbrep/trimesh.cpp:
	  Draw the interiors, so we can tell when a vacant space looks like
	  a triangle because all its neighbor edges are drawn.

2019-08-01 22:52  brlcad

	* [r73532] include/bg/polygon.h, include/bg/trimesh.h,
	  src/conv/CMakeLists.txt:
	  fix couple param doc mismatches and missing entries

2019-08-01 22:51  starseeker

	* [r73531] src/libbrep/cdt_patch.cpp:
	  Plot projected points, not original NURBS parameter space points,
	  for submesh

2019-08-01 22:18  brlcad

	* [r73530] include/bu/opt.h:
	  remove spurious blank line

2019-08-01 20:12  starseeker

	* [r73529] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_util.cpp, src/libbrep/cdt_validate.cpp:
	  One thing quickly clear from the 2D plots - we can't yank the
	  degen triangles out of the 2D mesh early on without causing
	  problems.

2019-08-01 19:53  starseeker

	* [r73528] src/libbrep/cdt_util.cpp:
	  Close the triangle plot

2019-08-01 19:49  starseeker

	* [r73527] src/libbrep/cdt_patch.cpp:
	  Update plot file debug name templates

2019-08-01 18:11  bob1961

	* [r73526] src/tclscripts/mged/edit_solid.tcl:
	  Call "form " instead of "db form " in the esol_build_form proc.
	  The db command is broken --- it blathers a useless help message
	  unnecessarily.

2019-08-01 17:29  starseeker

	* [r73525] include/brep/cdt.h, src/libbrep/cdt.cpp,
	  src/libbrep/cdt.h, src/libbrep/cdt_util.cpp,
	  src/libbrep/opennurbs_ext.cpp, src/libged/brep.c,
	  src/libged/ged_private.h, src/libged/shape_recognition.cpp,
	  src/librt/primitives/brep/brep.cpp,
	  src/librt/primitives/brep/brep_debug.cpp:
	  Start setting up for more robust debug plot file naming
	  convention, since it looks like it will be needed.

2019-08-01 15:18  starseeker

	* [r73524] src/libbrep/cdt.h, src/libbrep/cdt_patch.cpp,
	  src/libbrep/cdt_util.cpp, src/libbrep/cdt_validate.cpp:
	  use the new color routine

2019-08-01 14:26  starseeker

	* [r73523] include/bn/plot3.h, src/libbn/plot3.c:
	  Rather than stepping down manually every time, just add a plot3
	  function to handle a bu_color struct

2019-08-01 14:24  starseeker

	* [r73522] src/libbu/color.cpp:
	  c++ file now, adjust header/footer

2019-08-01 14:09  starseeker

	* [r73521] include/bu/color.h, src/libbu/color.cpp:
	  That's it - one too many times getting irritated by poor random
	  color choices. Create a version of the step-g golden ratio color
	  generator Keith did in step-g as an option to a bu_color_rand
	  function. Take advantage of C++11 to keep the random color bit in
	  libbu instead of lifting it to libbn - much cleaner to keep it
	  with the other color logic, and as long as the colors vary to
	  some degree it's not critical to control the details of how the
	  random subsystem works.

2019-08-01 13:20  starseeker

	* [r73520] src/libbu/CMakeLists.txt, src/libbu/color.c,
	  src/libbu/color.cpp:
	  c->c++

2019-08-01 13:14  starseeker

	* [r73519] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_patch.cpp, src/libbrep/cdt_util.cpp:
	  Need much closer graphical look at what's going on at various
	  stages. Start reworking to be more systematic about generating
	  organized plot files.

2019-08-01 12:39  starseeker

	* [r73518] src/libbrep/cdt.h, src/libbrep/cdt_patch.cpp,
	  src/libbrep/cdt_util.cpp:
	  plot 2d trimesh - definitely something odd going on.

2019-08-01 12:24  starseeker

	* [r73517] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_patch.cpp, src/libbrep/cdt_util.cpp,
	  src/libbrep/cdt_validate.cpp, src/libbrep/trimesh.h:
	  Back up to r73509 - need to rethink this

2019-08-01 07:16  brlcad

	* [r73516] src/conv/g-voxel.c:
	  clean up explanations

2019-08-01 02:47  starseeker

	* [r73515] src/libbrep/cdt_patch.cpp:
	  Normals by themselves won't be enough

2019-08-01 02:39  starseeker

	* [r73514] src/libbrep/cdt_patch.cpp:
	  Some thoughts on how to approach this if we can't reuse remeshed
	  triangles in subsequent remeshings, which is possible since 2D
	  relationships in the original parametric space may no longer hold
	  once we introduce triangulations from a different projection.

2019-07-31 23:58  starseeker

	* [r73513] src/libbrep/cdt_patch.cpp:
	  Put back the local point assembly.

2019-07-31 23:53  starseeker

	* [r73512] src/libbrep/cdt_patch.cpp:
	  Still using this map (looks like I've still got a broken mapping
	  in there somewhere, but this was definitely one of them.

2019-07-31 21:52  starseeker

	* [r73511] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_patch.cpp, src/libbrep/cdt_util.cpp,
	  src/libbrep/cdt_validate.cpp, src/libbrep/trimesh.h:
	  trimesh in 2D isn't matching the 3D topology. Working on building
	  trimesh using 3D points, but that's creating some challenges.
	  checkpoint (non-working)

2019-07-31 17:57  brlcad

	* [r73510] doc/checklist.txt:
	  per feedback, simplify the vagueness of being legally compatible
	  to a more discrete question of whether it's a change that's
	  legally compatible.

2019-07-31 14:43  starseeker

	* [r73509] src/libbrep/cdt_patch.cpp:
	  Somehow, getting what seems to be an actual dupliate triangle in
	  the trimesh...

2019-07-30 22:05  starseeker

	* [r73508] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_closed_surf.cpp, src/libbrep/cdt_edge.cpp,
	  src/libbrep/cdt_surf.cpp, src/libbrep/cdt_util.cpp,
	  src/libbrep/cdt_validate.cpp:
	  More tolerance work - still not at the bottom of this rabbit
	  hole...

2019-07-30 22:04  starseeker

	* [r73507] src/libbrep/trimesh.h:
	  Seeing some odd errors with butterfly vertices, not readily
	  reproducible... bail once we repeate a halfedge index, since we
	  were seeing some infinite looping behavior, but probably a
	  symptom of a deeper problem...

2019-07-30 19:44  starseeker

	* [r73506] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_edge.cpp:
	  In solid triangulation, we pre-process all edges before working
	  on a face. Hence, we don't need to carry s_to_maxdist around for
	  calling in Process_Loop_Edges - they're already all handled by
	  the time we get there.

2019-07-30 18:48  starseeker

	* [r73505] src/libbrep/cdt_edge.cpp:
	  First cut at refinement of edge curves based on adjacent edge
	  segmenting information.

2019-07-30 18:42  starseeker

	* [r73504] src/libbrep/cdt_edge.cpp:
	  Initial logic for refinement splitting of edge segments.

2019-07-30 17:51  starseeker

	* [r73503] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_edge.cpp:
	  Detect situations where individual loops with multiple curved
	  edges have widely different segment lengths.

2019-07-30 13:50  starseeker

	* [r73502] src/libbrep/cdt.h, src/libbrep/cdt_edge.cpp,
	  src/libbrep/cdt_util.cpp:
	  Make normal parameter top level - it's global, and it's looking
	  like most of the others are going to be heavily influenced by
	  local factors...

2019-07-30 13:45  starseeker

	* [r73501] include/brep/cdt.h, src/libbrep/cdt.h,
	  src/libbrep/cdt_closed_surf.cpp, src/libbrep/cdt_edge.cpp,
	  src/libbrep/cdt_surf.cpp, src/libbrep/cdt_util.cpp,
	  src/libged/shape_recognition.cpp,
	  src/librt/primitives/brep/brep.cpp,
	  src/librt/primitives/brep/brep_debug.cpp:
	  Switch tolerance passing to bg_tess_tol. dist input is lost, but
	  should eventually be replaced by the new brep parameters.

2019-07-30 13:43  starseeker

	* [r73500] src/libbrep/cdt_closed_surf.cpp:
	  Start refactoring for easier reading: break out boolean tests,
	  pull common definitions up to remove duplication, use more
	  compact form of assignment, reduce code duplication.

2019-07-30 13:39  starseeker

	* [r73499] src/libged/tol.c:
	  Rework tol command to be able to set new brep specific
	  tolerances.

2019-07-30 13:38  starseeker

	* [r73498] include/bg/defines.h, src/libgcv/gcv.c:
	  Add more parameters and initial thoughts on their meaning to the
	  bg/defines.h header

2019-07-30 12:44  starseeker

	* [r73497] CHANGES, include/bg/defines.h, include/bu/magic.h,
	  include/gcv/api.h, include/gcv/util.h, include/rt/defines.h,
	  include/rt/func.h, include/rt/functab.h, include/rt/nmg.h,
	  include/rt/primitives/bot.h, include/rt/primitives/brep.h,
	  include/rt/primitives/pg.h, include/rt/primitives/sketch.h,
	  include/rt/rt_instance.h, include/rt/tol.h, include/rt/tree.h,
	  include/rt/wdb.h, src/adrt/load_g.c, src/conv/dxf/g-dxf.c,
	  src/conv/g-acad.c, src/conv/g-egg.c, src/conv/g-nff.c,
	  src/conv/g-obj.c, src/conv/g-vrml.c, src/conv/g-x3d.c,
	  src/conv/g-xxx_facets.c, src/conv/iges/g-iges.c,
	  src/conv/iges/iges.c, src/conv/iges/iges_struct.h,
	  src/conv/jack/g-jack.c, src/conv/off/g-off.c,
	  src/conv/ply/g-ply.c, src/conv/raw/g-raw.c, src/conv/stl/g-stl.c,
	  src/external/Cubit/g-sat.cpp, src/libbu/magic.c,
	  src/libdm/osg-test.cpp, src/libgcv/bottess.c,
	  src/libgcv/facetize.c, src/libgcv/gcv.c,
	  src/libgcv/plugins/obj/obj_write.c,
	  src/libgcv/plugins/vrml/vrml_write.c, src/libgcv/region_end.c,
	  src/libgcv/region_end_mc.c, src/libgcv/soup.h, src/libged/bev.c,
	  src/libged/brep.c, src/libged/display_list.c, src/libged/draw.c,
	  src/libged/facetize.c, src/libged/ged_private.h,
	  src/libged/inside.c, src/libged/push.c,
	  src/libged/shape_recognition.cpp, src/librt/librt_private.h,
	  src/librt/prep.c, src/librt/primitives/annot/annot.c,
	  src/librt/primitives/arb8/arb8.c,
	  src/librt/primitives/arb8/arb8_brep.cpp,
	  src/librt/primitives/arbn/arbn.c,
	  src/librt/primitives/arbn/arbn_brep.cpp,
	  src/librt/primitives/ars/ars.c,
	  src/librt/primitives/ars/ars_brep.cpp,
	  src/librt/primitives/bot/bot.c,
	  src/librt/primitives/bot/bot_brep.cpp,
	  src/librt/primitives/brep/brep.cpp,
	  src/librt/primitives/brep/brep_cdt.cpp,
	  src/librt/primitives/brep/brep_debug.cpp,
	  src/librt/primitives/brep/brep_local.h,
	  src/librt/primitives/bspline/bspline.cpp,
	  src/librt/primitives/cline/cline.c,
	  src/librt/primitives/datum/datum.c,
	  src/librt/primitives/dsp/dsp.c, src/librt/primitives/ebm/ebm.c,
	  src/librt/primitives/ebm/ebm_brep.cpp,
	  src/librt/primitives/ehy/ehy.c, src/librt/primitives/ell/ell.c,
	  src/librt/primitives/epa/epa.c, src/librt/primitives/eto/eto.c,
	  src/librt/primitives/extrude/extrude.c,
	  src/librt/primitives/grip/grip.c,
	  src/librt/primitives/half/half.c, src/librt/primitives/hf/hf.c,
	  src/librt/primitives/hrt/hrt.c, src/librt/primitives/hyp/hyp.c,
	  src/librt/primitives/joint/joint.c,
	  src/librt/primitives/metaball/metaball.c,
	  src/librt/primitives/metaball/metaball_tri.c,
	  src/librt/primitives/nmg/nmg.c,
	  src/librt/primitives/nmg/nmg_tri_mc.c,
	  src/librt/primitives/obj_plot.c, src/librt/primitives/obj_tess.c,
	  src/librt/primitives/part/part.c,
	  src/librt/primitives/pipe/pipe.c,
	  src/librt/primitives/pnts/pnts.c,
	  src/librt/primitives/poly/poly.c,
	  src/librt/primitives/poly/poly_brep.cpp,
	  src/librt/primitives/primitive_util.c,
	  src/librt/primitives/revolve/revolve.c,
	  src/librt/primitives/rhc/rhc.c, src/librt/primitives/rpc/rpc.c,
	  src/librt/primitives/script/script.c,
	  src/librt/primitives/sketch/sketch.c,
	  src/librt/primitives/submodel/submodel.c,
	  src/librt/primitives/superell/superell.c,
	  src/librt/primitives/table.cpp, src/librt/primitives/tgc/tgc.c,
	  src/librt/primitives/tor/tor.c, src/librt/primitives/vol/vol.c,
	  src/librt/primitives/vol/vol_brep.cpp,
	  src/librt/primitives/xxx/xxx.c, src/librt/wdb.c,
	  src/mged/dodraw.c, src/mged/mged.c, src/mged/mged.h,
	  src/mged/wdb_obj.c, src/proc-db/csgbrep.cpp:
	  Move rt_tess_tol from librt to libbg

2019-07-29 19:11  brlcad

	* [r73496] src/libged/debuglib.c:
	  turning on librt debugging shouldn't turn on libbu debugging
	  (separate command for that)

2019-07-27 17:24  brlcad

	* [r73495] src/other/linenoise/linenoise.c:
	  disable raw mode. nirt was hanging infinitely waiting for input.
	  maybe limited to when it was run from lldb, but didn't dive
	  deeply into the upstream code's complicated raw termio settings.

2019-07-27 17:03  brlcad

	* [r73494] src/nirt/main.cpp:
	  fix bug where the -x option was being ignored / resulting in an
	  unknown arg.

2019-07-23 05:24  brlcad

	* [r73493] include/rt/CMakeLists.txt:
	  add uv.h to list of installed headers

2019-07-23 05:22  brlcad

	* [r73492] include/rt/uv.h:
	  add a preliminary uv interface header with texture lookup calls
	  ported from liboptical.

2019-07-20 06:33  brlcad

	* [r73491] NEWS, doc/docbook/articles/mged.xml,
	  src/tclscripts/mged/bindings.tcl:
	  another part of josh's request (scr 2793), make escape also
	  return mouse to default behavior.

2019-07-20 06:04  brlcad

	* [r73490] NEWS, doc/docbook/articles/mged.xml,
	  doc/html/manuals/mged/default_key_bindings.html,
	  src/tclscripts/mged/bindings.tcl:
	  first steps on feature request from josh baker (scr 2793) to
	  change the default mged key bindings. this eliminates a
	  long-standing source of new user confusion when they accidentally
	  press x/y/z and send their model spinning uncontrollably (not
	  knowing that 0 stops it. escape was mysteriously never set to
	  stop it too.). here I eliminate the default key bindings for
	  xXyYzZ0 and extend Escape to stop rotations just for good
	  measure. the knob command is left intact so behavior is still
	  available.

2019-07-20 03:21  brlcad

	* [r73489] include/rt/db_io.h:
	  remove non-existent function (removed in r70259)

2019-07-20 02:30  brlcad

	* [r73488] src/libtclcad/tclcad_obj.c:
	  remove dead code

2019-07-18 16:52  starseeker

	* [r73487] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_edge.cpp:
	  Checkpoint work refactoring initial edge curve processing -
	  trying to get to curves then lines in processing order. (Not
	  working yet.)

2019-07-18 13:31  starseeker

	* [r73486] src/libbrep/cdt_patch.cpp, src/libbrep/cdt_util.cpp,
	  src/libbrep/trimesh.h:
	  Fix the face neighbors routine, don't use singularity normals as
	  a guide for inclusion

2019-07-18 01:11  starseeker

	* [r73485] src/libbrep/cdt.h, src/libbrep/cdt_patch.cpp,
	  src/libbrep/cdt_util.cpp:
	  Need to use the Brep normals here to guide us - one of the
	  reasons we're in this logic in the first place is that the
	  triangle directions aren't correct according to the Brep normals.
	  Check face NIST2 face 308 (tol norm 10) - getting single triangle
	  sets to process, which seems weird... maybe shouldn't be using
	  singularity point normals for this?

2019-07-17 23:20  starseeker

	* [r73484] src/libbrep/cdt_edge.cpp:
	  Long linear edge segments on straight edge curves coupled with
	  fine meshing on curved surfaces is producing very distorted
	  triangles at edges. Need a better way of determing how to break
	  down linear edges. (NIST2 face 40, tol norm 10 is an example)

2019-07-17 23:15  starseeker

	* [r73483] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_patch.cpp:
	  Working on failures in NIST2 with tol norm set to 10. Smaller
	  triangles are stressing the logic in different ways.

2019-07-17 16:28  starseeker

	* [r73482] src/libbrep/cdt_patch.cpp, src/libbrep/trimesh.cpp,
	  src/libbrep/trimesh.h:
	  Checkpoint

2019-07-16 21:47  starseeker

	* [r73481] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_patch.cpp, src/libbrep/cdt_util.cpp,
	  src/libbrep/cdt_validate.cpp:
	  Checkpoint a rework of the patch processing logic

2019-07-15 20:07  starseeker

	* [r73480] src/libbrep/cdt_util.cpp:
	  NIST2 face 308 with tol norm 10 is getting an unmapped 2D
	  poly2tri point, causing a crash. Not sure yet why it isn't
	  mapped...

2019-07-15 19:34  starseeker

	* [r73479] src/librt/primitives/brep/brep_debug.cpp:
	  Pass the tessellation tolerances into the state for the debug
	  plotting as well.

2019-07-15 17:34  starseeker

	* [r73478] src/libbrep/cdt_surf.cpp:
	  May want to split in u or v direction even if the other direction
	  is small - don't bail on this condition unless we're too small in
	  BOTH directions.

2019-07-15 13:19  starseeker

	* [r73477] include/brep/cdt.h, src/libbrep/cdt.cpp,
	  src/libbrep/opennurbs_ext.cpp, src/libged/shape_recognition.cpp,
	  src/librt/primitives/brep/brep.cpp:
	  Allow for extracting meshes for specific face sets, in addition
	  to the whole shape.

2019-07-15 13:15  starseeker

	* [r73476] src/libbu/realpath_bsd.c:
	  strcmp -> bu_strcmp

2019-07-14 15:04  starseeker

	* [r73475] CMakeLists.txt, doc/legal/embedded/realpath.txt,
	  src/libbu/CMakeLists.txt, src/libbu/realpath.c,
	  src/libbu/realpath_bsd.c, src/libbu/tests/CMakeLists.txt,
	  src/libbu/tests/realpath.c:
	  canonicalize_file_name doesn't actually seem to be an improvement
	  on realpath. Embed OpenBSD's userland implementation of realpath
	  and use it. Right now it's replacing all system realpath
	  implementations when realpath is detected (so basically
	  everywhere except Windows) because I haven't been able to come up
	  with a reliable configure-time test that will detect the stack
	  smash issue libbu realpath unit test #2 trips over.

2019-07-14 13:33  starseeker

	* [r73474] misc/repoconv/svn_map_commit_revs.cxx:
	  For time based diffing files, want duplicate timestamp messages.
	  Adjust output.

2019-07-13 21:38  starseeker

	* [r73473] include/brep/cdt.h, src/libbrep/cdt.cpp,
	  src/libbrep/cdt_validate.cpp, src/libbrep/opennurbs_ext.cpp,
	  src/libged/brep.c, src/libged/ged_private.h,
	  src/libged/shape_recognition.cpp:
	  This is an incredibly ugly unoptimized hack, but it does let me
	  see which face triangle meshes are along a line of site in the
	  scene. The right way to do this would be to properly raytrace the
	  nurbs faces and report using that, but at a glance our API isn't
	  currently set up to easily allow reporting individual opennurbs
	  ON_Brep face data in a brep. This uses the
	  not-ready-for-prime-time mesh generation (which is what I want it
	  to debug in the first place) and plows through things triangle by
	  triangle, doing a full CDT for each face from scratch. Needs to
	  be yanked out as soon as the CDT work is wrapped unless it is
	  substantially cleaned up and redesigned. The one and only point
	  in its favor is that it worked. It let me identify face 264 in
	  NIST2 as the face I wanted to look at, and did so more easily
	  (sans coding time) than manually bisecting with the brep face
	  plotting routines.

2019-07-13 19:25  starseeker

	* [r73472] src/libbrep/cdt_surf.cpp:
	  Switch to a breadth-first surface breakdown strategy, in
	  anticipation of wanting to know when we're stopping the surface
	  breakdown at higher levels. This should make it slightly easier
	  to debug in those cases.

2019-07-13 18:45  starseeker

	* [r73471] src/libbrep/cdt.h, src/libbrep/cdt_surf.cpp:
	  put tolerance parameters inside sinfo for better code readibility

2019-07-13 18:38  starseeker

	* [r73470] src/libbrep/cdt_surf.cpp:
	  remove parameters no longer being used in the new surface
	  breakdown approach. Note the termination criteria still need to
	  be adjusted from the original change - it's too coarse right now.

2019-07-13 18:21  starseeker

	* [r73469] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_validate.cpp:
	  Move the edge triangle checking into a function.

2019-07-13 17:55  starseeker

	* [r73468] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_util.cpp, src/libbrep/cdt_validate.cpp:
	  Don't notify other faces of degen_pnts until we're done iterating
	  on the triangulation for the current face.

2019-07-12 17:15  starseeker

	* [r73467] misc/repoconv/NOTES:
	  more notes

2019-07-12 15:39  starseeker

	* [r73466] misc/repoconv/NOTES:
	  Only lightly tested, but working on a way to get a list of ALL
	  commit messages in the git repo.

2019-07-12 14:10  starseeker

	* [r73465] misc/repoconv/archive_branches.sh:
	  I think we probably want this (untested)

2019-07-12 14:08  starseeker

	* [r73464] misc/repoconv/NOTES:
	  Ah - looks like the branch archiving script was doing the wrong
	  thing in a fair number of cases because of ambiguous
	  specifications. Will need to fix that.

2019-07-12 13:53  starseeker

	* [r73463] misc/repoconv/NOTES:
	  Hmm. Apparently listing *all* git commits isn't as simple as I
	  thought it was. The archived tags representing 'deleted' branches
	  are a particular problem. This was a hair raiser as it looked
	  like the git conversion was dropping large swaths of commits - a
	  couple spot checks done via checking out archived tags and
	  looking at their git logs find 'missing' commits, but we still
	  don't know for sure everything is there and until we find a
	  better way to get a full log of all git commits (including in tag
	  histories) it's going to complicate a systematic audit.

2019-07-12 03:26  starseeker

	* [r73462] misc/repoconv/NOTES:
	  git notes and -C option (just to name two) are going to need
	  newer git versions to work correctly. We'll have to put some sort
	  of sanity checks in place.

2019-07-12 03:21  starseeker

	* [r73461] misc/repoconv/NOTES:
	  Tweak svnrev checkout alias

2019-07-12 02:59  starseeker

	* [r73460] misc/CMake/distcheck_repo_verify.cmake.in:
	  Start working on what is needed to replace svn with git in the
	  distcheck logic.

2019-07-11 02:43  starseeker

	* [r73459] misc/repoconv/svnfexport.cxx:
	  Harcoding the top svn rev number doesn't work out so well - read
	  it instead.

2019-07-10 21:22  starseeker

	* [r73458] src/libbrep/cdt.h, src/libbrep/cdt_util.cpp,
	  src/libbrep/cdt_validate.cpp:
	  Make 3D edge checking local to cdt_validate.cpp

2019-07-10 20:19  starseeker

	* [r73457] src/libbrep/cdt.cpp:
	  As we're refining this, see if we can get away without edge
	  refinement. That has a lot of negative implications, and it would
	  be simpler (if it is workable) to refine outside of edge areas. I
	  suspect it won't be possible in all cases - for example, if two
	  edges interfere in an overlap situation...

2019-07-10 20:08  starseeker

	* [r73456] src/libbrep/cdt.cpp:
	  Smooth out singularity areas, then look at edge triangles.

2019-07-10 19:58  starseeker

	* [r73455] src/libbrep/trimesh.cpp, src/libbrep/trimesh.h:
	  Per the plotting, these appear to test successfully.

2019-07-10 19:53  starseeker

	* [r73454] src/libbrep/cdt.cpp:
	  trimesh boundary edges are truely directed boundary edges - i.e.
	  they don't correspond to a triangle. flip for triangle lookup -
	  the plot now confirms we are grabbing the triangles at the edge
	  of the face.

2019-07-10 19:32  starseeker

	* [r73453] src/libbrep/cdt.cpp:
	  Ah, edge->tri lookup isn't working right.

2019-07-10 19:21  starseeker

	* [r73452] src/libbrep/cdt.cpp:
	  Hmm. Looking so far like the sampling issue might be dominating
	  more than edge segment length problems...

2019-07-10 19:04  starseeker

	* [r73451] src/libbrep/cdt_surf.cpp:
	  Make a note to see what's going on with NIST2 face 501 point
	  sampling.

2019-07-10 18:46  starseeker

	* [r73450] src/libbrep/cdt.cpp, src/libbrep/trimesh.cpp,
	  src/libbrep/trimesh.h:
	  First steps towards pulling the edge triangles from the face and
	  checking for excessively long edge curve segments.

2019-07-10 17:02  brlcad

	* [r73449] doc/docbook/system/man1/nirt.xml:
	  rephrase -f slightly to refer to a format instead of files, now
	  that the pre-defined formats are the primary use case.

2019-07-10 16:56  brlcad

	* [r73448] src/nirt/main.cpp:
	  aborting if the file doesn't exist was wrong (and boo hiss for
	  unintentionally including logic change in cleanup commit). as
	  this function handles both predefined styles and paths to files,
	  treat this as a format option instead and update the usage
	  accordingly.

2019-07-10 04:41  brlcad

	* [r73447] src/conv/gcv/gcv.c:
	  need to keep the argument counts in sync if we cull entries from
	  av. this fixes the base case running 'gcv input ouput' sans
	  options.

2019-07-10 01:55  starseeker

	* [r73446] misc/repoconv/svnfexport.cxx:
	  Going beyond 7099 now

2019-07-10 01:51  starseeker

	* [r73445] misc/repoconv/CONVERT.sh:
	  Fix cleanup line

2019-07-09 20:07  starseeker

	* [r73444] src/libbrep/cdt_edge.cpp:
	  Remove unused function

2019-07-09 19:55  starseeker

	* [r73443] src/libbrep/cdt.h, src/libbrep/cdt_edge.cpp:
	  Put the other parameters into the segments, so we can have the
	  segment splitting function take just the segment itself as an
	  argument.

2019-07-09 16:31  starseeker

	* [r73442] src/libbrep/cdt.h, src/libbrep/cdt_edge.cpp,
	  src/libbrep/cdt_util.cpp:
	  Stash root nodes for edges in the state, so we will be able to
	  refine later.

2019-07-09 16:20  starseeker

	* [r73441] src/libbrep/cdt_edge.cpp:
	  Use the edge segment container instead of individual parameters.

2019-07-09 13:46  starseeker

	* [r73440] misc/CMakeLists.txt:
	  update repoconv list

2019-07-09 13:35  starseeker

	* [r73439] src/libbrep/cdt_edge.cpp:
	  Start roughing in a container to use for edge segments - first
	  preliminary moves towards being able to incrementally
	  update/refine edge approximations.

2019-07-09 13:01  starseeker

	* [r73438] src/nirt/main.cpp:
	  Use BU_OPT_DESC_NULL to initialize a bu_opt_desc - gcc doesn't
	  like {0}

2019-07-09 07:34  brlcad

	* [r73437] src/conv/gcv/gcv.c:
	  derp, don't put before free

2019-07-09 07:17  brlcad

	* [r73436] src/conv/gcv/gcv.c:
	  there's no need to copy the const input. just wasted cycles and
	  code complexity.

2019-07-09 07:12  brlcad

	* [r73435] src/conv/gcv/gcv.c:
	  document extract_path as it (along with several other funcs) is
	  cryptic

2019-07-09 07:09  brlcad

	* [r73434] src/adrt/load_g.c, src/bwish/input.c,
	  src/conv/iges/g-iges.c, src/conv/raw/g-raw.c,
	  src/fbserv/fbserv.c, src/libbn/noise.c, src/libbu/backtrace.c,
	  src/libbu/convert.c, src/libbu/malloc.c, src/libbu/vls.c,
	  src/libged/killtree.c,
	  src/librt/primitives/bot/gct_decimation/auxiliary/mm.c,
	  src/librt/primitives/bot/gct_decimation/meshdecimation.c,
	  src/mged/mged.c, src/sig/dconv.c, src/sig/ddisp.c,
	  src/sig/dfft.c, src/sig/dmod.c, src/sig/dsel.c,
	  src/util/bwcrop.c, src/util/bwscale.c, src/util/pixcrop.c,
	  src/util/pixscale.c, src/util/sun-pix.c:
	  propagage BU_PAGE_SIZE to nearly all the places where there was a
	  4096 numeric constant.

2019-07-09 07:04  brlcad

	* [r73433] src/conv/gcv/gcv.c:
	  alas need to separate setting them to null because of types
	  (quellage)

2019-07-09 06:35  brlcad

	* [r73432] src/libbu/convert.c, src/libgcv/bottess.c:
	  use BU_PAGE_SIZE

2019-07-09 06:32  brlcad

	* [r73431] include/bu/malloc.h:
	  define BU_PAGE_SIZE to be used in leu of the constants sprinkled
	  throughout the code where a buffer of memory is needed. kept to a
	  simple define for the cases where the exact size doesn't matter,
	  just that it's a multiple of the VM page size.

2019-07-09 06:28  brlcad

	* [r73430] src/libbu/opt.c:
	  comment cleanup, another static

2019-07-09 05:15  brlcad

	* [r73429] src/conv/gcv/gcv.c:
	  wrapping my head around the logic, set more consistent names to
	  help with readability. refactor a usage function.

2019-07-09 05:12  brlcad

	* [r73428] doc/checklist.txt:
	  fixed libray typo and went ahead and capitalized

2019-07-09 03:16  starseeker

	* [r73427] misc/repoconv/svn_msgs.cxx:
	  fix includes

2019-07-09 03:12  starseeker

	* [r73426] misc/repoconv/CONVERT.sh,
	  misc/repoconv/gitignore.tar.gz,
	  misc/repoconv/manual_merge_info.tar.gz,
	  misc/repoconv/svn_map_commit_revs.cxx, misc/repoconv/svnfexport,
	  misc/repoconv/terra.dsp:
	  Pull in the remainder of the differences. SVN has a few
	  'inactive' pieces such as the audit code which were used
	  manually, but otherwise repoconv should now reflect the working
	  state.

2019-07-09 02:58  starseeker

	* [r73425] misc/repoconv/account-map,
	  misc/repoconv/common_structs.h, misc/repoconv/custom,
	  misc/repoconv/cvs2git/README.sh, misc/repoconv/cvs2git/authormap,
	  misc/repoconv/cvs2git/repaired, misc/repoconv/cvs_authormap,
	  misc/repoconv/cvs_repaired, misc/repoconv/dercs,
	  misc/repoconv/svn_date.cxx, misc/repoconv/svn_date.h,
	  misc/repoconv/svn_git_cmp, misc/repoconv/svnfexport.cxx,
	  misc/repoconv/svnfexport/account-map,
	  misc/repoconv/svnfexport/common_structs.h,
	  misc/repoconv/svnfexport/custom,
	  misc/repoconv/svnfexport/sha1.hpp,
	  misc/repoconv/svnfexport/svn_date.cxx,
	  misc/repoconv/svnfexport/svn_date.h,
	  misc/repoconv/svnfexport/svnfexport.cxx,
	  misc/repoconv/svnfexport/svnfexport_git.cxx,
	  misc/repoconv/svnfexport/svnfexport_svn.cxx,
	  misc/repoconv/svnfexport_git.cxx,
	  misc/repoconv/svnfexport_svn.cxx:
	  More movement of conversion files

2019-07-09 02:54  starseeker

	* [r73424] misc/repoconv/checkout_dercs.sh,
	  misc/repoconv/dercs/md5.hpp, misc/repoconv/dercs/sha1.hpp,
	  misc/repoconv/dercs/svn_de-rcs.cxx, misc/repoconv/md5.hpp,
	  misc/repoconv/sha1.hpp, misc/repoconv/svn-replay,
	  misc/repoconv/svn_de-rcs.cxx,
	  misc/repoconv/svn_git_cmp/svn_git_cmp.cxx,
	  misc/repoconv/svn_git_cmp/svn_msgs.cxx,
	  misc/repoconv/svn_map_commit_revs.cxx,
	  misc/repoconv/svn_msgs.cxx,
	  misc/repoconv/svnfexport/checkout_dercs.sh,
	  misc/repoconv/svnfexport/sync_commit.sh,
	  misc/repoconv/svnfexport/sync_commit_trunk.sh,
	  misc/repoconv/sync_commit.sh, misc/repoconv/sync_commit_trunk.sh:
	  Start reorganizing repoconv to reflect what will be the final
	  state of the logic.

2019-07-09 02:53  starseeker

	* [r73423] misc/repoconv/cvs2git/authormap,
	  misc/repoconv/svnfexport/account-map,
	  misc/repoconv/svnfexport/custom/r29886_branches.fi,
	  misc/repoconv/svnfexport/custom/r29886_cjohnson_mac_hack.fi,
	  misc/repoconv/svnfexport/custom/r29886_cvs_svn_rel-5-1-branch_sync.fi,
	  misc/repoconv/svnfexport/custom/r29886_cvs_svn_trunk_sync.fi,
	  misc/repoconv/svnfexport/custom/r29886_tags.fi:
	  Murky waters with git notes, filter-branch, etc. - just correct
	  the author maps. Rerun time is a small percentage of total effort
	  at this point.

2019-07-09 01:59  brlcad

	* [r73422] src/nirt/main.cpp:
	  if an option isn't recognized, don't just ignore. report and
	  halt. would be nice if bu_opt_parse() had some means to handle
	  unrecognized opts (e.g., register event callbacks)

2019-07-09 01:55  brlcad

	* [r73421] src/nirt/main.cpp:
	  ws and formatting cleanup

2019-07-09 01:54  starseeker

	* [r73420] misc/repoconv/NOTES:
	  It's come up twice now - this time, make a note of how to bulk
	  map sha1s between repos

2019-07-08 22:17  brlcad

	* [r73419] include/bu/opt.h:
	  clean up comments, understanding API. remove one bit of
	  unactionable detail.

2019-07-08 22:16  starseeker

	* [r73418] src/libbrep/cdt_edge.cpp:
	  Stash some thoughts on what the demands of edge refinement will
	  be.

2019-07-08 21:13  brlcad

	* [r73417] src/nirt/main.cpp:
	  add -? for help too

2019-07-08 21:04  starseeker

	* [r73416] src/libbrep/cdt_patch.cpp:
	  Make sure the face is in the direction the Brep normals indicate
	  it should be

2019-07-08 20:54  starseeker

	* [r73415] src/libbrep/CMakeLists.txt, src/libbrep/cdt.cpp,
	  src/libbrep/cdt.h, src/libbrep/cdt_patch.cpp:
	  Start refactoring to make the sub-triangulation logic into a
	  reusable routine. Looks like normals logic (or triangle
	  directions, or both) aren't quite right yet.

2019-07-08 19:33  starseeker

	* [r73414] src/libbrep/cdt.cpp, src/libbrep/cdt.h:
	  First successful insertion of rebuilt singularity area triangles
	  into mesh.

2019-07-08 18:59  brlcad

	* [r73413] src/libbu/opt.c:
	  brace

2019-07-08 17:39  brlcad

	* [r73412] src/rtwizard/main.c:
	  list all unknown options before exiting

2019-07-08 17:32  starseeker

	* [r73411] src/libbrep/cdt.h, src/libbrep/cdt_util.cpp:
	  Remove a couple more not-currently-in-use containers

2019-07-08 17:27  starseeker

	* [r73410] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_util.cpp, src/libbrep/cdt_validate.cpp:
	  Eliminate the separate 'extra faces' container

2019-07-08 17:19  starseeker

	* [r73409] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_util.cpp, src/libbrep/cdt_validate.cpp:
	  Erase degenerate triangles from the set rather than tracking them
	  in a separate container

2019-07-08 17:06  starseeker

	* [r73408] src/libbrep/cdt.h, src/libbrep/cdt_util.cpp,
	  src/libbrep/cdt_validate.cpp:
	  remove a couple of currently unused containers

2019-07-08 17:01  starseeker

	* [r73407] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_edge.cpp, src/libbrep/cdt_util.cpp,
	  src/libbrep/cdt_validate.cpp:
	  Going to have to be even more gradual about shifting data
	  structures. Replace GetTriangles vector with a set container,
	  trying not to change any other logic in the process.

2019-07-08 11:37  starseeker

	* [r73406] misc/repoconv/CONVERT.sh:
	  Add a note about what might have to be done to get sha1 mappings
	  from filter-branch

2019-07-08 11:23  starseeker

	* [r73405] misc/repoconv/CONVERT.sh:
	  Still can't get the notes to translate. As a last resort might be
	  able to manually recreate all of them using the original repo to
	  save messages and timestamps, but it seems like there should be a
	  way to do this.

2019-07-08 06:08  brlcad

	* [r73404] src/libged/TODO:
	  just some old thoughts on command conventions as they aligned
	  with gnu core

2019-07-08 05:05  starseeker

	* [r73403] misc/repoconv/CONVERT.sh:
	  Closer, but still losing the notes in rewriting. Maybe just
	  fixing tools to handle author entry more robustly would be
	  simpler...

2019-07-08 05:04  brlcad

	* [r73402] doc/CMakeLists.txt, doc/checklist.txt,
	  doc/code_review.txt, doc/trunk_hierarchy.org:
	  be more explicit and develop commonality regarding what criteria
	  are considered during code reviews. drop the previous notes that
	  were riddled with subjective criteria and inconsistent wording.
	  here I introduce testable binary criteria in an affirmative
	  checklist form that can be evaluated against most if not all
	  changes. this is intended to be particularly useful for new
	  contributors. it's also intended to be a living document that
	  will change over time, but that will also help standardize our
	  code review practice too (so feedback from other devs is of
	  course welcome).

2019-07-08 03:34  starseeker

	* [r73401] misc/repoconv/CONVERT.sh:
	  Attempt two to be clever with the old uncertain author name may
	  not work out either, but rather than rerun the conversion yet
	  again (if we need to) figure out how to use git proper to do
	  this...

2019-07-06 14:02  starseeker

	* [r73400] src/libbrep/cdt.cpp:
	  Make some notes on the way forward. Need to make it easier to use
	  libbg routines and swap triangles into/out-of the current mesh.

2019-07-06 13:38  starseeker

	* [r73399] doc/legal/embedded/CMakeLists.txt,
	  doc/legal/embedded/concaveman.txt, include/bg/chull.h,
	  src/libbg/CMakeLists.txt, src/libbg/concave_hull.cpp,
	  src/libbg/concaveman.hpp, src/libbrep/cdt.cpp:
	  Yep, a blind alley. An interesting capability (although it looks
	  like there's at least one bug hidden in the current setup) but
	  not one that will give us what we need for this application - we
	  need to recreate the 3D bounding polyon in the projection with
	  correct loop ordering, and the concave hull is not well defined
	  enough to give us that. Version control has it if we find it
	  potentially useful in the future.

2019-07-06 13:31  starseeker

	* [r73398] include/bg/chull.h, src/libbg/concave_hull.cpp,
	  src/libbrep/cdt.cpp:
	  A look at the paper indicates there are important parameters to
	  this algorithm.

2019-07-05 21:52  starseeker

	* [r73397] include/bg/chull.h, src/libbg/concave_hull.cpp,
	  src/libbrep/cdt.cpp:
	  One of the differences does look like an error, but the other
	  makes me think the concave hull may not be 1-1 reliably with the
	  outer polyline anyway. The whole concave hull bit may prove to be
	  a blind alley.

2019-07-05 21:40  starseeker

	* [r73396] src/libbrep/cdt.cpp:
	  turn back on concave_hull plotting for debugging - looks like
	  something is wrong compared to the 'correct' polyline.

2019-07-05 20:49  starseeker

	* [r73395] src/libbg/concave_hull.cpp, src/libbg/concaveman.hpp:
	  See what the minimal changes would be to keep original point
	  indices

2019-07-05 19:40  starseeker

	* [r73394] include/bg/trimesh.h, src/libbg/trimesh.cpp:
	  Will eventually need the point_t version as well

2019-07-05 19:36  starseeker

	* [r73393] include/bg/trimesh.h, src/libbg/trimesh.cpp:
	  Commit initial logic for mesh gc (untested)

2019-07-05 14:01  starseeker

	* [r73392] include/bg/polygon.h, include/bg/trimesh.h,
	  src/libbg/CMakeLists.txt, src/libbg/trimesh.c,
	  src/libbg/trimesh.cpp:
	  rename trimesh.c -> trimesh.cpp

2019-07-05 13:39  starseeker

	* [r73391] src/libbg/chull2.cpp:
	  Add assignment logic to polyline gc function

2019-07-03 20:19  starseeker

	* [r73390] include/bg/chull.h, src/libbg/chull2.cpp:
	  Stub in funciton to build minimal polyline from integer indices
	  into pnts array - not yet implemented.

2019-07-02 16:44  starseeker

	* [r73389] src/libbg/chull2.cpp:
	  Consolidate shared logic

2019-07-02 14:52  brlcad

	* [r73388] TODO:
	  fts would make traversal simpler.

2019-07-01 02:25  starseeker

	* [r73387] misc/repoconv/NOTES:
	  Update recommended git aliases

2019-07-01 01:01  starseeker

	* [r73386] misc/repoconv/NOTES:
	  (untested) Should be strict about revision matching in the grep

2019-06-30 23:24  starseeker

	* [r73385] misc/repoconv/RESUME.sh:
	  After the primary run, we're going to have to go back and pick up
	  whatever commits happened during the run - add a script for that
	  process.

2019-06-30 20:02  starseeker

	* [r73384] misc/repoconv/CONVERT.sh:
	  Clean up in case of previous attempt, add missing cd

2019-06-30 18:20  starseeker

	* [r73383] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  mispelling in message

2019-06-30 02:18  starseeker

	* [r73382] misc/repoconv/svnfexport/custom/66608-commit.fi:
	  remove the deliberate conversion stopper

2019-06-28 15:28  d_rossberg

	* [r73381] include/bn/vlist.h, src/libbn/vlist.c,
	  src/libged/display_list.c, src/mged/dodraw.c:
	  patch #527 (https://sourceforge.net/p/brlcad/patches/527/) from
	  ali haydar: new bounding box function
	  this new implementation for the bounding box function is made for
	  correct dealing with the annotations

2019-06-26 15:40  johnranderson

	* [r73380] src/libnmg/inter.c:
	  Added some comments explaining the code added in a previous
	  commit.

2019-06-26 14:05  brlcad

	* [r73379] doc/description.txt:
	  add two marketspeak section blurbs on mission and overview

2019-06-26 03:51  brlcad

	* [r73378] NEWS:
	  john fixed sf bug 379 (g-stl export error for simple symmetric
	  offset blocks) that was incorrectly determining that two faces
	  were parallel. the case in question was surfaces that were nudged
	  offset from each other. this affects facetize and all polygonal
	  exporters.

2019-06-25 21:43  johnranderson

	* [r73377] src/libnmg/inter.c:
	  nmg_isect_2faceuse was using a necessary but not sufficient
	  method for determining if faces are parallel. This mod address
	  bug report #379

2019-06-22 19:54  starseeker

	* [r73376] misc/repoconv/NOTES:
	  add a note to investigate gitconfig conditional includes

2019-06-22 19:51  starseeker

	* [r73375] misc/repoconv/NOTES:
	  gitk can be smarter about word wrapping long commit lines - for
	  our repo users will want to enable it.

2019-06-22 11:41  starseeker

	* [r73374] misc/external_build_testing/NOTES:
	  Add relevant link

2019-06-21 22:20  starseeker

	* [r73373] include/bg/chull.h, src/libbg/CMakeLists.txt,
	  src/libbg/chull2.cpp, src/libbg/tests/chull.c:
	  Introduce (in parallel for testing) versions of the 2D convex
	  hull routines that return indices into the original point array
	  rather than a new point array. We want this to allow for simplier
	  recognition of when two points are the 'same' in more complex
	  processing. This integer index return style will eventually
	  replace the current polyline and trimesh functions, but we will
	  also want bg_polyline_gc and bg_trimesh_gc routines before that
	  happens to make it trivial for callers to take the outputs of
	  these functions and construct outputs with just the 'active'
	  points and adjusted indices for final export to .g shapes. That
	  book-keeping shouldn't live in multiple places - it's too easy to
	  get subtly wrong.

2019-06-21 14:31  starseeker

	* [r73372] src/libbrep/cdt.cpp:
	  In principle, hook up the new singularity triangles into the
	  flow. However, NIST2 face 160 (current test case) doesn't clear
	  all errors with this and continues in an odd way.

2019-06-21 10:42  starseeker

	* [r73371] misc/external_build_testing/NOTES:
	  Add a note to look into the capabilities of git apply for
	  external project patching, per suggestion on CMake users list.

2019-06-20 22:43  brlcad

	* [r73370] include/bu/opt.h, src/libbu/opt.c:
	  const propagation

2019-06-20 19:33  starseeker

	* [r73369] src/libbg/tests/polygon_triangulate.c:
	  fix hole ordering

2019-06-20 19:30  starseeker

	* [r73368] include/bg/polygon.h, src/libbg/polygon.c,
	  src/libbg/polygon_triangulate.cpp,
	  src/libbg/tests/polygon_triangulate.c:
	  pass colors so we can have all the plots up simultaneously

2019-06-20 19:27  starseeker

	* [r73367] include/bg/polygon.h, src/libbg/polygon.c,
	  src/libbg/polygon_triangulate.cpp,
	  src/libbg/tests/polygon_triangulate.c:
	  Add plotting options to the tessellation tests, so we can inspect
	  the results. Test 3 clearly isn't right.

2019-06-20 18:30  starseeker

	* [r73366] src/libbg/tests/polygon_triangulate.c:
	  minimally exercise the poly2tri code

2019-06-20 18:23  starseeker

	* [r73365] include/bg/polygon.h, src/libbg/CMakeLists.txt,
	  src/libbg/polygon_triangulate.cpp,
	  src/libbg/tests/polygon_triangulate.c, src/libbrep/cdt.cpp,
	  src/libbrep/cdt_validate.cpp,
	  src/libbrep/shape_recognition_planar.cpp:
	  First step towards encapsulation of poly2tri under libbg

2019-06-20 13:49  starseeker

	* [r73364] include/bg/polygon.h, src/libbg/polygon_triangulate.cpp,
	  src/libbg/tests/polygon_triangulate.c, src/libbrep/cdt.cpp,
	  src/libbrep/cdt_validate.cpp,
	  src/libbrep/shape_recognition_planar.cpp:
	  Set the stage for putting poly2tri under libbg. Getting too many
	  mappings between too many data types - need to encapsulate.
	  Calling the triangulation in more than one place in the CDT code,
	  so it's time to refactor.

2019-06-20 13:33  starseeker

	* [r73363] src/libbrep/cdt.cpp:
	  That would explain it - was plotting the wrong points for the
	  hull

2019-06-20 13:22  starseeker

	* [r73362] src/libbrep/cdt.cpp:
	  get poly2tri to do about as well as ear clipping, but both are
	  not jibing with the concave hull plot.

2019-06-20 13:17  starseeker

	* [r73361] src/libbrep/cdt.cpp:
	  More debugging code trying to figure out why neither
	  triangulation routine likes the outer polyline.

2019-06-19 21:30  starseeker

	* [r73360] doc/legal/embedded/CMakeLists.txt,
	  doc/legal/embedded/concaveman.txt, include/bg/chull.h,
	  src/libbg/CMakeLists.txt, src/libbg/concave_hull.cpp,
	  src/libbg/concaveman.hpp, src/libbrep/cdt.cpp:
	  Ah, right - want the concave hull of the boundary edge vertices,
	  not the complete point set.

2019-06-19 21:06  brlcad

	* [r73359] BUGS:
	  modeler noticed that the original overlap checker script overlaps
	  file can no longer be read by the overlap GUI. there needs to be
	  a way to run the check sans-gui.

2019-06-19 21:04  brlcad

	* [r73358] TODO:
	  note several modeler requests for improvements to the overlaps
	  gui. they'd like the default boolean behavior to change, to
	  include more geometry lintian issues in the report like unhit
	  geometry, and some means to control runtime.

2019-06-19 20:56  starseeker

	* [r73357] doc/legal/embedded/CMakeLists.txt,
	  doc/legal/embedded/concaveman.txt, include/bg/chull.h,
	  src/libbg/CMakeLists.txt, src/libbg/concave_hull.cpp,
	  src/libbg/concaveman.hpp, src/libbrep/cdt.cpp:
	  That's not what we need/want here - the concave hull will dip in
	  from the outer polygon to inner points.

2019-06-19 20:55  brlcad

	* [r73356] TODO:
	  consolidate the todo items related to overlap handling

2019-06-19 20:52  starseeker

	* [r73355] doc/legal/embedded/CMakeLists.txt,
	  doc/legal/embedded/concaveman.txt, include/bg/chull.h,
	  src/libbg/CMakeLists.txt, src/libbg/concave_hull.cpp,
	  src/libbg/concaveman.hpp, src/libbrep/cdt.cpp:
	  Experiment with building the concave hull in the 2D projection.

2019-06-19 18:21  starseeker

	* [r73354] src/libbrep/cdt.cpp:
	  Bookkeeping isn't right, but start stubbing in logic to set up
	  submesh poly2Tri triangulation.

2019-06-19 16:58  starseeker

	* [r73353] src/libbrep/cdt.cpp:
	  Plot the loop, make a note on an alternative approach to the
	  final 2D boundary assembly.

2019-06-19 15:04  starseeker

	* [r73352] src/rt/CMakeLists.txt:
	  MPI_C_LIBRARIES gets set to NOTFOUND - don't add it to the lib
	  set unless it's found.

2019-06-19 14:50  d_rossberg

	* [r73351] src/librt/primitives/vol/vol.c:
	  revived the volume primitive
	  - fixed file load
	  - fixed ray-trace for axisparallel rays (there is still an issue
	  e.g. with "ae 90 -90")
	  - fixed plot (-1 needs a sign)

2019-06-19 14:43  starseeker

	* [r73350] src/libbrep/cdt.cpp, src/libbrep/trimesh.cpp,
	  src/libbrep/trimesh.h:
	  Work on assembling the boundary loop, not just an edge set

2019-06-19 13:58  starseeker

	* [r73349] src/libbrep/cdt.cpp:
	  try to show some indication of direction in the edge plot

2019-06-19 13:29  starseeker

	* [r73348] src/libbrep/cdt.cpp:
	  Move point at which we check for flipped_face

2019-06-19 13:21  starseeker

	* [r73347] src/libbrep/cdt.cpp:
	  Put a catch in to not skip a triangle if it's direction is
	  'wrong' compared to the local NURBS surface normals. (untested)

2019-06-19 05:34  brlcad

	* [r73346] src/rt/main.c:
	  size and rank are mpi-related too

2019-06-19 05:33  brlcad

	* [r73345] CMakeLists.txt:
	  go ahead and check for mpi, need an idea how robust the find
	  logic is cross-platform

2019-06-19 05:32  brlcad

	* [r73344] src/rt/main.c:
	  oops, didn't mean to commit the mpi stubs, but go ahead and leave
	  them in for now (ifdef'd off)

2019-06-19 05:24  brlcad

	* [r73343] src/rt/CMakeLists.txt, src/rt/main.c, src/rt/usage.cpp,
	  src/rt/viewarea.c, src/rt/viewcheck.c, src/rt/viewg3.c,
	  src/rt/viewweight.c, src/rt/viewxray.c:
	  let negative numbers on option() verbostiy indicate disabled
	  options. we only print the -? message when enabled options
	  remain. bump to level 100 by default.

2019-06-19 04:09  brlcad

	* [r73342] src/conv/gcv/gcv.c:
	  disambiguate local app functions from libgcv functions (remove
	  gcv_ prefix). ws consistency cleanup too.

2019-06-19 03:56  brlcad

	* [r73341] src/conv/gcv/gcv.c:
	  eliminate dead code. the main driver shouldn't have any awareness
	  of formats, so these would belong down in the respective plugins
	  regardless.

2019-06-19 03:52  brlcad

	* [r73340] src/conv/gcv/gcv.c:
	  the artificial trimming of the argc being passed to bu_opt_parse
	  isn't right when there aren't any input/output options, resulting
	  in a negative number that becomes a huge positive size_t, and
	  crashes. it's not completely clear what the intent was, but the
	  correct thing to do should be unadulterated passage to
	  bu_opt_parse. start hiding all the local functions too.

2019-06-19 02:23  brlcad

	* [r73339] include/bu/opt.h:
	  ws

2019-06-18 21:01  brlcad

	* [r73338] src/conv/gcv/gcv.c:
	  fix for crash, make sure there's even one arg before getting the
	  length.

2019-06-18 20:49  starseeker

	* [r73337] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_validate.cpp:
	  Move the submesh build to a higher level temporarily to simplify
	  debugging, adjust bookkeeping.

2019-06-18 20:16  starseeker

	* [r73336] src/libbrep/cdt_validate.cpp:
	  looks like the bookkeeping is wrong somewhere.

2019-06-18 19:52  starseeker

	* [r73335] src/other/Eigen/Eigen/src/Core/util/Memory.h:
	  EIGNE -> EIGEN

2019-06-18 19:24  starseeker

	* [r73334] src/libbrep/cdt_validate.cpp:
	  More work on singularity triangle subset building - still not
	  there yet.

2019-06-18 14:30  d_rossberg

	* [r73333] src/librt/primitives/vol/vol.c:
	  made vol_from_file() return the actual number of bytes read as
	  required in rt_vol_import5()

2019-06-18 11:39  d_rossberg

	* [r73332] src/libbrep/trimesh.cpp:
	  included algorithm for MSVS 2013's std::min, std::max

2019-06-18 03:13  brlcad

	* [r73331] src/other/Eigen/Eigen/src/Core/util/Memory.h:
	  alloca is no-go on mac os x. malloc should be a compatible
	  replacement.

2019-06-18 03:10  brlcad

	* [r73330] src/libbn/plane.cpp:
	  register is not valid in our c++ comp mode

2019-06-18 01:50  starseeker

	* [r73329] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  If I'm correctly interpreting
	  https://stackoverflow.com/a/24940131 the 'logb' wrapper for
	  getting branch-only history can only work as far back as the last
	  merge - git itself doesn't preserve the information it would need
	  to (for example) give a full history of just the commits made to
	  the cmake branch. As a possible way around this (at least for the
	  svn history - it obviously won't work going forward with git) use
	  the note mechanism to record not just the revision number but
	  also the commit branch. It's not an absolutely accurate
	  transcription - we're using the git branch name which is
	  occasionally different than the svn name (trunk vs. master, for
	  example) but it should suffice to preserve the information and
	  hopefully allow a script to reassemble the branch history more or
	  less the way subversion would have, at least for the post CVS
	  portion of the history. It may be possible in principle to do
	  something similar with the CVS portion of the history,
	  piggybacking off the commit message mapping, but at least at this
	  point I'm going to pass. The logb trick will show unmerged branch
	  history, and we should be able to re-generate the notes later if
	  we end up needing pre-SVN branch-only histories. At the moment
	  I'm thinking well-behaved, per-file history is likely to be good
	  enough.

2019-06-17 21:57  starseeker

	* [r73328] src/libbrep/cdt.h, src/libbrep/cdt_util.cpp,
	  src/libbrep/cdt_validate.cpp:
	  Refactor trimesh data storage. (Doesn't fix outer edge issue,
	  just setting up for further work.)

2019-06-17 20:47  starseeker

	* [r73327] src/libbrep/cdt_validate.cpp, src/libbrep/trimesh.cpp:
	  right general idea, but it looks like the boundary_edges routine
	  from trimesh isn't doing exactly what we want here. May be
	  related to the butterfly vertex warnings, perhaps we aren't
	  feeding something in correctly.

2019-06-17 19:58  starseeker

	* [r73326] src/libbrep/cdt_validate.cpp:
	  We could re-calculate the best fit plane - a quick experiment
	  suggests it probably won't change enough to be worth it...

2019-06-17 19:49  starseeker

	* [r73325] src/libbrep/cdt_validate.cpp:
	  Grow the set of triangles out from those sharing the singularity
	  vertex.

2019-06-17 17:21  starseeker

	* [r73324] src/libbrep/cdt_validate.cpp:
	  Make sure the plane normal is in the same direction as the avg of
	  the triangle normals

2019-06-17 17:14  starseeker

	* [r73323] src/libbrep/cdt_validate.cpp:
	  kick the tires on the best fit plane routine.

2019-06-17 15:30  starseeker

	* [r73322] src/libbrep/cdt.h, src/libbrep/cdt_util.cpp,
	  src/libbrep/cdt_validate.cpp:
	  Split out bits specific to singularity handling.

2019-06-17 15:22  starseeker

	* [r73321] src/libbrep/cdt.h, src/libbrep/cdt_util.cpp:
	  rework

2019-06-17 15:03  starseeker

	* [r73320] src/libbrep/CMakeLists.txt, src/libbrep/cdt.h,
	  src/libbrep/cdt_singular_surf.cpp, src/libbrep/cdt_util.cpp,
	  src/libbrep/cdt_validate.cpp:
	  The local lookup capability may be useful for more than just
	  singularities - at least part of this needs to fold into util

2019-06-16 03:05  starseeker

	* [r73319] misc/repoconv/CONVERT.sh:
	  svnfexport takes care of this information gathering itself, don't
	  need to do it in the script as well.

2019-06-15 20:42  starseeker

	* [r73318] misc/repoconv/CONVERT.sh:
	  Add some post-conversion steps. Unfortunately, it looks like the
	  use of notes for the svn info is going to require some extra
	  checkout steps, and we'll have to be careful about checking that
	  they get uploaded correctly to the new master repo as well.

2019-06-15 20:17  starseeker

	* [r73317] misc/repoconv/archive_branches.sh:
	  Prepare a script for running after the svnfexport conversion
	  which will archive as tags all the non-active branches per latest
	  svn.

2019-06-15 19:49  starseeker

	* [r73316] misc/repoconv/svn2git/account-map,
	  misc/repoconv/svnfexport/account-map,
	  misc/repoconv/svnfexport/custom/r29886_branches.fi,
	  misc/repoconv/svnfexport/custom/r29886_cjohnson_mac_hack.fi,
	  misc/repoconv/svnfexport/custom/r29886_cvs_svn_rel-5-1-branch_sync.fi,
	  misc/repoconv/svnfexport/custom/r29886_cvs_svn_trunk_sync.fi,
	  misc/repoconv/svnfexport/custom/r29886_tags.fi:
	  Of course, changing the name means the old SHA1 signatures from
	  the cvs-fast-export conversion changed. Update corrective fi
	  files.

2019-06-15 19:47  starseeker

	* [r73315] misc/repoconv/cvs2git/authormap:
	  The long author name doesn't work well in gitk.

2019-06-15 19:40  starseeker

	* [r73314] misc/repoconv/CONVERT.sh:
	  Tweaks to script. With some adjustment of support files, this
	  seems to run straight through to the beginning of the svnfexport
	  process. Once that completes, the working set of input files to
	  support the script will be added and the full process will be (at
	  least theoretically) reproducible.

2019-06-15 17:46  d_rossberg

	* [r73313] src/libbn/vlist.c:
	  patch #526 (https://sourceforge.net/p/brlcad/patches/526/) from
	  ali haydar: Bug using numbers for a label results in no label
	  "short annotation is not drawn"
	  the annotaion the annotaion has a refrance point in model space
	  the other points are in display space and should be ignored when
	  calculating the bounding box .

2019-06-14 19:58  starseeker

	* [r73312] src/libbrep/cdt_singular_surf.cpp,
	  src/libbrep/cdt_validate.cpp:
	  Just for debugging, toss out a plot3 file to make sure we really
	  are identifying the triangles involved with the singularity
	  point.

2019-06-14 17:12  starseeker

	* [r73311] src/other/Eigen.dist:
	  Forgot to add Eigen's dist file.

2019-06-14 17:05  starseeker

	* [r73310] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_singular_surf.cpp, src/libbrep/cdt_util.cpp,
	  src/libbrep/cdt_validate.cpp:
	  Call singular surface function to set up for testing. Also
	  accidentally corrected a problem with the bookkeeping which may
	  have accounted for the original issue that prompted starting the
	  singularity handling. Not going to abandon just yet since this is
	  essentially the same logic that will be needed for any localized
	  mesh operations not involving a full re-CDT of the face, but not
	  clear yet how critical it is.

2019-06-14 16:42  starseeker

	* [r73309] doc/legal/embedded/CMakeLists.txt,
	  doc/legal/embedded/Eigen.txt, include/bn/plane.h,
	  src/libbn/CMakeLists.txt, src/libbn/plane.cpp,
	  src/other/CMakeLists.txt, src/other/Eigen,
	  src/other/Eigen/COPYING.BSD, src/other/Eigen/COPYING.GPL,
	  src/other/Eigen/COPYING.LGPL, src/other/Eigen/COPYING.MINPACK,
	  src/other/Eigen/COPYING.MPL2, src/other/Eigen/COPYING.README,
	  src/other/Eigen/Eigen, src/other/Eigen/Eigen/CMakeLists.txt,
	  src/other/Eigen/Eigen/Cholesky,
	  src/other/Eigen/Eigen/CholmodSupport, src/other/Eigen/Eigen/Core,
	  src/other/Eigen/Eigen/Dense, src/other/Eigen/Eigen/Eigen,
	  src/other/Eigen/Eigen/Eigenvalues,
	  src/other/Eigen/Eigen/Geometry,
	  src/other/Eigen/Eigen/Householder,
	  src/other/Eigen/Eigen/IterativeLinearSolvers,
	  src/other/Eigen/Eigen/Jacobi, src/other/Eigen/Eigen/LU,
	  src/other/Eigen/Eigen/MetisSupport,
	  src/other/Eigen/Eigen/OrderingMethods,
	  src/other/Eigen/Eigen/PaStiXSupport,
	  src/other/Eigen/Eigen/PardisoSupport, src/other/Eigen/Eigen/QR,
	  src/other/Eigen/Eigen/QtAlignedMalloc,
	  src/other/Eigen/Eigen/SPQRSupport, src/other/Eigen/Eigen/SVD,
	  src/other/Eigen/Eigen/Sparse,
	  src/other/Eigen/Eigen/SparseCholesky,
	  src/other/Eigen/Eigen/SparseCore, src/other/Eigen/Eigen/SparseLU,
	  src/other/Eigen/Eigen/SparseQR, src/other/Eigen/Eigen/StdDeque,
	  src/other/Eigen/Eigen/StdList, src/other/Eigen/Eigen/StdVector,
	  src/other/Eigen/Eigen/SuperLUSupport,
	  src/other/Eigen/Eigen/UmfPackSupport, src/other/Eigen/Eigen/src,
	  src/other/Eigen/Eigen/src/Cholesky,
	  src/other/Eigen/Eigen/src/Cholesky/LDLT.h,
	  src/other/Eigen/Eigen/src/Cholesky/LLT.h,
	  src/other/Eigen/Eigen/src/Cholesky/LLT_LAPACKE.h,
	  src/other/Eigen/Eigen/src/CholmodSupport,
	  src/other/Eigen/Eigen/src/CholmodSupport/CholmodSupport.h,
	  src/other/Eigen/Eigen/src/Core,
	  src/other/Eigen/Eigen/src/Core/Array.h,
	  src/other/Eigen/Eigen/src/Core/ArrayBase.h,
	  src/other/Eigen/Eigen/src/Core/ArrayWrapper.h,
	  src/other/Eigen/Eigen/src/Core/Assign.h,
	  src/other/Eigen/Eigen/src/Core/AssignEvaluator.h,
	  src/other/Eigen/Eigen/src/Core/Assign_MKL.h,
	  src/other/Eigen/Eigen/src/Core/BandMatrix.h,
	  src/other/Eigen/Eigen/src/Core/Block.h,
	  src/other/Eigen/Eigen/src/Core/BooleanRedux.h,
	  src/other/Eigen/Eigen/src/Core/CommaInitializer.h,
	  src/other/Eigen/Eigen/src/Core/ConditionEstimator.h,
	  src/other/Eigen/Eigen/src/Core/CoreEvaluators.h,
	  src/other/Eigen/Eigen/src/Core/CoreIterators.h,
	  src/other/Eigen/Eigen/src/Core/CwiseBinaryOp.h,
	  src/other/Eigen/Eigen/src/Core/CwiseNullaryOp.h,
	  src/other/Eigen/Eigen/src/Core/CwiseTernaryOp.h,
	  src/other/Eigen/Eigen/src/Core/CwiseUnaryOp.h,
	  src/other/Eigen/Eigen/src/Core/CwiseUnaryView.h,
	  src/other/Eigen/Eigen/src/Core/DenseBase.h,
	  src/other/Eigen/Eigen/src/Core/DenseCoeffsBase.h,
	  src/other/Eigen/Eigen/src/Core/DenseStorage.h,
	  src/other/Eigen/Eigen/src/Core/Diagonal.h,
	  src/other/Eigen/Eigen/src/Core/DiagonalMatrix.h,
	  src/other/Eigen/Eigen/src/Core/DiagonalProduct.h,
	  src/other/Eigen/Eigen/src/Core/Dot.h,
	  src/other/Eigen/Eigen/src/Core/EigenBase.h,
	  src/other/Eigen/Eigen/src/Core/ForceAlignedAccess.h,
	  src/other/Eigen/Eigen/src/Core/Fuzzy.h,
	  src/other/Eigen/Eigen/src/Core/GeneralProduct.h,
	  src/other/Eigen/Eigen/src/Core/GenericPacketMath.h,
	  src/other/Eigen/Eigen/src/Core/GlobalFunctions.h,
	  src/other/Eigen/Eigen/src/Core/IO.h,
	  src/other/Eigen/Eigen/src/Core/Inverse.h,
	  src/other/Eigen/Eigen/src/Core/Map.h,
	  src/other/Eigen/Eigen/src/Core/MapBase.h,
	  src/other/Eigen/Eigen/src/Core/MathFunctions.h,
	  src/other/Eigen/Eigen/src/Core/MathFunctionsImpl.h,
	  src/other/Eigen/Eigen/src/Core/Matrix.h,
	  src/other/Eigen/Eigen/src/Core/MatrixBase.h,
	  src/other/Eigen/Eigen/src/Core/NestByValue.h,
	  src/other/Eigen/Eigen/src/Core/NoAlias.h,
	  src/other/Eigen/Eigen/src/Core/NumTraits.h,
	  src/other/Eigen/Eigen/src/Core/PermutationMatrix.h,
	  src/other/Eigen/Eigen/src/Core/PlainObjectBase.h,
	  src/other/Eigen/Eigen/src/Core/Product.h,
	  src/other/Eigen/Eigen/src/Core/ProductEvaluators.h,
	  src/other/Eigen/Eigen/src/Core/Random.h,
	  src/other/Eigen/Eigen/src/Core/Redux.h,
	  src/other/Eigen/Eigen/src/Core/Ref.h,
	  src/other/Eigen/Eigen/src/Core/Replicate.h,
	  src/other/Eigen/Eigen/src/Core/ReturnByValue.h,
	  src/other/Eigen/Eigen/src/Core/Reverse.h,
	  src/other/Eigen/Eigen/src/Core/Select.h,
	  src/other/Eigen/Eigen/src/Core/SelfAdjointView.h,
	  src/other/Eigen/Eigen/src/Core/SelfCwiseBinaryOp.h,
	  src/other/Eigen/Eigen/src/Core/Solve.h,
	  src/other/Eigen/Eigen/src/Core/SolveTriangular.h,
	  src/other/Eigen/Eigen/src/Core/SolverBase.h,
	  src/other/Eigen/Eigen/src/Core/StableNorm.h,
	  src/other/Eigen/Eigen/src/Core/Stride.h,
	  src/other/Eigen/Eigen/src/Core/Swap.h,
	  src/other/Eigen/Eigen/src/Core/Transpose.h,
	  src/other/Eigen/Eigen/src/Core/Transpositions.h,
	  src/other/Eigen/Eigen/src/Core/TriangularMatrix.h,
	  src/other/Eigen/Eigen/src/Core/VectorBlock.h,
	  src/other/Eigen/Eigen/src/Core/VectorwiseOp.h,
	  src/other/Eigen/Eigen/src/Core/Visitor.h,
	  src/other/Eigen/Eigen/src/Core/arch,
	  src/other/Eigen/Eigen/src/Core/arch/AVX,
	  src/other/Eigen/Eigen/src/Core/arch/AVX/Complex.h,
	  src/other/Eigen/Eigen/src/Core/arch/AVX/MathFunctions.h,
	  src/other/Eigen/Eigen/src/Core/arch/AVX/PacketMath.h,
	  src/other/Eigen/Eigen/src/Core/arch/AVX/TypeCasting.h,
	  src/other/Eigen/Eigen/src/Core/arch/AVX512,
	  src/other/Eigen/Eigen/src/Core/arch/AVX512/MathFunctions.h,
	  src/other/Eigen/Eigen/src/Core/arch/AVX512/PacketMath.h,
	  src/other/Eigen/Eigen/src/Core/arch/AltiVec,
	  src/other/Eigen/Eigen/src/Core/arch/AltiVec/Complex.h,
	  src/other/Eigen/Eigen/src/Core/arch/AltiVec/MathFunctions.h,
	  src/other/Eigen/Eigen/src/Core/arch/AltiVec/PacketMath.h,
	  src/other/Eigen/Eigen/src/Core/arch/CUDA,
	  src/other/Eigen/Eigen/src/Core/arch/CUDA/Complex.h,
	  src/other/Eigen/Eigen/src/Core/arch/CUDA/Half.h,
	  src/other/Eigen/Eigen/src/Core/arch/CUDA/MathFunctions.h,
	  src/other/Eigen/Eigen/src/Core/arch/CUDA/PacketMath.h,
	  src/other/Eigen/Eigen/src/Core/arch/CUDA/PacketMathHalf.h,
	  src/other/Eigen/Eigen/src/Core/arch/CUDA/TypeCasting.h,
	  src/other/Eigen/Eigen/src/Core/arch/Default,
	  src/other/Eigen/Eigen/src/Core/arch/Default/ConjHelper.h,
	  src/other/Eigen/Eigen/src/Core/arch/Default/Settings.h,
	  src/other/Eigen/Eigen/src/Core/arch/NEON,
	  src/other/Eigen/Eigen/src/Core/arch/NEON/Complex.h,
	  src/other/Eigen/Eigen/src/Core/arch/NEON/MathFunctions.h,
	  src/other/Eigen/Eigen/src/Core/arch/NEON/PacketMath.h,
	  src/other/Eigen/Eigen/src/Core/arch/SSE,
	  src/other/Eigen/Eigen/src/Core/arch/SSE/Complex.h,
	  src/other/Eigen/Eigen/src/Core/arch/SSE/MathFunctions.h,
	  src/other/Eigen/Eigen/src/Core/arch/SSE/PacketMath.h,
	  src/other/Eigen/Eigen/src/Core/arch/SSE/TypeCasting.h,
	  src/other/Eigen/Eigen/src/Core/arch/ZVector,
	  src/other/Eigen/Eigen/src/Core/arch/ZVector/Complex.h,
	  src/other/Eigen/Eigen/src/Core/arch/ZVector/MathFunctions.h,
	  src/other/Eigen/Eigen/src/Core/arch/ZVector/PacketMath.h,
	  src/other/Eigen/Eigen/src/Core/functors,
	  src/other/Eigen/Eigen/src/Core/functors/AssignmentFunctors.h,
	  src/other/Eigen/Eigen/src/Core/functors/BinaryFunctors.h,
	  src/other/Eigen/Eigen/src/Core/functors/NullaryFunctors.h,
	  src/other/Eigen/Eigen/src/Core/functors/StlFunctors.h,
	  src/other/Eigen/Eigen/src/Core/functors/TernaryFunctors.h,
	  src/other/Eigen/Eigen/src/Core/functors/UnaryFunctors.h,
	  src/other/Eigen/Eigen/src/Core/products,
	  src/other/Eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h,
	  src/other/Eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h,
	  src/other/Eigen/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h,
	  src/other/Eigen/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_BLAS.h,
	  src/other/Eigen/Eigen/src/Core/products/GeneralMatrixMatrix_BLAS.h,
	  src/other/Eigen/Eigen/src/Core/products/GeneralMatrixVector.h,
	  src/other/Eigen/Eigen/src/Core/products/GeneralMatrixVector_BLAS.h,
	  src/other/Eigen/Eigen/src/Core/products/Parallelizer.h,
	  src/other/Eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix.h,
	  src/other/Eigen/Eigen/src/Core/products/SelfadjointMatrixMatrix_BLAS.h,
	  src/other/Eigen/Eigen/src/Core/products/SelfadjointMatrixVector.h,
	  src/other/Eigen/Eigen/src/Core/products/SelfadjointMatrixVector_BLAS.h,
	  src/other/Eigen/Eigen/src/Core/products/SelfadjointProduct.h,
	  src/other/Eigen/Eigen/src/Core/products/SelfadjointRank2Update.h,
	  src/other/Eigen/Eigen/src/Core/products/TriangularMatrixMatrix.h,
	  src/other/Eigen/Eigen/src/Core/products/TriangularMatrixMatrix_BLAS.h,
	  src/other/Eigen/Eigen/src/Core/products/TriangularMatrixVector.h,
	  src/other/Eigen/Eigen/src/Core/products/TriangularMatrixVector_BLAS.h,
	  src/other/Eigen/Eigen/src/Core/products/TriangularSolverMatrix.h,
	  src/other/Eigen/Eigen/src/Core/products/TriangularSolverMatrix_BLAS.h,
	  src/other/Eigen/Eigen/src/Core/products/TriangularSolverVector.h,
	  src/other/Eigen/Eigen/src/Core/util,
	  src/other/Eigen/Eigen/src/Core/util/BlasUtil.h,
	  src/other/Eigen/Eigen/src/Core/util/Constants.h,
	  src/other/Eigen/Eigen/src/Core/util/DisableStupidWarnings.h,
	  src/other/Eigen/Eigen/src/Core/util/ForwardDeclarations.h,
	  src/other/Eigen/Eigen/src/Core/util/MKL_support.h,
	  src/other/Eigen/Eigen/src/Core/util/Macros.h,
	  src/other/Eigen/Eigen/src/Core/util/Memory.h,
	  src/other/Eigen/Eigen/src/Core/util/Meta.h,
	  src/other/Eigen/Eigen/src/Core/util/NonMPL2.h,
	  src/other/Eigen/Eigen/src/Core/util/ReenableStupidWarnings.h,
	  src/other/Eigen/Eigen/src/Core/util/StaticAssert.h,
	  src/other/Eigen/Eigen/src/Core/util/XprHelper.h,
	  src/other/Eigen/Eigen/src/Eigenvalues,
	  src/other/Eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h,
	  src/other/Eigen/Eigen/src/Eigenvalues/ComplexSchur.h,
	  src/other/Eigen/Eigen/src/Eigenvalues/ComplexSchur_LAPACKE.h,
	  src/other/Eigen/Eigen/src/Eigenvalues/EigenSolver.h,
	  src/other/Eigen/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h,
	  src/other/Eigen/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h,
	  src/other/Eigen/Eigen/src/Eigenvalues/HessenbergDecomposition.h,
	  src/other/Eigen/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h,
	  src/other/Eigen/Eigen/src/Eigenvalues/RealQZ.h,
	  src/other/Eigen/Eigen/src/Eigenvalues/RealSchur.h,
	  src/other/Eigen/Eigen/src/Eigenvalues/RealSchur_LAPACKE.h,
	  src/other/Eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h,
	  src/other/Eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver_LAPACKE.h,
	  src/other/Eigen/Eigen/src/Eigenvalues/Tridiagonalization.h,
	  src/other/Eigen/Eigen/src/Geometry,
	  src/other/Eigen/Eigen/src/Geometry/AlignedBox.h,
	  src/other/Eigen/Eigen/src/Geometry/AngleAxis.h,
	  src/other/Eigen/Eigen/src/Geometry/EulerAngles.h,
	  src/other/Eigen/Eigen/src/Geometry/Homogeneous.h,
	  src/other/Eigen/Eigen/src/Geometry/Hyperplane.h,
	  src/other/Eigen/Eigen/src/Geometry/OrthoMethods.h,
	  src/other/Eigen/Eigen/src/Geometry/ParametrizedLine.h,
	  src/other/Eigen/Eigen/src/Geometry/Quaternion.h,
	  src/other/Eigen/Eigen/src/Geometry/Rotation2D.h,
	  src/other/Eigen/Eigen/src/Geometry/RotationBase.h,
	  src/other/Eigen/Eigen/src/Geometry/Scaling.h,
	  src/other/Eigen/Eigen/src/Geometry/Transform.h,
	  src/other/Eigen/Eigen/src/Geometry/Translation.h,
	  src/other/Eigen/Eigen/src/Geometry/Umeyama.h,
	  src/other/Eigen/Eigen/src/Geometry/arch,
	  src/other/Eigen/Eigen/src/Geometry/arch/Geometry_SSE.h,
	  src/other/Eigen/Eigen/src/Householder,
	  src/other/Eigen/Eigen/src/Householder/BlockHouseholder.h,
	  src/other/Eigen/Eigen/src/Householder/Householder.h,
	  src/other/Eigen/Eigen/src/Householder/HouseholderSequence.h,
	  src/other/Eigen/Eigen/src/IterativeLinearSolvers,
	  src/other/Eigen/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h,
	  src/other/Eigen/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h,
	  src/other/Eigen/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h,
	  src/other/Eigen/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h,
	  src/other/Eigen/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h,
	  src/other/Eigen/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h,
	  src/other/Eigen/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h,
	  src/other/Eigen/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h,
	  src/other/Eigen/Eigen/src/Jacobi,
	  src/other/Eigen/Eigen/src/Jacobi/Jacobi.h,
	  src/other/Eigen/Eigen/src/LU,
	  src/other/Eigen/Eigen/src/LU/Determinant.h,
	  src/other/Eigen/Eigen/src/LU/FullPivLU.h,
	  src/other/Eigen/Eigen/src/LU/InverseImpl.h,
	  src/other/Eigen/Eigen/src/LU/PartialPivLU.h,
	  src/other/Eigen/Eigen/src/LU/PartialPivLU_LAPACKE.h,
	  src/other/Eigen/Eigen/src/LU/arch,
	  src/other/Eigen/Eigen/src/LU/arch/Inverse_SSE.h,
	  src/other/Eigen/Eigen/src/MetisSupport,
	  src/other/Eigen/Eigen/src/MetisSupport/MetisSupport.h,
	  src/other/Eigen/Eigen/src/OrderingMethods,
	  src/other/Eigen/Eigen/src/OrderingMethods/Amd.h,
	  src/other/Eigen/Eigen/src/OrderingMethods/Eigen_Colamd.h,
	  src/other/Eigen/Eigen/src/OrderingMethods/Ordering.h,
	  src/other/Eigen/Eigen/src/PaStiXSupport,
	  src/other/Eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h,
	  src/other/Eigen/Eigen/src/PardisoSupport,
	  src/other/Eigen/Eigen/src/PardisoSupport/PardisoSupport.h,
	  src/other/Eigen/Eigen/src/QR,
	  src/other/Eigen/Eigen/src/QR/ColPivHouseholderQR.h,
	  src/other/Eigen/Eigen/src/QR/ColPivHouseholderQR_LAPACKE.h,
	  src/other/Eigen/Eigen/src/QR/CompleteOrthogonalDecomposition.h,
	  src/other/Eigen/Eigen/src/QR/FullPivHouseholderQR.h,
	  src/other/Eigen/Eigen/src/QR/HouseholderQR.h,
	  src/other/Eigen/Eigen/src/QR/HouseholderQR_LAPACKE.h,
	  src/other/Eigen/Eigen/src/SPQRSupport,
	  src/other/Eigen/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h,
	  src/other/Eigen/Eigen/src/SVD,
	  src/other/Eigen/Eigen/src/SVD/BDCSVD.h,
	  src/other/Eigen/Eigen/src/SVD/JacobiSVD.h,
	  src/other/Eigen/Eigen/src/SVD/JacobiSVD_LAPACKE.h,
	  src/other/Eigen/Eigen/src/SVD/SVDBase.h,
	  src/other/Eigen/Eigen/src/SVD/UpperBidiagonalization.h,
	  src/other/Eigen/Eigen/src/SparseCholesky,
	  src/other/Eigen/Eigen/src/SparseCholesky/SimplicialCholesky.h,
	  src/other/Eigen/Eigen/src/SparseCholesky/SimplicialCholesky_impl.h,
	  src/other/Eigen/Eigen/src/SparseCore,
	  src/other/Eigen/Eigen/src/SparseCore/AmbiVector.h,
	  src/other/Eigen/Eigen/src/SparseCore/CompressedStorage.h,
	  src/other/Eigen/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h,
	  src/other/Eigen/Eigen/src/SparseCore/MappedSparseMatrix.h,
	  src/other/Eigen/Eigen/src/SparseCore/SparseAssign.h,
	  src/other/Eigen/Eigen/src/SparseCore/SparseBlock.h,
	  src/other/Eigen/Eigen/src/SparseCore/SparseColEtree.h,
	  src/other/Eigen/Eigen/src/SparseCore/SparseCompressedBase.h,
	  src/other/Eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h,
	  src/other/Eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h,
	  src/other/Eigen/Eigen/src/SparseCore/SparseDenseProduct.h,
	  src/other/Eigen/Eigen/src/SparseCore/SparseDiagonalProduct.h,
	  src/other/Eigen/Eigen/src/SparseCore/SparseDot.h,
	  src/other/Eigen/Eigen/src/SparseCore/SparseFuzzy.h,
	  src/other/Eigen/Eigen/src/SparseCore/SparseMap.h,
	  src/other/Eigen/Eigen/src/SparseCore/SparseMatrix.h,
	  src/other/Eigen/Eigen/src/SparseCore/SparseMatrixBase.h,
	  src/other/Eigen/Eigen/src/SparseCore/SparsePermutation.h,
	  src/other/Eigen/Eigen/src/SparseCore/SparseProduct.h,
	  src/other/Eigen/Eigen/src/SparseCore/SparseRedux.h,
	  src/other/Eigen/Eigen/src/SparseCore/SparseRef.h,
	  src/other/Eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h,
	  src/other/Eigen/Eigen/src/SparseCore/SparseSolverBase.h,
	  src/other/Eigen/Eigen/src/SparseCore/SparseSparseProductWithPruning.h,
	  src/other/Eigen/Eigen/src/SparseCore/SparseTranspose.h,
	  src/other/Eigen/Eigen/src/SparseCore/SparseTriangularView.h,
	  src/other/Eigen/Eigen/src/SparseCore/SparseUtil.h,
	  src/other/Eigen/Eigen/src/SparseCore/SparseVector.h,
	  src/other/Eigen/Eigen/src/SparseCore/SparseView.h,
	  src/other/Eigen/Eigen/src/SparseCore/TriangularSolver.h,
	  src/other/Eigen/Eigen/src/SparseLU,
	  src/other/Eigen/Eigen/src/SparseLU/SparseLU.h,
	  src/other/Eigen/Eigen/src/SparseLU/SparseLUImpl.h,
	  src/other/Eigen/Eigen/src/SparseLU/SparseLU_Memory.h,
	  src/other/Eigen/Eigen/src/SparseLU/SparseLU_Structs.h,
	  src/other/Eigen/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h,
	  src/other/Eigen/Eigen/src/SparseLU/SparseLU_Utils.h,
	  src/other/Eigen/Eigen/src/SparseLU/SparseLU_column_bmod.h,
	  src/other/Eigen/Eigen/src/SparseLU/SparseLU_column_dfs.h,
	  src/other/Eigen/Eigen/src/SparseLU/SparseLU_copy_to_ucol.h,
	  src/other/Eigen/Eigen/src/SparseLU/SparseLU_gemm_kernel.h,
	  src/other/Eigen/Eigen/src/SparseLU/SparseLU_heap_relax_snode.h,
	  src/other/Eigen/Eigen/src/SparseLU/SparseLU_kernel_bmod.h,
	  src/other/Eigen/Eigen/src/SparseLU/SparseLU_panel_bmod.h,
	  src/other/Eigen/Eigen/src/SparseLU/SparseLU_panel_dfs.h,
	  src/other/Eigen/Eigen/src/SparseLU/SparseLU_pivotL.h,
	  src/other/Eigen/Eigen/src/SparseLU/SparseLU_pruneL.h,
	  src/other/Eigen/Eigen/src/SparseLU/SparseLU_relax_snode.h,
	  src/other/Eigen/Eigen/src/SparseQR,
	  src/other/Eigen/Eigen/src/SparseQR/SparseQR.h,
	  src/other/Eigen/Eigen/src/StlSupport,
	  src/other/Eigen/Eigen/src/StlSupport/StdDeque.h,
	  src/other/Eigen/Eigen/src/StlSupport/StdList.h,
	  src/other/Eigen/Eigen/src/StlSupport/StdVector.h,
	  src/other/Eigen/Eigen/src/StlSupport/details.h,
	  src/other/Eigen/Eigen/src/SuperLUSupport,
	  src/other/Eigen/Eigen/src/SuperLUSupport/SuperLUSupport.h,
	  src/other/Eigen/Eigen/src/UmfPackSupport,
	  src/other/Eigen/Eigen/src/UmfPackSupport/UmfPackSupport.h,
	  src/other/Eigen/Eigen/src/misc,
	  src/other/Eigen/Eigen/src/misc/Image.h,
	  src/other/Eigen/Eigen/src/misc/Kernel.h,
	  src/other/Eigen/Eigen/src/misc/RealSvd2x2.h,
	  src/other/Eigen/Eigen/src/misc/blas.h,
	  src/other/Eigen/Eigen/src/misc/lapack.h,
	  src/other/Eigen/Eigen/src/misc/lapacke.h,
	  src/other/Eigen/Eigen/src/misc/lapacke_mangling.h,
	  src/other/Eigen/Eigen/src/plugins,
	  src/other/Eigen/Eigen/src/plugins/ArrayCwiseBinaryOps.h,
	  src/other/Eigen/Eigen/src/plugins/ArrayCwiseUnaryOps.h,
	  src/other/Eigen/Eigen/src/plugins/BlockMethods.h,
	  src/other/Eigen/Eigen/src/plugins/CommonCwiseBinaryOps.h,
	  src/other/Eigen/Eigen/src/plugins/CommonCwiseUnaryOps.h,
	  src/other/Eigen/Eigen/src/plugins/MatrixCwiseBinaryOps.h,
	  src/other/Eigen/Eigen/src/plugins/MatrixCwiseUnaryOps.h,
	  src/other/Eigen/README.md:
	  Pull a routine for best fit plane calculation from the old
	  bot2nurbs code and make it a libbn function. It used Eigen, so
	  for now just put Eigen back in as the simplest way forward, but
	  eventually may want to look at refactoring SVDLIBC
	  https://github.com/lucasmaystre/svdlibc to provide this
	  capability without having to pull in Eigen.

2019-06-14 16:28  starseeker

	* [r73308] src/libbrep/trimesh.cpp, src/libbrep/trimesh.h:
	  Need common.h first

2019-06-14 14:55  starseeker

	* [r73307] src/libbrep/CMakeLists.txt,
	  src/libbrep/cdt_singular_surf.cpp, src/libbrep/trimesh.cpp,
	  src/libbrep/trimesh.h:
	  Try using the minimalist halfedge code from
	  https://github.com/yig/halfedge instead of rolling my own
	  container for this part.

2019-06-14 13:57  starseeker

	* [r73306] src/libbrep/cdt_singular_surf.cpp:
	  Build the set of triangles on the singularity

2019-06-14 13:20  starseeker

	* [r73305] src/libbn/CMakeLists.txt, src/libbn/plane.c,
	  src/libbn/plane.cpp:
	  Set the stage for an experiment

2019-06-14 11:48  starseeker

	* [r73304] misc/repoconv/CONVERT.sh:
	  template file is in the parent dir

2019-06-14 11:46  starseeker

	* [r73303] misc/repoconv/29886-note-template.fi,
	  misc/repoconv/CONVERT.sh:
	  Add the note template for 29886

2019-06-14 11:38  starseeker

	* [r73302] misc/CMakeLists.txt, misc/repoconv/CONVERT.sh,
	  misc/repoconv/NOTES, misc/repoconv/README:
	  Begin assembling the pieces for the final conversion run.

2019-06-14 11:28  starseeker

	* [r73301] misc/repoconv/svnfexport/custom/36633-tree.fi,
	  misc/repoconv/svnfexport/custom/36843-tree.fi,
	  misc/repoconv/svnfexport/custom/39465-tree.fi:
	  Pull the delete all versions of these in from the last test run.

2019-06-14 02:09  starseeker

	* [r73300] misc/repoconv/svnfexport/custom/73059-b.fi,
	  misc/repoconv/svnfexport/custom/73059-commit.fi:
	  rel-7-30-2-1 tag reversion

2019-06-13 23:50  starseeker

	* [r73299] misc/repoconv/svnfexport/custom/72855-b.fi,
	  misc/repoconv/svnfexport/custom/72855-commit.fi:
	  Another tag that had to be retracted.

2019-06-13 21:10  starseeker

	* [r73298] src/libbrep/cdt.cpp:
	  Only do the vertex calculation for those vertices associated with
	  singular trims.

2019-06-13 18:07  starseeker

	* [r73297] src/libbrep/CMakeLists.txt, src/libbrep/cdt.cpp,
	  src/libbrep/cdt.h, src/libbrep/cdt_singular_surf.cpp,
	  src/libbrep/cdt_util.cpp, src/libbrep/cdt_validate.cpp:
	  Begin mapping out a different approach to the singular trim
	  problem.

2019-06-13 13:28  starseeker

	* [r73296] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_util.cpp, src/libbrep/cdt_validate.cpp:
	  Only fall back on the vertex averaged normal if the face normal
	  at that point doesn't look right for the triangle.

2019-06-13 12:10  starseeker

	* [r73295] misc/repoconv/svnfexport/common_structs.h:
	  typo

2019-06-13 12:08  starseeker

	* [r73294] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  git repo size can grow substantially if we don't git gc
	  periodically during the conversion, so we'll want to do that
	  periodically if the process is running automatically.

2019-06-13 12:03  starseeker

	* [r73293] misc/repoconv/svnfexport/svnfexport_git.cxx,
	  misc/repoconv/svnfexport/sync_commit.sh,
	  misc/repoconv/svnfexport/sync_commit_trunk.sh:
	  When we do the full run, we don't want to leave lots of backup
	  copies around - they can chew up disk space.

2019-06-13 11:47  starseeker

	* [r73292] misc/repoconv/svnfexport/common_structs.h:
	  Replace hardcoded path

2019-06-13 11:41  starseeker

	* [r73291] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  These three revisions pertain to an aborative creo3plugin branch
	  - skip.

2019-06-13 03:53  brlcad

	* [r73290] src/other/stepcode/src/exp2cxx/classes.c:
	  gcc9 issue, if a copy constructor is going to get invoked and the
	  class goes to the trouble to define an assignment operator, it's
	  possibly wrong to call the default copy constructor implicitly.
	  so provide an explicit copy constructor.

2019-06-13 00:06  starseeker

	* [r73289] misc/repoconv/svnfexport/custom/71925-b.fi,
	  misc/repoconv/svnfexport/custom/71925-commit.fi:
	  Another botched tag

2019-06-12 22:59  brlcad

	* [r73288] src/other/gdal/CMakeLists.txt:
	  we don't want to fail if gdal has or doesn't have undefined
	  symbols. besides, logic doesn't quite right as compiler and
	  linker are not necessarily the same id (as was observed and
	  caused a linker failure with --no-undefined being an invalid
	  flag)

2019-06-12 22:46  brlcad

	* [r73287] src/libbg/clipper.cpp:
	  operator= is used on an Int128, but it was never defined. provide
	  it.

2019-06-12 22:42  brlcad

	* [r73286] src/libbrep/px_event.cpp:
	  using memset to initialize a class is seriously bad juju,
	  particularly for non-pod types. don't know of a way to avoid
	  explicit initialization, so we do that instead. (sigh, deviation
	  from opennurbs_x)

2019-06-12 22:18  brlcad

	* [r73285] src/libbu/CMakeLists.txt, src/libbu/dir.c,
	  src/libbu/dir_macosx.m:
	  remove the corefoundation method for finding the system cache
	  directory since it's adequately covered by a plain C method.
	  additionally, as the corefoundation method relied on objective-c,
	  this is problematic with gcc-9 (e.g., homebrew or self-install)
	  compilation as it still does not yet implement Modern
	  Objective-C, thus slew of errors result when simply including the
	  foundation header.

2019-06-12 20:45  starseeker

	* [r73284] src/libbrep/cdt.cpp:
	  Use calculated normals on vertices when assembling mesh, if
	  present.

2019-06-12 20:37  starseeker

	* [r73283] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_util.cpp, src/libbrep/cdt_validate.cpp:
	  Incorporate ON_3dPoint based lookup of calculated vertex normals
	  at singularties into normal checks.

2019-06-12 18:48  starseeker

	* [r73282] src/libbrep/cdt.cpp:
	  Triangle count is handled fully in next loop - don't decrement
	  here. Was resulting in too few triangles being written out,
	  creating a mesh with missing faces or portions thereof.

2019-06-11 22:36  starseeker

	* [r73281] misc/repoconv/svnfexport/custom/70326-b.fi,
	  misc/repoconv/svnfexport/custom/70326-commit.fi:
	  Another reverted tag

2019-06-11 15:46  starseeker

	* [r73280] misc/repoconv/svnfexport/custom/69921-b.fi:
	  Another branch recreation suppression

2019-06-11 14:43  starseeker

	* [r73279] misc/repoconv/svnfexport/custom/69909-b.fi,
	  misc/repoconv/svnfexport/custom/69909-commit.fi:
	  Another tag needing work

2019-06-10 16:27  starseeker

	* [r73278] misc/repoconv/svn_git_cmp/svn_msgs.cxx:
	  We're handling the last cvs commit msg elsewhere

2019-06-10 12:28  starseeker

	* [r73277] misc/repoconv/svnfexport/custom/68611-b.fi,
	  misc/repoconv/svnfexport/custom/68611-commit.fi:
	  Premature tag - manually make a branch and redirect it there.

2019-06-08 15:59  d_rossberg

	* [r73276] src/libdm/dm-ogl.c:
	  correct depiction of annotations with *X OpenGL

2019-06-07 20:57  starseeker

	* [r73275] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_util.cpp, src/libbrep/cdt_validate.cpp:
	  Broke mesh output in the refactor. Need to fix, but first fix
	  debug printing.

2019-06-07 18:49  starseeker

	* [r73274] src/libbrep/cdt_edge.cpp:
	  roll up trim point setting operations into a function - not very
	  existing by itself, but setting the stage for doing more work in
	  the function.

2019-06-07 18:01  starseeker

	* [r73273] src/libbrep/cdt.h, src/libbrep/cdt_util.cpp:
	  Start setting up for managing 2D points the same way we manage 3D
	  points. Will be a bit of a refactor but need to get some coherent
	  uniformity in place for this.

2019-06-07 15:46  brlcad

	* [r73272] NEWS:
	  annotations were not displaying correctly on Windows. daniel
	  fixed this by fixing the opengl calls.

2019-06-07 15:05  starseeker

	* [r73271] src/libbrep/cdt.cpp, src/libbrep/cdt_validate.cpp:
	  Remove duplicate comment

2019-06-07 15:03  starseeker

	* [r73270] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_edge.cpp, src/libbrep/cdt_util.cpp:
	  Shift edge related logic into cdt_edge.cpp

2019-06-07 14:53  starseeker

	* [r73269] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_util.cpp:
	  Not using these right now, and a bit dubious that they will have
	  useful info - may do better using the triangle to get a normal
	  than trying to make sense of the singularity in isolation.

2019-06-07 14:44  starseeker

	* [r73268] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_util.cpp, src/libbrep/cdt_validate.cpp:
	  Start working on making the point bookkeeping code a bit more
	  coherent.

2019-06-07 13:18  starseeker

	* [r73267] src/libbrep/cdt.cpp:
	  Reduce the depth of Process_Loop_Edges code slightly.

2019-06-07 11:35  starseeker

	* [r73266] misc/repoconv/svnfexport/custom/61579-tree.fi:
	  61579 has quirks that break the deleteall scripting - put in a
	  tweaked tree

2019-06-07 08:42  d_rossberg

	* [r73265] src/libdm/dm-wgl.c:
	  with this, the annotations should work with MS Windows-OpenGL -
	  in general

2019-06-06 20:53  starseeker

	* [r73264] src/libbrep/cdt.cpp, src/libbrep/cdt_validate.cpp:
	  Make a stab at yanking 'problem' points from tessellations via
	  normal comparisons. This is probably overly aggressive (i.e. it
	  may thin out the tessellation too much) but for now it's acting
	  as a proof of principle.

2019-06-06 19:46  starseeker

	* [r73263] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_util.cpp, src/libbrep/cdt_validate.cpp:
	  Make a stab at removing a problem point - debug printing isn't
	  making sense, so something is off somewhere.

2019-06-06 19:15  starseeker

	* [r73262] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_util.cpp, src/libbrep/cdt_validate.cpp:
	  More work towards iterative triangulation

2019-06-06 18:51  starseeker

	* [r73261] src/libbrep/cdt.cpp:
	  Encapsulate the actual triangulation steps (as opposed to the
	  common setup code) into a function with an eye towards eventually
	  applying correction and re-triangulating.

2019-06-06 16:19  starseeker

	* [r73260] src/libbrep/cdt.h, src/libbrep/cdt_surf.cpp:
	  Experiment with a (slightly) different way of sampling the
	  surface. Rather than use the corners of the quads on subdivision,
	  store any undivided leaf boxes and pseudorandomly sample within
	  them.

2019-06-06 15:11  starseeker

	* [r73259] src/libbrep/cdt.h, src/libbrep/cdt_surf.cpp,
	  src/libbrep/cdt_validate.cpp:
	  tweaks

2019-06-06 14:10  starseeker

	* [r73258] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_util.cpp:
	  We'd probably do better to cast to integer space than than using
	  this approach.

2019-06-06 14:05  starseeker

	* [r73257] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_util.cpp:
	  Try jittering points slightly, but this looks like it may not be
	  very useful after all - it's hard to know what is 'enough but not
	  too much' locally.

2019-06-05 18:40  starseeker

	* [r73256] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_util.cpp:
	  refactor poly2tri polyline building into function.

2019-06-05 15:32  starseeker

	* [r73255] src/libbrep/cdt.cpp, src/libbrep/cdt_surf.cpp:
	  Separate edge point filtering and p2t point generation.

2019-06-05 15:17  starseeker

	* [r73254] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_surf.cpp, src/libbrep/cdt_util.cpp:
	  Use a std::set for the surface points to allow for easy
	  add/remove operations, persist it in the face state, and update
	  the surface point generating function to use the new container.

2019-06-05 14:06  starseeker

	* [r73253] src/libbrep/cdt.cpp:
	  Don't use a local cdt variable - just use the one in f

2019-06-05 12:44  starseeker

	* [r73252] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_util.cpp:
	  Shift the rt_trims ON_RTree into the face container.

2019-06-05 03:27  brlcad

	* [r73251] src/other/gdal/port/cpl_port.h:
	  and homebrew mac gcc 9.1 is unhappy if xlocale.h is not included.
	  needs more complicated test logic, so undo c73144 until a better
	  solution is found.

2019-06-04 21:22  starseeker

	* [r73250] src/libbrep/cdt.cpp:
	  use function for 3D point population

2019-06-04 20:25  starseeker

	* [r73249] src/libtclcad/libfuncs.c:
	  fix bu_brlcad_dir message - leftover from an early attempt to use
	  bu_brlcad_dir for the bu_dir piece. (Didn't work because
	  bu_brlcad_dir callers assume relative paths are returned, and
	  bu_dir provides absolute paths.)

2019-06-04 20:19  starseeker

	* [r73248] src/libtclcad/libfuncs.c:
	  Expose on the MGED command line the ability to get the current
	  bu_dir information. Driver was wanting a way to report the
	  current cache directory (LIBRT_CACHE in env output won't tell you
	  unless a non-default directory is set) but will also be useful
	  for temp, init, etc.

2019-06-04 20:17  starseeker

	* [r73247] src/libbu/dir.c:
	  append bu_getiwd buff to the vls - wasn't returning the result
	  previously.

2019-06-04 19:21  starseeker

	* [r73246] src/libbrep/cdt.cpp:
	  NIST2 face 404 is exhibiting an artifact that may be due to
	  collinear points in UV causing oddities in the CDT output...
	  regardless, we know collinear is bad for CDT from the issues
	  encountered in the triangle sub-CDT problem so we should avoid it
	  up front.

2019-06-04 19:12  starseeker

	* [r73245] src/libbrep/cdt_validate.cpp:
	  report the triangles associated with the problem points so we can
	  get a look at them if needed

2019-06-04 18:40  starseeker

	* [r73244] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_util.cpp, src/libbrep/cdt_validate.cpp:
	  Start working on doing the topology checks during the individual
	  face processing, where we can make an immediate try at correcting
	  them.

2019-06-04 15:50  starseeker

	* [r73243] src/libbrep/cdt.cpp:
	  Gah. NIST2 Face 167 produces unmapped edges with the current
	  settings, which looks like a 3D point that is on an edge curve
	  but wasn't filtered by the 2D tree. Will probably have to filter
	  points in both 2D and 3D to keep them off the edges reliably and
	  avoid issues.

2019-06-04 14:35  starseeker

	* [r73242] src/libbrep/cdt_surf.cpp:
	  More tweaking of surface point selection - looking like 3D point
	  validation against edge polylines may be necessary to avoid 'bad'
	  points

2019-06-04 13:08  starseeker

	* [r73241] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_util.cpp, src/libbrep/cdt_validate.cpp:
	  Adjust bookkeeping code.

2019-06-04 06:11  brlcad

	* [r73240] src/librt/primitives/bot/bot.c:
	  import uvs toothat were written

2019-06-04 06:09  brlcad

	* [r73239] src/librt/primitives/bot/g_bot_include.c:
	  uncomment the uv call for testing

2019-06-04 03:07  brlcad

	* [r73238] src/gtools/CMakeLists.txt, src/gtools/ganalyze.cpp,
	  src/gtools/ganalyze.cxx, src/gtools/gsh.cpp, src/gtools/gsh.cxx,
	  src/libanalyze/CMakeLists.txt, src/libanalyze/density.cpp,
	  src/libanalyze/density.cxx, src/libanalyze/nirt.cpp,
	  src/libanalyze/nirt.cxx, src/libanalyze/obj_to_pnts.cpp,
	  src/libanalyze/obj_to_pnts.cxx,
	  src/libanalyze/tests/CMakeLists.txt,
	  src/libanalyze/tests/density.cpp,
	  src/libanalyze/tests/density.cxx, src/libanalyze/wnsurface.cpp,
	  src/libanalyze/wnsurface.cxx, src/libbg/CMakeLists.txt,
	  src/libbg/QuickHull.cpp, src/libbg/QuickHull.cxx,
	  src/libbg/chull3d.cpp, src/libbg/chull3d.cxx,
	  src/libbg/clipper.cpp, src/libbg/clipper.cxx,
	  src/libbg/polygon_triangulate.cpp,
	  src/libbg/polygon_triangulate.cxx, src/libbg/trimesh_isect.cpp,
	  src/libbg/trimesh_isect.cxx, src/libbu/CMakeLists.txt,
	  src/libbu/tests/CMakeLists.txt, src/libbu/tests/semchk.cpp,
	  src/libbu/tests/semchk.cxx, src/libbu/tests/subprocess.cpp,
	  src/libbu/tests/subprocess.cxx, src/libged/CMakeLists.txt,
	  src/libged/center.cpp, src/libged/center.cxx,
	  src/libged/mater.cpp, src/libged/mater.cxx,
	  src/librt/CMakeLists.txt, src/librt/db_fp.cpp,
	  src/librt/db_fp.cxx, src/librt/tests/CMakeLists.txt,
	  src/librt/tests/cache.cpp, src/librt/tests/cache.cxx,
	  src/nirt/CMakeLists.txt, src/nirt/main.cpp, src/nirt/main.cxx:
	  rename all cxx files to cpp, per hacking. guilty of several of
	  these. tend to multiply like rabbits.

2019-06-04 02:55  brlcad

	* [r73237] regress/CMakeLists.txt:
	  account for the rtedge reference images

2019-06-03 20:55  starseeker

	* [r73236] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_util.cpp, src/libbrep/cdt_validate.cpp:
	  reassembly of mesh isn't quite right yet, but this is the start
	  of a refactor to allow running of the face validation logic on a
	  per-face basis, rather than all at once in the main tessellation
	  loop.

2019-06-03 17:45  starseeker

	* [r73235] src/libbrep/cdt.cpp:
	  Break vertex normal calculation logic out into its own function.

2019-06-03 17:39  starseeker

	* [r73234] src/libbrep/cdt.cpp:
	  Collapse two loops into one loop with conditional variables

2019-06-03 17:32  starseeker

	* [r73233] src/libbrep/cdt.cpp:
	  Group setup logic a bit differently.

2019-06-03 17:22  starseeker

	* [r73232] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_validate.cpp:
	  move trimesh error printing to a function

2019-06-03 17:13  starseeker

	* [r73231] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_validate.cpp:
	  break out involved face rebuilding into its own function

2019-06-03 15:42  starseeker

	* [r73230] src/libbrep/cdt.cpp:
	  Normals checking should come before face rebuild - not much point
	  in the latter if we need to re-CDT due to the former.

2019-06-03 15:36  starseeker

	* [r73229] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_util.cpp, src/libbrep/cdt_validate.cpp:
	  rename functions

2019-06-03 15:30  starseeker

	* [r73228] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_util.cpp, src/libbrep/cdt_validate.cpp:
	  Refactor logic down into smaller operational pieces, add
	  cdt_valdiate.cpp file

2019-06-03 14:20  starseeker

	* [r73227] src/libbrep/CMakeLists.txt, src/libbrep/cdt.cpp,
	  src/libbrep/cdt.h:
	  Split the triangle scrubbing logic into a separate file.

2019-06-03 14:10  starseeker

	* [r73226] src/libbrep/cdt.cpp, src/libbrep/cdt_edge.cpp,
	  src/libbrep/cdt_util.cpp:
	  shift vlist plotting to util

2019-06-03 14:00  starseeker

	* [r73225] src/libbrep/cdt_edge.cpp:
	  midpoint calculation, then mid_2d, then tangent fallback

2019-06-03 13:57  starseeker

	* [r73224] src/libbrep/cdt_edge.cpp:
	  Start working on a 'split the edge curve between two existing
	  trim points' function

2019-06-03 13:47  starseeker

	* [r73223] src/libbrep/cdt_edge.cpp:
	  use the get_trim_midpt function for the initial midpoint split

2019-06-03 11:40  starseeker

	* [r73222] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  Skip deleting commits (r46322,r46328) for some tags that never
	  got corresponding git branches to hold the commit.

2019-06-03 02:13  starseeker

	* [r73221] misc/repoconv/svnfexport/common_structs.h,
	  misc/repoconv/svnfexport/svnfexport_git.cxx,
	  misc/repoconv/svnfexport/sync_commit.sh,
	  misc/repoconv/svnfexport/sync_commit_trunk.sh:
	  Something odd is still going on with the svn vs git checkouts of
	  these files - correct sha1 to the git version.

2019-06-01 19:41  starseeker

	* [r73220] misc/repoconv/svnfexport/common_structs.h,
	  misc/repoconv/svnfexport/svnfexport_git.cxx:
	  More conversion tweaks

2019-05-31 21:26  starseeker

	* [r73219] src/libbrep/cdt.cpp:
	  Want the value in faces, not i

2019-05-31 19:09  starseeker

	* [r73218] src/libbrep/cdt.cpp:
	  Only plot if we have a non-null cdt

2019-05-31 19:00  starseeker

	* [r73217] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_util.cpp:
	  Create the face containers as needed.

2019-05-31 17:39  starseeker

	* [r73216] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_edge.cpp, src/libbrep/cdt_surf.cpp,
	  src/libbrep/cdt_util.cpp:
	  Start working on reorganizing the data groupings to be somewhat
	  more face centeric, so it's clear which data is local to the face
	  and which is not. Untested.

2019-05-31 11:12  starseeker

	* [r73215] misc/repoconv/svnfexport/custom/36472-commit.fi:
	  36472 is proving a bit tricky to get right, so far...

2019-05-31 11:09  starseeker

	* [r73214] misc/repoconv/dercs/svn_de-rcs.cxx:
	  Make sure we don't skip these files in the repo dercs run...

2019-05-31 11:01  starseeker

	* [r73213] misc/repoconv/svnfexport/checkout_dercs.sh:
	  brlcad.spec.in needs to be cleaned up as well.

2019-05-30 21:18  starseeker

	* [r73212] src/libbrep/cdt.cpp:
	  Add some thoughts on the necessary pieces for CDT 'repair' logic
	  to work correctly

2019-05-30 12:36  starseeker

	* [r73211] src/libbrep/cdt.cpp:
	  initialize

2019-05-30 11:39  starseeker

	* [r73210] misc/repoconv/svnfexport/checkout_dercs.sh:
	  See if the Id tag is what's messing with the brlcad.install sha1
	  comparisons

2019-05-30 01:52  starseeker

	* [r73209] misc/repoconv/svnfexport/common_structs.h:
	  If there's no svn checkout (can happen if we're processing an svn
	  'tag' with edits in a branch) just keep going.

2019-05-30 00:45  starseeker

	* [r73208] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  don't test tags when verify isn't set up to deal with them.

2019-05-29 21:59  starseeker

	* [r73207] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_edge.cpp, src/libbrep/cdt_util.cpp:
	  Start drilling down into why we're getting incorrect normals.

2019-05-29 19:37  starseeker

	* [r73206] src/libbrep/cdt_edge.cpp:
	  go with the smaller of loop_min_dist or cdt_tol->min_dist

2019-05-29 19:28  starseeker

	* [r73205] src/libbrep/cdt.cpp:
	  Flip brep normals if we have a flipped face when validating
	  triangle normals

2019-05-29 14:35  starseeker

	* [r73204] src/libbrep/cdt.cpp, src/libbrep/cdt_edge.cpp:
	  refactor some logic into functions

2019-05-29 11:28  starseeker

	* [r73203] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  Need to reset the stage if we're going to retry the main commit.

2019-05-28 21:40  starseeker

	* [r73202] src/libbrep/cdt_edge.cpp:
	  Better, but now getting some odd triangles at the peak of the
	  singularity again.

2019-05-28 20:38  starseeker

	* [r73201] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_edge.cpp:
	  Seeing a strange artifact on edge 790 on NIST2 face 246, which
	  looks like 2D trim points begin forced to 3D edge points not
	  'close' to their actual surface evaluation points. Checkpointing
	  work trying to guide a distance-based search for more suitable
	  midpoints. Here be dragons...

2019-05-28 11:48  starseeker

	* [r73200] misc/repoconv/svnfexport/common_structs.h,
	  misc/repoconv/svnfexport/svnfexport_git.cxx:
	  Actually run the tree rebuild script when we hit a verify fail
	  case.

2019-05-28 00:03  starseeker

	* [r73199] misc/repoconv/svn_git_cmp/svn_git_cmp.cxx:
	  Tweak reporting.

2019-05-27 23:55  starseeker

	* [r73198] misc/repoconv/svn_git_cmp/svn_git_cmp.cxx:
	  Be more conservative about the timestamp mappings - there are
	  others in there that look suspect.

2019-05-27 23:46  starseeker

	* [r73197] misc/repoconv/svn_git_cmp/svn_git_cmp.cxx:
	  Add a little more sophistication to the note mapping - we know
	  some ranges in SVN history are quirky, so within those ranges we
	  can't assume timestamp matches are meaningful.

2019-05-27 22:34  starseeker

	* [r73196] misc/repoconv/audit_merges/commit_list.txt:
	  Add a list of commits that (in a dry-run configuration) generated
	  git commit fi files without a merge line, but look like they
	  should have one per commit msg inspection. Will have to manually
	  tweak these to at least try to point to some of the relevant
	  merge info - won't be perfect in all cases, and this probably
	  misses some where the msg didn't provide enough of a clue, but
	  hopefully better than nothing.

2019-05-27 18:27  starseeker

	* [r73195] misc/repoconv/svnfexport/common_structs.h,
	  misc/repoconv/svnfexport/svnfexport.cxx,
	  misc/repoconv/svnfexport/svnfexport_git.cxx:
	  Don't blow away a pre-existing 'done' directory if we need to
	  restart - we may want to use information from those fi files.

2019-05-27 18:10  starseeker

	* [r73194] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  set the branch_add flag if we're adding a new tag branch

2019-05-27 15:02  d_rossberg

	* [r73193] misc/CMakeLists.txt:
	  quell CMake errors: "Attempting to ignore non-existent file"
	  were remains from revision 73191 deletes

2019-05-27 14:21  starseeker

	* [r73192] misc/repoconv/svnfexport/svn_date.cxx:
	  This is a simple utility for getting the git timestamp directly
	  from an SVN string, useful when we need to assemble a git commit
	  fi file by hand. Just take the svn timestamp as an arg.

2019-05-27 14:06  starseeker

	* [r73191] misc/repoconv/svnfexport/checkout_dercs.sh,
	  misc/repoconv/svnfexport/custom/29937-blob.fi,
	  misc/repoconv/svnfexport/custom/29982-tree.fi,
	  misc/repoconv/svnfexport/custom/29982.fi,
	  misc/repoconv/svnfexport/custom/30760-b.fi,
	  misc/repoconv/svnfexport/custom/30760-commit.fi,
	  misc/repoconv/svnfexport/custom/31039-b.fi,
	  misc/repoconv/svnfexport/custom/31039-tree.fi,
	  misc/repoconv/svnfexport/custom/31039.fi,
	  misc/repoconv/svnfexport/custom/32007-blob.fi,
	  misc/repoconv/svnfexport/custom/32007-tree.fi,
	  misc/repoconv/svnfexport/custom/32007.fi,
	  misc/repoconv/svnfexport/custom/32009-blob.fi,
	  misc/repoconv/svnfexport/custom/32009-tree.fi,
	  misc/repoconv/svnfexport/custom/32009.fi,
	  misc/repoconv/svnfexport/custom/32046-blob.fi,
	  misc/repoconv/svnfexport/custom/32046-tree.fi,
	  misc/repoconv/svnfexport/custom/32046.fi,
	  misc/repoconv/svnfexport/custom/32314-b.fi,
	  misc/repoconv/svnfexport/custom/32314-tree.fi,
	  misc/repoconv/svnfexport/custom/32314.fi,
	  misc/repoconv/svnfexport/custom/32430-blob.fi,
	  misc/repoconv/svnfexport/custom/33115-tree.fi,
	  misc/repoconv/svnfexport/custom/33115.fi,
	  misc/repoconv/svnfexport/custom/33147-blob.fi,
	  misc/repoconv/svnfexport/custom/33713-blob.fi,
	  misc/repoconv/svnfexport/custom/35881-tree.fi,
	  misc/repoconv/svnfexport/custom/36053-b.fi,
	  misc/repoconv/svnfexport/custom/36053-blob.fi,
	  misc/repoconv/svnfexport/custom/36053-commit.fi,
	  misc/repoconv/svnfexport/custom/36053-tree.fi,
	  misc/repoconv/svnfexport/custom/36053.fi,
	  misc/repoconv/svnfexport/custom/36472-b.fi,
	  misc/repoconv/svnfexport/custom/36472-commit.fi,
	  misc/repoconv/svnfexport/custom/36631-blob.fi,
	  misc/repoconv/svnfexport/custom/36631-tree.fi,
	  misc/repoconv/svnfexport/custom/36631.fi,
	  misc/repoconv/svnfexport/custom/36633-b.fi,
	  misc/repoconv/svnfexport/custom/36633-commit.fi,
	  misc/repoconv/svnfexport/custom/36633-tree.fi,
	  misc/repoconv/svnfexport/custom/36633.fi,
	  misc/repoconv/svnfexport/custom/36843-b.fi,
	  misc/repoconv/svnfexport/custom/36843-commit.fi,
	  misc/repoconv/svnfexport/custom/36843-tree.fi,
	  misc/repoconv/svnfexport/custom/36843.fi,
	  misc/repoconv/svnfexport/custom/36941-tree.fi,
	  misc/repoconv/svnfexport/custom/36941.fi,
	  misc/repoconv/svnfexport/custom/37277-tree.fi,
	  misc/repoconv/svnfexport/custom/37277.fi,
	  misc/repoconv/svnfexport/custom/37288-tree.fi,
	  misc/repoconv/svnfexport/custom/39465-b.fi,
	  misc/repoconv/svnfexport/custom/39465-commit.fi,
	  misc/repoconv/svnfexport/custom/39465-tree.fi,
	  misc/repoconv/svnfexport/custom/39897-tree.fi,
	  misc/repoconv/svnfexport/custom/40401-tree.fi,
	  misc/repoconv/svnfexport/custom/40402-tree.fi,
	  misc/repoconv/svnfexport/custom/41112-tree.fi,
	  misc/repoconv/svnfexport/custom/41269-tree.fi,
	  misc/repoconv/svnfexport/custom/41349-tree.fi,
	  misc/repoconv/svnfexport/custom/41871-tree.fi,
	  misc/repoconv/svnfexport/custom/42728-blob.fi,
	  misc/repoconv/svnfexport/custom/42728-tree.fi,
	  misc/repoconv/svnfexport/custom/43254-tree.fi,
	  misc/repoconv/svnfexport/custom/44463-tree.fi,
	  misc/repoconv/svnfexport/custom/44465-tree.fi,
	  misc/repoconv/svnfexport/custom/54597-blob.fi,
	  misc/repoconv/svnfexport/custom/54598-blob.fi,
	  misc/repoconv/svnfexport/custom/54916-blob.fi,
	  misc/repoconv/svnfexport/custom/57359-tree.fi,
	  misc/repoconv/svnfexport/custom/58306-blob.fi,
	  misc/repoconv/svnfexport/custom/60192-blob.fi,
	  misc/repoconv/svnfexport/custom/60421-blob.fi,
	  misc/repoconv/svnfexport/custom/61149-b.fi,
	  misc/repoconv/svnfexport/custom/61149-commit.fi,
	  misc/repoconv/svnfexport/custom/61579-blob.fi,
	  misc/repoconv/svnfexport/custom/61844-blob.fi,
	  misc/repoconv/svnfexport/custom/61845-blob.fi,
	  misc/repoconv/svnfexport/custom/62029-b.fi,
	  misc/repoconv/svnfexport/custom/64060-b.fi,
	  misc/repoconv/svnfexport/custom/64060-commit.fi,
	  misc/repoconv/svnfexport/custom/65867-b.fi,
	  misc/repoconv/svnfexport/custom/65867-commit.fi,
	  misc/repoconv/svnfexport/custom/66608-commit.fi,
	  misc/repoconv/svnfexport/custom/checkout_dercs.sh,
	  misc/repoconv/svnfexport/custom/sync_commit.sh,
	  misc/repoconv/svnfexport/custom/sync_commit_trunk.sh,
	  misc/repoconv/svnfexport/svn_date.cxx,
	  misc/repoconv/svnfexport/sync_commit.sh,
	  misc/repoconv/svnfexport/sync_commit_trunk.sh:
	  Sync the rest of the committed svnfexport data to more closely
	  match the current state of the reworked process.

2019-05-26 23:47  starseeker

	* [r73190] misc/repoconv/svnfexport/common_structs.h,
	  misc/repoconv/svnfexport/svnfexport.cxx,
	  misc/repoconv/svnfexport/svnfexport_git.cxx:
	  Will need an actual repo checkout for this form of the tree
	  rebuild.

2019-05-26 23:44  starseeker

	* [r73189] misc/repoconv/svnfexport/custom/sync_commit.sh,
	  misc/repoconv/svnfexport/custom/sync_commit_trunk.sh:
	  Start tweaking sync scripts for new setup.

2019-05-26 19:35  starseeker

	* [r73188] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  Only do move+edit commits on the files that are both moved and
	  edited - if a file in the commit is just moved, let the regular
	  commit handle it.

2019-05-26 16:37  starseeker

	* [r73187] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  move_only_commit may not actually generate a file - provide a
	  return value accordingly and use it.

2019-05-26 16:23  starseeker

	* [r73186] misc/repoconv/svnfexport/common_structs.h:
	  whoops - rev, not revision_number

2019-05-26 16:21  starseeker

	* [r73185] misc/repoconv/svnfexport/common_structs.h:
	  dmtogl was dmtogl-branch

2019-05-26 16:19  starseeker

	* [r73184] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  Should be able to handle this with the custom override mechanism.

2019-05-25 19:37  starseeker

	* [r73183] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  R requires the path be current in the tree - try a D followed by
	  an M for the renaming operation.

2019-05-25 14:36  starseeker

	* [r73182] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  Unless we have a fallback tree build, a failure to apply should
	  be fatal.

2019-05-25 12:46  starseeker

	* [r73181] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  More work on the early branch commits.

2019-05-25 00:53  starseeker

	* [r73180] misc/repoconv/svnfexport/svnfexport.cxx:
	  Run the new initial sync files

2019-05-25 00:45  starseeker

	* [r73179] misc/repoconv/svnfexport/custom/r29886_branches.fi:
	  VendorARL branch isn't in cvs2git, but commit appears to be - add
	  branch

2019-05-25 00:33  starseeker

	* [r73178] misc/repoconv/svnfexport/custom/r29886_tags.fi:
	  cvs2git didn't make most of the tags - it did branches instead.
	  Add tags as well.

2019-05-24 21:08  starseeker

	* [r73177] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_surf.cpp:
	  Getting closer. Curved edges on surfaces curved in more than one
	  dimension look problematic - the edge splitting doesn't know
	  about finer splitting of the surface driven by the other
	  dimension's curvature, and we're ending up with coarse edge
	  curves when we need finer ones. Not sure yet how to approach -
	  maybe some sort of adjacent face characterization during edge
	  processing?

2019-05-24 18:44  starseeker

	* [r73176] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_surf.cpp:
	  Start experimenting with a more 'edge aware' surface point
	  generation. Not ready for primetime yet, but looking promising.

2019-05-24 17:17  starseeker

	* [r73175] src/libbrep/cdt_surf.cpp:
	  Add some graphical comments to help make it more apparent what
	  the various breakdowns of the surfaces are doing.

2019-05-24 14:53  starseeker

	* [r73174] src/libbrep/cdt.cpp:
	  Report the face with the issue. Looks like the surface point
	  generation needs to be more aware of what's going on on the edges
	  so it can be sure to generate enough points for the tessellation
	  to not end up incorporating three edge points into a face.

2019-05-24 14:41  starseeker

	* [r73173] src/libbrep/cdt.cpp:
	  refactor the normal check

2019-05-24 14:14  starseeker

	* [r73172] src/libbrep/cdt.cpp:
	  Check normals on triangles - still have some problems.

2019-05-24 13:38  starseeker

	* [r73171] src/libbrep/cdt.cpp:
	  If we're getting odd answers from some faces during normal
	  averaging, favor plane normals if we have them.

2019-05-24 12:43  starseeker

	* [r73170] src/libbrep/cdt.cpp:
	  Use the minimum edge segment length when deciding if triangles
	  have a small enough area to be considered degenerate.

2019-05-24 12:34  starseeker

	* [r73169] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_surf.cpp, src/libbrep/cdt_util.cpp:
	  Stash the min and max edge lengths per face

2019-05-24 11:20  starseeker

	* [r73168] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  we added a new cvs branch

2019-05-24 02:03  starseeker

	* [r73167] misc/repoconv/svnfexport/svnfexport.cxx,
	  misc/repoconv/svnfexport/svnfexport_git.cxx:
	  More branch delete mapping logic

2019-05-24 02:00  starseeker

	* [r73166]
	  misc/repoconv/svnfexport/custom/r29886_cjohnson_mac_hack.fi:
	  This seems to be legitimately missing from the cvs2git conversion
	  - add it.

2019-05-24 01:19  starseeker

	* [r73165] misc/repoconv/svn_git_cmp/svn_git_cmp.cxx:
	  Write git notes with svn revisions based on the message and
	  timestamp mappings.

2019-05-24 00:15  starseeker

	* [r73164] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  cvs2git and cvs2svn appear to have come up with different branch
	  names for some of the old branches - map. This isn't the full set
	  of maps, but its a start

2019-05-23 21:28  starseeker

	* [r73163] src/libbrep/cdt.cpp:
	  Don't involve any edge with a singular trim in the vertex normal
	  calculations.

2019-05-23 19:30  starseeker

	* [r73162] src/libbrep/cdt.cpp:
	  Make sure we initialize properly

2019-05-23 19:14  starseeker

	* [r73161] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_edge.cpp, src/libbrep/cdt_util.cpp:
	  Start refactoring vertex normal logic (not done yet)

2019-05-23 18:22  starseeker

	* [r73160] src/libbrep/cdt.cpp:
	  Don't bother copying if we can't work on this Brep successfully

2019-05-23 18:20  starseeker

	* [r73159] src/libbu/tests/CMakeLists.txt:
	  We should probably test the new initialization behavior with the
	  static version of the library as well as the dl version...

2019-05-23 13:43  starseeker

	* [r73158] src/libbrep/cdt.cpp:
	  Make a note to investigate more selective surface shrinking

2019-05-23 13:40  starseeker

	* [r73157] src/libged/brep.c, src/libged/ged_private.h,
	  src/libged/shape_recognition.cpp:
	  Expose the ability to shrink the surfaces of a brep (primarily
	  for debug plotting)

2019-05-23 13:34  starseeker

	* [r73156] src/libbrep/cdt.cpp:
	  Specify the example face in question

2019-05-23 13:30  starseeker

	* [r73155] src/libbrep/cdt_surf.cpp:
	  Comment out or tweak messages

2019-05-23 13:26  starseeker

	* [r73154] src/libbrep/cdt.cpp:
	  Explain why we're calling ShrinkSurfaces

2019-05-23 13:23  starseeker

	* [r73153] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_util.cpp:
	  Don't want to re-copy each time we refine, so stash once up front
	  and delete on destroy.

2019-05-23 13:17  starseeker

	* [r73152] src/libbrep/cdt.cpp:
	  We may need to manipulate the ON_Brep - work on a copy

2019-05-23 12:14  starseeker

	* [r73151] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  Revision number might be good...

2019-05-23 12:07  starseeker

	* [r73150] misc/repoconv/svnfexport/common_structs.h,
	  misc/repoconv/svnfexport/svnfexport.cxx,
	  misc/repoconv/svnfexport/svnfexport_git.cxx:
	  Not done yet, but start reworking the verify logic for the new
	  setup.

2019-05-23 07:32  brlcad

	* [r73149] BUGS:
	  inf rt bug when mged 'put' command is run on displayed geometry

2019-05-23 07:28  brlcad

	* [r73148] BUGS:
	  fixed rtedge overlay and occlusion examples, they need to use -F
	  instead of -o.

2019-05-23 07:10  brlcad

	* [r73147] src/tclscripts/util/CMakeLists.txt,
	  src/tclscripts/util/metastrength.tcl:
	  add the current (fifth) version of the 'metastrength' command as
	  a general utility for modifying metaball field strengths. works
	  in both mged and archrer (though archer doesn't currently load
	  the util dirctory. has options to clone the hierarchy or work
	  directly on the one specified. prints all field strength values
	  (including before and after if you change them). has options to
	  set or scale field strengths.

2019-05-23 06:40  brlcad

	* [r73146] src/tclscripts/util/regionstobots.tcl:
	  seems silly to remove every entry one at a time, just kill it and
	  recreate the group

2019-05-23 06:34  brlcad

	* [r73145] BUGS:
	  power5 regression failures are confirmed, icv's dpix support is
	  implemented without endianness consideration. it traces back to
	  Sue's original implementation of dpix-pix back in 1990. need to
	  write out dpix in big endian network form, read back to native,
	  like is one for geometry. note this isn't user visible as dpix
	  was never documented (or completed).

2019-05-23 04:32  brlcad

	* [r73144] src/other/gdal/port/cpl_port.h:
	  centos 7.6 linux is unhappy if locale.h and xlocale.h are both
	  included. need to be a different recipe, trying as secondary
	  alternative.

2019-05-23 02:20  starseeker

	* [r73143] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  branch_delete doesn't always mean we don't have a commit to
	  apply...

2019-05-23 02:07  starseeker

	* [r73142] misc/repoconv/svnfexport/svnfexport.cxx,
	  misc/repoconv/svnfexport/svnfexport_git.cxx:
	  Move completed fi files into a subdirectory

2019-05-23 01:57  starseeker

	* [r73141] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  tweaks

2019-05-23 01:17  starseeker

	* [r73140] misc/repoconv/svnfexport/svnfexport_svn.cxx:
	  the rev numbers won't match here...

2019-05-23 00:45  starseeker

	* [r73139] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  branch, not tag...

2019-05-23 00:31  starseeker

	* [r73138] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  Start working on stubbing in a handler for branch deletes

2019-05-22 21:30  starseeker

	* [r73137] src/libbrep/cdt.cpp:
	  Need more adjustment to the vert normal calculation logic

2019-05-22 19:42  starseeker

	* [r73136] src/libbrep/cdt.cpp:
	  Tighten the surfaces before we start the tessellation process

2019-05-22 18:59  starseeker

	* [r73135] src/libbrep/cdt.cpp, src/libbrep/cdt_surf.cpp:
	  checkpoint

2019-05-22 15:11  starseeker

	* [r73134] src/libbrep/cdt.cpp:
	  Remove a bit more loop depth, make some notes

2019-05-22 14:40  starseeker

	* [r73133] src/libbrep/cdt.cpp:
	  Reflect the use of edge information in the loop processing
	  function name

2019-05-22 14:38  starseeker

	* [r73132] src/libbrep/cdt.cpp, src/libbrep/cdt.h,
	  src/libbrep/cdt_surf.cpp:
	  Pass the edge segment length data to the surface point generator
	  (not using it yet.)

2019-05-22 14:17  starseeker

	* [r73131] src/libbrep/cdt.cpp:
	  Describe the various stages

2019-05-22 14:05  brlcad

	* [r73130] regress/repository.sh:
	  we're apparently down to 166 instances

2019-05-22 13:52  starseeker

	* [r73129] regress/rtwizard/m35_D_ref.pix:
	  Correct m35_D_ref pix file for new rtedge logic. Still can't
	  enable this by default since distcheck can result in multiple
	  rtwizard invocations stomping on each other, but in isolation it
	  should now work.

2019-05-22 13:46  starseeker

	* [r73128] regress/rtwizard/CMakeLists.txt,
	  regress/rtwizard/m35_A_ref.pix, regress/rtwizard/m35_B_ref.pix,
	  regress/rtwizard/m35_C_ref.pix, regress/rtwizard/m35_D_ref.pix,
	  regress/rtwizard/m35_E_ref.pix, regress/rtwizard/m35_F_ref.pix,
	  regress/rtwizard/m35_edge_only_color_ref.pix,
	  regress/rtwizard/m35_edge_only_ref.pix,
	  regress/rtwizard/m35_rtwiz.tar.bz2:
	  Dispense with the tar.bz file holding the reference images

2019-05-22 11:56  brlcad

	* [r73127] regress/CMakeLists.txt:
	  enable rtedge test now that it's passing

2019-05-22 11:39  brlcad

	* [r73126] regress/rtedge.ref4.pix.gz, regress/rtedge.ref5.pix.gz,
	  regress/rtedge.sh:
	  the last two rtedge tests now work, using -F instead of -o and
	  making sure to rm our output only once... also needed benchmark
	  flag to avoid off-by-1 lighting differences. references updated.

2019-05-22 02:21  brlcad

	* [r73125] doc/docbook/system/man1/rtedge.xml:
	  leave a note regarding the use of -o vs -F for overlay mode. it
	  would be great to make -o also work (perhaps by always going
	  through the framebuffer), but document the idiosyncracy for now.

2019-05-22 02:10  brlcad

	* [r73124] doc/docbook/system/man1/rtedge.xml:
	  rtedge's occlusion / overlay modes where it only blits specific
	  pixels requires a framebuffer, so use -F instead of -o. the last
	  two examples in particular also wouldn't have worked prior to
	  today's change due to read-only permissions. bug was introduced
	  in r56246, now covered by a test case.

2019-05-22 02:01  brlcad

	* [r73123] doc/docbook/system/man1/rtedge.xml:
	  these were confusing as heck the first few read throughs. the
	  description for mode 1 using IFF was even technically wrong.
	  reworded, given labels, and expanded slightly for hopefully a bit
	  more clarity.

2019-05-22 01:50  brlcad

	* [r73122] BUGS, NEWS, TODO:
	  fixed rtedge and, by extension, rtwizard bug when using occlusion
	  objects. if you specified a whole model and then some piece of
	  the model as the occlusion object, it would sometimes result in
	  edge pixels sometimes not getting drawn where the occlusion
	  objects were exposed.

2019-05-22 01:44  brlcad

	* [r73121] src/rt/viewedge.c:
	  this fixes an rtedge bug with occlusion objects.
	  
	  exposed by the m35 regression test, case D, regression
	  differences
	  were being caused due to occlusion objects being also in the main
	  geometry. when we were determining whether a given point was
	  occluding our main geometry, we were hitting that same geometry
	  and
	  finding it occluded (i.e., with itself).
	  
	  as this determination involved firing another ray at a different
	  instance with different partitioning, the points could be exactly
	  equal or within floating point fuzz or at a completely different
	  point
	  on the geometry if, for example, it were on a grazing edge. this
	  reliably (Mac and Windows) resulted in differences with the case
	  D
	  reference because it was also wrong.
	  
	  this difference in occlusion determination explains why different
	  platforms produced different output on some edges of occlusion
	  objects. the desired result when the geometry is in both sets is
	  to
	  treat it as simply exposed (unoccluded geometry) with edges
	  rendered.
	  
	  this fix makes an assumption that hit points within our typical
	  distance tolerance are, in fact, the same point and thus probably
	  the
	  same geometry. while this is not necessarily true as there could
	  be a
	  sub-tolerance-thin surface or overlapping geometry cases to
	  consider,
	  they are close enough to be considered coincident and avoid extra
	  processing. we could check and make sure the regions or regionIDs
	  are
	  also identical, but thus far that has not been demonstrated
	  necessary.

2019-05-21 20:43  starseeker

	* [r73120] src/libbrep/cdt.cpp, src/libbrep/cdt_edge.cpp,
	  src/libbrep/cdt_surf.cpp:
	  Try to be more selective about normal averaging

2019-05-21 20:22  brlcad

	* [r73119] regress/CMakeLists.txt:
	  exclude from regress until we get it fixed

2019-05-21 20:21  brlcad

	* [r73118] regress/CMakeLists.txt:
	  other build products to clean up after

2019-05-21 20:18  brlcad

	* [r73117] regress/rtedge.ref3.pix.gz, regress/rtedge.ref4.pix.gz,
	  regress/rtedge.ref5.pix.gz, regress/rtedge.sh:
	  add the remaining 3 rtedge manual page examples. note that cases
	  #4 and #5 currently FAIL. this is correct because those examples
	  are currently broken, not overlaying on an existing image.
	  (fbserv works though, so we could change the example by adding
	  additional steps).

2019-05-21 19:43  brlcad

	* [r73116] regress/rtedge.ref2.pix.gz, regress/rtedge.sh:
	  add the second manpage example as a test

2019-05-21 19:12  brlcad

	* [r73115] regress/rtedge.sh:
	  simplify

2019-05-21 19:08  brlcad

	* [r73114] regress/CMakeLists.txt, regress/rtedge.ref.pix.gz,
	  regress/rtedge.sh, regress/tgms/havoc.g.gz:
	  add initial framing for an rtedge regression test to check what
	  the manual page says should be working

2019-05-21 19:04  brlcad

	* [r73113] regress/library.sh:
	  support running from the build root

2019-05-21 18:56  starseeker

	* [r73112] src/libbrep/cdt.cpp:
	  Doh. Use the normals when defining the 2D trim points from a
	  singular trim.

2019-05-21 18:45  starseeker

	* [r73111] src/libbrep/CMakeLists.txt, src/libbrep/cdt.cpp,
	  src/libbrep/cdt.h, src/libbrep/cdt_closed_surf.cpp,
	  src/libbrep/cdt_edge.cpp, src/libbrep/cdt_surf.cpp,
	  src/libbrep/cdt_util.cpp:
	  Break the CDT logic out into topical files to make it a bit
	  easier to work with.

2019-05-21 18:31  brlcad

	* [r73110] regress/comgeom.sh:
	  reference PATH_TO_THIS instead of assuming we're in a regress dir

2019-05-21 18:03  brlcad

	* [r73109] TODO:
	  tags were removed, too much manual overhead

2019-05-21 17:44  starseeker

	* [r73108] src/libbrep/cdt.cpp:
	  propagate the state through the surface point routines... not
	  sure if we'll end up using this yet.

2019-05-21 16:51  brlcad

	* [r73107] NEWS, src/rt/do.c:
	  a long-standing source of usability and productivity issues, make
	  the rt tools no longer create images with 0444 (read-only)
	  permissions. renderings are rarely ver sacred immutable items
	  that took hours or days to render any more, so they can typically
	  be easily recreatd. this change does mean that we may want to
	  make rt require a flag to overwrite an existing complete
	  rendering, but rtedge wouldn't necessarily due to overlay
	  feature.

2019-05-21 16:31  brlcad

	* [r73106] TODO:
	  rtweight does centroids, not rtarea

2019-05-21 16:27  brlcad

	* [r73105] BUGS:
	  rtedge's manual page examples aren't working

2019-05-21 16:05  starseeker

	* [r73104] src/libbrep/cdt.cpp:
	  Not propagating info far enough...

2019-05-21 15:44  starseeker

	* [r73103] src/libbrep/cdt.cpp:
	  Pull singular vert normal lookup into function.

2019-05-21 14:28  brlcad

	* [r73102] src/tclscripts/lib/RtImage.tcl:
	  checkpoint some enabled debugging. looks like there's at least
	  one bug in here possibly affecting the edges begin drawn on the
	  colored occlusion objects, but the occlusion determination does
	  also seem wrong in viewedge.c

2019-05-21 13:39  brlcad

	* [r73101] BUGS:
	  debugged this for a few hours and isolated the behavior down to
	  occulsion object handling. appears to not occlude properly,
	  including the stored reference being wrong, and the failures are
	  just differences in platforms picking different pixels to
	  occlude. could be a different object ordering bug of some sort.
	  also noticed the -c set command is sensitive to how the oo= list
	  is quoted, ignoring the last object depending on how it's passed
	  -- this seems unrelated to the regress bug, but affects direct
	  testing comparisons.

2019-05-20 22:32  brlcad

	* [r73100] src/libbu/tc.c:
	  stray semi lost

2019-05-20 20:50  brlcad

	* [r73099] src/libbu/fgets.c:
	  make sure the stream is valid

2019-05-20 19:36  brlcad

	* [r73098] misc/batch-indent-region.el:
	  identify what each style line is doing, add more directives
	  specific to c++ code.

2019-05-20 19:00  brlcad

	* [r73097] include/bu/vls.h:
	  gah, stray comment char

2019-05-20 18:58  brlcad

	* [r73096] include/analyze.h, include/bg/chull.h, include/bg/obr.h,
	  include/bg/polygon.h, include/bg/spsr.h, include/bg/trimesh.h,
	  include/bn/anim.h, include/bn/dvec.h, include/bn/mat.h,
	  include/bn/plane.h, include/bn/plot3.h, include/bn/rand.h,
	  include/bn/sobol.h, include/bn/vector_x86.h, include/bnetwork.h,
	  include/brep/bbnode.h, include/brep/boolean.h,
	  include/brep/brnode.h, include/brep/cdt.h, include/brep/csg.h,
	  include/brep/curvetree.h, include/brep/defines.h,
	  include/brep/intersect.h, include/brep/pullback.h,
	  include/brep/ray.h, include/brep/surfacetree.h,
	  include/brep/util.h, include/bu/avs.h, include/bu/bitv.h,
	  include/bu/color.h, include/bu/cv.h, include/bu/file.h,
	  include/bu/hash.h, include/bu/list.h, include/bu/log.h,
	  include/bu/magic.h, include/bu/malloc.h, include/bu/observer.h,
	  include/bu/opt.h, include/bu/parallel.h, include/bu/parse.h,
	  include/bu/path.h, include/bu/redblack.h, include/bu/sort.h,
	  include/bu/str.h, include/bu/tc.h, include/bu/time.h,
	  include/bu/uuid.h, include/bu/vls.h, include/common.h,
	  include/dm.h, include/fb.h, include/ged/commands.h,
	  include/ged/debug.h, include/ged/objects.h, include/ged/view.h,
	  include/icv/colorspace.h, include/icv/defines.h,
	  include/icv/filters.h, include/libtermio.h, include/nmg.h,
	  include/pkg.h, include/rt/anim.h, include/rt/application.h,
	  include/rt/binunif.h, include/rt/boolweave.h, include/rt/calc.h,
	  include/rt/cmd.h, include/rt/comb.h, include/rt/db4.h,
	  include/rt/db_attr.h, include/rt/db_diff.h,
	  include/rt/db_fullpath.h, include/rt/db_internal.h,
	  include/rt/db_io.h, include/rt/defines.h, include/rt/directory.h,
	  include/rt/dspline.h, include/rt/hit.h, include/rt/mem.h,
	  include/rt/misc.h, include/rt/nmg.h, include/rt/nongeom.h,
	  include/rt/overlap.h, include/rt/pattern.h, include/rt/prep.h,
	  include/rt/primitives/annot.h, include/rt/primitives/arb8.h,
	  include/rt/primitives/bot.h, include/rt/primitives/brep.h,
	  include/rt/primitives/dsp.h, include/rt/primitives/ell.h,
	  include/rt/primitives/epa.h, include/rt/primitives/metaball.h,
	  include/rt/primitives/pg.h, include/rt/primitives/pipe.h,
	  include/rt/primitives/rhc.h, include/rt/primitives/rpc.h,
	  include/rt/primitives/sketch.h, include/rt/primitives/tgc.h,
	  include/rt/primitives/tor.h, include/rt/ray_partition.h,
	  include/rt/region.h, include/rt/rt_instance.h,
	  include/rt/search.h, include/rt/seg.h, include/rt/shoot.h,
	  include/rt/solid.h, include/rt/space_partition.h,
	  include/rt/timer.h, include/rt/tree.h, include/rt/view.h,
	  include/rt/vlist.h, include/rt/wdb.h, include/tclcad.h:
	  autoformat most of the headers for consistency using batch ws
	  indenting. emacs gets it wrong in a few places so this can't be
	  automated, but closer for clang-format or astyle.

2019-05-20 18:35  brlcad

	* [r73095] include/pc.h:
	  redundant, already has begin/end decls

2019-05-20 18:22  brlcad

	* [r73094] include/dm/dm-design.h:
	  missing semicolons

2019-05-20 14:48  brlcad

	* [r73093] misc/batch-indent-region.el:
	  don't indent inside extern "C" blocks

2019-05-20 06:25  brlcad

	* [r73092] src/libbg/QuickHull.cxx, src/libbg/bg_private.h,
	  src/libbg/chull.c, src/libbg/chull3d.cxx, src/libbg/clipper.cxx,
	  src/libbg/polygon.c, src/libbg/polygon_point_in.c,
	  src/libbg/polygon_triangulate.cxx, src/libbg/spsr.c,
	  src/libbg/tests/chull.c, src/libbg/tests/obr.c,
	  src/libbg/tests/polygon_triangulate.c, src/libbg/tri_ray.c,
	  src/libbg/trimesh.c, src/libbg/trimesh_isect.cxx,
	  src/libbg/util.c:
	  ws indent cleanup

2019-05-20 06:20  brlcad

	* [r73091] include/bn/vlist.h, src/libbn/clip.c, src/libbn/mat.c,
	  src/libbn/plane.c, src/libbn/plot3.c, src/libbn/str.c,
	  src/libbn/tabdata.c, src/libbn/tests/bntester.c,
	  src/libbn/tests/complex.c, src/libbn/tests/list.c,
	  src/libbn/tests/mat.c, src/libbn/tests/qmath.c,
	  src/libbn/tests/randsph.c, src/libbn/tests/sobolseq.c,
	  src/libbn/tests/tabdata.c, src/libbn/ulp.c,
	  src/libbn/vert_tree.c, src/libbn/vlist.c,
	  src/librt/primitives/annot/annot.c,
	  src/librt/primitives/sketch/sketch.c:
	  indent consistency cleanup, make the BN vlist macros require a
	  semicolon

2019-05-20 02:16  brlcad

	* [r73090] src/libbu/tc.c:
	  butchered this on edit. fix.

2019-05-20 02:08  brlcad

	* [r73089] src/libbu/b64.c, src/libbu/backtrace.c,
	  src/libbu/cmdhist.c, src/libbu/color.c, src/libbu/convert.c,
	  src/libbu/dir.c, src/libbu/escape.c, src/libbu/fchmod.c,
	  src/libbu/file.c, src/libbu/fnmatch.c, src/libbu/hook.c,
	  src/libbu/htond.c, src/libbu/malloc.c, src/libbu/mappedfile.c,
	  src/libbu/observer.c, src/libbu/parallel.c, src/libbu/parse.c,
	  src/libbu/path.c, src/libbu/path_normalize.c,
	  src/libbu/process.c, src/libbu/redblack.c, src/libbu/sort.c,
	  src/libbu/tc.c, src/libbu/tcllist.c, src/libbu/temp.c,
	  src/libbu/tests/badmagic.c, src/libbu/tests/basename.c,
	  src/libbu/tests/dirname.c, src/libbu/tests/encode.c,
	  src/libbu/tests/file.c, src/libbu/tests/hash.cpp,
	  src/libbu/tests/humanize_number.c, src/libbu/tests/mappedfile.c,
	  src/libbu/tests/opt.c, src/libbu/tests/semchk.cxx,
	  src/libbu/tests/sscanf.c, src/libbu/tests/str_isprint.c,
	  src/libbu/tests/vls_vprintf.c, src/libbu/thread.cpp,
	  src/libbu/units_humanize.c, src/libbu/vls.c,
	  src/libbu/vls_vprintf.c:
	  ws indent cleanup the whole dir. autoformatter wigs out without a
	  footer, so skip 'other' codes

2019-05-20 02:07  brlcad

	* [r73088] misc/batch-indent-region.el:
	  only tabify from beginning of line, not internal to lines

2019-05-18 16:29  d_rossberg

	* [r73087] src/libbu/semaphore.c:
	  quell gcc 8.3.0 compiler warning/error "ISO C90 forbids mixed
	  declarations and code"

2019-05-18 03:43  brlcad

	* [r73086] src/libbu/sha1.c, src/libbu/sha1.h:
	  add a footer, indent

2019-05-18 03:28  brlcad

	* [r73085] src/libbu/bitv.c:
	  don't leave stray semicolons, let the macros behave

2019-05-17 13:48  brlcad

	* [r73084] src/libbu/semaphore_register.cpp:
	  apply header, footer, and update ws indent

2019-05-17 13:47  brlcad

	* [r73083] sh/template.sh:
	  don't halt if it already has a header. might just need a footer.

2019-05-17 13:42  brlcad

	* [r73082] sh/header.sh:
	  turn off debugging

2019-05-17 13:41  brlcad

	* [r73081] sh/header.sh:
	  make sure we quote before echo so it doesn't expand '*' to a list
	  of files

2019-05-17 13:25  brlcad

	* [r73080] include/common.h:
	  no longer doing it the C-way so remove to avoid this getting
	  abused/used later

2019-05-17 13:23  brlcad

	* [r73079] src/libbu/init.c:
	  no longer used, switched to c++ initiailization to avoid having
	  to do platform-specific tricks

2019-05-17 04:36  brlcad

	* [r73078] include/analyze.h, include/bu/parallel.h,
	  include/common.h, include/photonmap.h, include/rt/defines.h,
	  include/rt/resource.h, src/adrt/librender/camera.c,
	  src/adrt/librender/camera.h, src/burst/paint.c,
	  src/gtools/beset/fitness.c, src/gtools/beset/fitness.h,
	  src/libanalyze/analyze_private.h, src/libanalyze/api.c,
	  src/libbn/noise.c, src/libbrep/PullbackCurve.cpp,
	  src/libbu/CMakeLists.txt, src/libbu/bu_init.cpp,
	  src/libbu/datetime.c, src/libbu/getcwd.c, src/libbu/hash.c,
	  src/libbu/init.c, src/libbu/list.c, src/libbu/malloc.c,
	  src/libbu/parallel.c, src/libbu/semaphore.c,
	  src/libbu/semaphore_register.cpp, src/libbu/thread.cpp,
	  src/libged/check/check_adj_air.c,
	  src/libged/check/check_exp_air.c, src/libged/check/check_gap.c,
	  src/libged/check/check_overlaps.c,
	  src/libged/check/check_unconf_air.c, src/libged/gqa.c,
	  src/liboptical/photonmap.c, src/librt/cache.c,
	  src/librt/db_open.c, src/librt/prep.c,
	  src/librt/primitives/brep/brep.cpp, src/librt/tree.c,
	  src/proc-db/pix2g.c, src/rt/worker.c:
	  Restore the new semaphore registration system, this time
	  utilizing a
	  different initialization method that should work universally
	  including
	  Windows. Now relies on C++ static object initialization and one
	  tiny
	  feature from C++11 to make semaphore registration parallel
	  threadsafe.
	  
	  This version now also cleans up the semaphore allocations when
	  done
	  too via destructor. All tests pass on Windows and Linux. Code
	  could
	  use a little cleanup, but looking well on the whole hilarity.

2019-05-16 22:26  starseeker

	* [r73077] src/libbrep/cdt.cpp:
	  Checkpoint. Brute force shoving of the necessary vertex
	  point/normal info to the place where we will need it. Needs to
	  make determination based on uv points and do this more cleanly.

2019-05-16 20:40  starseeker

	* [r73076] src/libbrep/cdt.cpp:
	  The problem faces in NIST2 correspond to instances of normals in
	  the opposite direction from the norm_mid. This looks like it is
	  probably due to the singular trims, which means we need to
	  bookkeep this somehow...

2019-05-16 18:06  brlcad

	* [r73075] doc/BRL-CAD.bib:
	  came across an old '92 paper from adam ross as a high school
	  student, used brl-cad to learn modeling and upgrade afas.

2019-05-16 07:08  brlcad

	* [r73074] doc/docbook/system/man1/burst.xml:
	  document the new help and quit commands

2019-05-16 06:32  brlcad

	* [r73073] src/burst/extern.h:
	  need to declare prntTrie for help command

2019-05-16 06:31  brlcad

	* [r73072] src/burst/trie.c:
	  unclear how levels are used, but don't let callers deref null if
	  a level is passed

2019-05-16 06:30  brlcad

	* [r73071] src/burst/ui.c:
	  implement basic help and quit commands for discovery.

2019-05-16 05:54  brlcad

	* [r73070] NEWS:
	  fixed burst crash case, dereferencing null.

2019-05-16 05:52  brlcad

	* [r73069] src/burst/burst.c:
	  prevent burst from crashing if provided no options, displays
	  usage. it's not clear what the intended behavior is supposed to
	  be now that there is no longer an interactive prompt, but the
	  tool doesn't seem to be in a usable or intuitive state.. made it
	  go into an interactive command mode if provided -p without a
	  file, but there doesn't seem to be built-in help or discovery
	  commands (which presumably were presented via text UI menu
	  previously). needs to be reconciled with the manual page.

2019-05-15 14:39  starseeker

	* [r73068] src/libbrep/cdt.cpp:
	  Saw a weird case where three edge points ended up triangulated
	  and non-degenerate in area, but the triangle ended up
	  perpendicular to the overall mesh in that area. Was topologically
	  closed, but that's not what we want if it can be avoided...

2019-05-15 14:31  starseeker

	* [r73067] src/libbrep/cdt.cpp:
	  Calculate the min/max edge polyline segment lengths of a face -
	  should be usable to get a sense of reasonable triangle edge
	  lengths for this face.

2019-05-15 02:09  starseeker

	* [r73066] misc/repoconv/audit_merges,
	  misc/repoconv/audit_merges/audit_merges.cxx:
	  Whether from limitations in the svnfexport parsing or the
	  original SVN data itself (or both), there are a fair number of
	  commits doing merge work (per the commit message) that aren't
	  getting a merge line in their git commit. Throw together a quick
	  and dirty audit tool to run on the commit files to give us a set
	  to check and (if appropriate) hand add the correct merge line.

2019-05-14 14:53  starseeker

	* [r73065] src/librt/tests/cache.cxx:
	  Make a note to see about removing the parallel throttling in the
	  rt cache testing via bu_debug ala the libbu semaphore unit test.

2019-05-14 14:39  starseeker

	* [r73064] src/rt/CMakeLists.txt:
	  Most of the rt programs use the same library list - fold it into
	  a variable

2019-05-13 21:31  starseeker

	* [r73063] src/libbrep/cdt.cpp:
	  better, but still not right...

2019-05-13 16:23  starseeker

	* [r73057] include/brep/cdt.h:
	  Missed a couple exports

2019-05-13 16:10  starseeker

	* [r73056] include/brep/cdt.h, src/libbrep/cdt.cpp,
	  src/libged/shape_recognition.cpp,
	  src/librt/primitives/brep/brep.cpp,
	  src/librt/primitives/brep/brep_debug.cpp:
	  Add extern and export pieces for MSVC, switch api to hiding C++
	  types

2019-05-13 15:27  starseeker

	* [r73055] src/libbu/tests/semchk.cxx:
	  This program shouldn't be needed long term, but note that to do
	  this right we actually need to be paying attention to
	  bu_semaphore_acquire...

2019-05-13 15:24  starseeker

	* [r73054] include/analyze.h, include/bu/parallel.h,
	  include/photonmap.h, include/rt/defines.h, include/rt/resource.h,
	  src/adrt/librender/camera.c, src/adrt/librender/camera.h,
	  src/burst/paint.c, src/gtools/beset/fitness.c,
	  src/gtools/beset/fitness.h, src/libanalyze/analyze_private.h,
	  src/libanalyze/api.c, src/libbn/noise.c,
	  src/libbrep/PullbackCurve.cpp, src/libbu/CMakeLists.txt,
	  src/libbu/datetime.c, src/libbu/getcwd.c, src/libbu/hash.c,
	  src/libbu/init.c, src/libbu/list.c, src/libbu/malloc.c,
	  src/libbu/parallel.c, src/libbu/semaphore.c,
	  src/libbu/semaphore_register.cpp,
	  src/libged/check/check_adj_air.c,
	  src/libged/check/check_exp_air.c, src/libged/check/check_gap.c,
	  src/libged/check/check_overlaps.c,
	  src/libged/check/check_unconf_air.c, src/libged/gqa.c,
	  src/liboptical/photonmap.c, src/librt/cache.c,
	  src/librt/db_open.c, src/librt/prep.c,
	  src/librt/primitives/brep/brep.cpp, src/librt/tree.c,
	  src/proc-db/pix2g.c, src/rt/worker.c:
	  This is a (hopefully temporary) revert of r73012, with some
	  rework as well (semchk tries to check all files not just headers
	  for semaphore definitions, PM and TIE semahpores have been
	  consolidated into the librt list). Once r73012 is working
	  reliably on Windows this should be reverted again to restore the
	  improved semaphore system.

2019-05-13 15:23  starseeker

	* [r73053] src/libbu/tests/semaphore.c:
	  Whoops, sucked in semaphore.c

2019-05-13 15:21  starseeker

	* [r73052] src/libbu/tests/semaphore.c, src/libbu/tests/semchk.cxx:
	  Add a little more information reporting to the semchk error
	  outputs

2019-05-13 14:57  starseeker

	* [r73051] include/brlcad_version.h.in:
	  ERRATA->AMEND

2019-05-13 14:48  brlcad

	* [r73050] HACKING:
	  generalize from errata to ammendments as we may update a release
	  posting for reasons other than fixing something, it's just a
	  small change of some sort. make the trigger point for ammendments
	  even more explicit as they should be minimized as much as
	  possible. this is because they cause a workflow outside of the
	  usual release process with a number of manual steps not well
	  documented (like uploading release notes with patch update
	  instructions). they're should not be required when the release
	  steps were not fully completed which includes tagging, upload,
	  and announcement among other steps.

2019-05-13 14:42  brlcad

	* [r73049] CMakeLists.txt:
	  use AMEND instead of ERRATA as the latter implies a mistake,
	  which may or may not be. additional release postings can be
	  provoked by some extrinsic rationale (e.g., antivirus signature
	  match or additional information in release notes or some run-time
	  warning, etc).

2019-05-13 13:09  starseeker

	* [r73048] HACKING:
	  Update HACKING description for errata release conventions.

2019-05-13 00:09  starseeker

	* [r73047] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  Start preparing to wire in the
	  generate-deleteall-and-rebuild-tree fallback as an automatic step
	  - not there yet, will need it eventually.

2019-05-12 11:49  starseeker

	* [r73046] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  Work harder to get the branch name up front

2019-05-12 03:11  starseeker

	* [r73045] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  set branch names, don't nuke rev_gsha1s.txt until we know we can.

2019-05-11 17:55  starseeker

	* [r73044] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  tweaks

2019-05-10 21:09  starseeker

	* [r73043] CMakeLists.txt, include/brlcad_version.h.in:
	  Make it easy to define an errata version of a release if needed.

2019-05-10 20:55  starseeker

	* [r73042] src/libbrep/cdt.cpp:
	  Try using within_dist for this threshold

2019-05-10 18:18  starseeker

	* [r73041] src/libbrep/cdt.cpp:
	  Tweaks

2019-05-10 16:06  starseeker

	* [r73040] src/libbrep/cdt.cpp:
	  checkpoint

2019-05-10 04:33  brlcad

	* [r73039] include/rt/geom.h:
	  we only have 3 bits to play with (8 bits total) before we'll need
	  to use to change the serialization format, possibly to add more
	  bit flags or otherwise make more space for future serialization
	  changes. thus, stub out the available bits and leave a note about
	  how to use the last bit.

2019-05-09 22:08  starseeker

	* [r73038] src/libbrep/cdt.cpp:
	  This definitely does something - not sure it's exactly what I
	  want yet though.

2019-05-09 19:48  starseeker

	* [r73037] src/libbrep/cdt.cpp:
	  use the sinfo struct to hold the uv mins and maxes as well

2019-05-09 19:29  starseeker

	* [r73036] src/libbrep/cdt.cpp:
	  Get a quick approximation of the 3D length of the surface UV
	  edges.

2019-05-09 17:38  starseeker

	* [r73035] src/libbrep/cdt.cpp:
	  Pass a container, not just the surface point, in anticipation of
	  needing more shared information.

2019-05-09 15:04  brlcad

	* [r73034] TODO:
	  consolidate items in context of BoT uv work

2019-05-09 14:57  brlcad

	* [r73033] src/librt/primitives/bot/bot.c,
	  src/librt/primitives/bot/g_bot_include.c:
	  rename all of the float/double XGLUE with bot_ prefix as they do
	  not need to be and should not be public API. this also aligns
	  with bottie_ as the alternative.

2019-05-09 14:51  brlcad

	* [r73032] src/librt/primitives/bot/bot.c,
	  src/librt/primitives/bot/g_bot_include.c:
	  doesn't need stp (we already unpacked the bot_specific), and
	  should be considered private API.

2019-05-09 11:45  starseeker

	* [r73031] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  Bail immediately if we try to write out an invalid rev->sha1 map
	  entry

2019-05-09 11:38  starseeker

	* [r73030] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  Probably still a unique svn id mapping to the branch creation,
	  actually...

2019-05-09 05:13  brlcad

	* [r73029] src/librt/primitives/bot/bot.c:
	  write uvs out to disk if we have them. still have plenty of bits
	  left in the flags bitmask to extend the bot structure forward-
	  and backwards-compatibly. will want to use the last bit as an
	  extension to a bitflag+nextmemorychunk.

2019-05-09 02:26  starseeker

	* [r73028] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  probably want to know about these branches too...

2019-05-08 22:56  starseeker

	* [r73027] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  Tags (even annotated ones) in git just point to a commit sha1, so
	  we can't add a note to the tag itself.

2019-05-08 20:19  n_reed

	* [r73026] src/tclscripts/checker/menu.tcl:
	  Remove validation check on overlaps file. In it's current form,
	  it's not helpful, and adds completely unacceptable overhead to
	  the file load (observed turning a < 1 second load of a tiny
	  64-pair overlaps file to >30 seconds).

2019-05-08 19:29  starseeker

	* [r73025] src/libbrep/cdt.cpp:
	  flatten if-else hierarchy to if-return

2019-05-08 11:15  starseeker

	* [r73024] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  More work on applying tags

2019-05-08 11:01  starseeker

	* [r73023] misc/repoconv/svnfexport/common_structs.h,
	  misc/repoconv/svnfexport/svnfexport_git.cxx:
	  This wasn't actually being used the way I originally thought -
	  simplify.

2019-05-08 06:23  brlcad

	* [r73022] include/rt/geom.h, src/libgcv/plugins/obj/obj_read.c:
	  specify a flag so we know to record it. also, make sure we handle
	  definitions that have uvs but not normals

2019-05-08 06:03  brlcad

	* [r73021] src/libgcv/plugins/obj/obj_read.c:
	  hook up the obj converter so it stores uv data

2019-05-08 06:02  brlcad

	* [r73020] include/rt/geom.h, include/wdb.h, src/libwdb/bot.c:
	  get a move on commits, stash uv texture coordinate data via new
	  mk_bot_w_normals_and_uvs() so api remains backwards compatible.

2019-05-08 05:58  brlcad

	* [r73019] src/libbg/polygon_triangulate.cxx:
	  missing array header

2019-05-08 00:37  starseeker

	* [r73018] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  copy paste typo

2019-05-07 15:38  starseeker

	* [r73017] include/common.h, src/libbu/init.c:
	  Don't know if this works, and it definitely doesn't attempt a
	  glib style solution to the VS2015 issue, but it should at least
	  compile.

2019-05-07 14:09  starseeker

	* [r73016] include/common.h:
	  Doesn't build - init.c doesn't seem to see the pragma and
	  produces a C2341 error. (Probably related - for some reason
	  'read' in the pragma is producing an "unexpected identifier
	  '_read'" warning, but not sure why since this is common to all
	  the online examples.) Beyond the build issue, we may have a
	  looming problem with VS2015 release builds (which we need)
	  breaking this mechanism, based on the glib project's experience
	  with this...

2019-05-07 13:08  starseeker

	* [r73015] src/libbu/CMakeLists.txt, src/librt/db_open.c:
	  Satisfy Wdeclaration-after-statement, turn off semchk

2019-05-07 11:52  starseeker

	* [r73014] misc/repoconv/svnfexport/custom/32046.fi,
	  misc/repoconv/svnfexport/custom/32314.fi,
	  misc/repoconv/svnfexport/custom/33115.fi,
	  misc/repoconv/svnfexport/custom/36053.fi,
	  misc/repoconv/svnfexport/custom/36631.fi,
	  misc/repoconv/svnfexport/custom/36633.fi,
	  misc/repoconv/svnfexport/custom/36843.fi,
	  misc/repoconv/svnfexport/custom/36941.fi,
	  misc/repoconv/svnfexport/custom/37277.fi,
	  misc/repoconv/svnfexport/svnfexport_git.cxx:
	  template info, not sha1 here...

2019-05-07 11:49  starseeker

	* [r73013] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  Empty branch delete commits will take slightly different handling
	  since they violate the one branch per commit rule. Don't forget
	  tags. Clear out any empty intermediate files for easier
	  inspection.

2019-05-07 09:00  brlcad

	* [r73012] TODO, include/analyze.h, include/bu/parallel.h,
	  include/photonmap.h, include/rt/defines.h, include/rt/resource.h,
	  src/adrt/librender/camera.c, src/adrt/librender/camera.h,
	  src/burst/paint.c, src/gtools/beset/fitness.c,
	  src/gtools/beset/fitness.h, src/libanalyze/analyze_private.h,
	  src/libanalyze/api.c, src/libbn/noise.c,
	  src/libbrep/PullbackCurve.cpp, src/libbu/CMakeLists.txt,
	  src/libbu/datetime.c, src/libbu/getcwd.c, src/libbu/hash.c,
	  src/libbu/init.c, src/libbu/list.c, src/libbu/malloc.c,
	  src/libbu/parallel.c, src/libbu/semaphore.c,
	  src/libbu/semaphore_register.cpp, src/libbu/tests/semaphore.c,
	  src/libged/check/check_adj_air.c,
	  src/libged/check/check_exp_air.c, src/libged/check/check_gap.c,
	  src/libged/check/check_overlaps.c,
	  src/libged/check/check_unconf_air.c, src/libged/gqa.c,
	  src/liboptical/photonmap.c, src/librt/cache.c,
	  src/librt/db_open.c, src/librt/prep.c,
	  src/librt/primitives/brep/brep.cpp, src/librt/tree.c,
	  src/proc-db/pix2g.c, src/rt/worker.c:
	  Overhaul how semaphores are specified.
	  
	  Instead of global defines that must be coordinated across library
	  and
	  app boundaries and which periodically resulted in subtle
	  mismatches or
	  worse, semaphores now get registered with libbu via a
	  bu_semaphore_register() call. Warrants rigorous parallelism
	  testing,
	  but all existing tests are currently passing.
	  
	  We maintain a global dictionary in LIBBU and request an integer
	  key
	  prior to bu_semaphore_acquire(). Consequence of this is no longer
	  needing to maintain a list of magic number values -- registration
	  it
	  for us. The caller mainains a handle to the semaphore, which also
	  allows for much finger-grained locking control. It also means we
	  can
	  now have locally registered semaphores. We only need to declare
	  publicly when there is usage across multiple libs or apps, or
	  because
	  of legacy/api desire to make it publicly available, etc.
	  
	  This fixes a long-standing "design bug". Intentional tradeoff
	  consideration: no longer need to specify a number or keep track
	  of the
	  'last', semaphore names do still have to be globally uniquely
	  named
	  and now get listed three times (extern .h decl, var .c def, and
	  .c/.cpp registration call) in order for the semaphore to be
	  globally
	  available and explicitly initialized. Small price to avoid future
	  catastrophy. Call pattern to bu_semaphore_acquire/release remain
	  unaffected.

2019-05-07 08:05  d_rossberg

	* [r73011] src/gtools/gex.cpp:
	  quell warning/error because of an ignored printf format flag
	  from the printf man page: If a precision is given with a numeric
	  conversion (d, i, o, u, x, and X), the 0 flag is ignored.

2019-05-06 14:26  starseeker

	* [r73010] src/libbu/tests/semchk.cxx:
	  forgot common.h (per regress-repository)

2019-05-06 13:03  starseeker

	* [r73009] misc/CMakeLists.txt, src/libbg/CMakeLists.txt:
	  list files for distcheck

2019-05-06 12:49  starseeker

	* [r73008] src/libbu/CMakeLists.txt, src/libbu/tests/semchk.cxx:
	  Ah, right - some versions of svn store .svn directories locally.
	  Skip them in the checking process.

2019-05-06 12:44  starseeker

	* [r73007] src/libbu/tests/semchk.cxx:
	  If we get a duplicate, report file locations so we can understand
	  what happened.

2019-05-06 03:34  starseeker

	* [r73006] src/libbu/CMakeLists.txt, src/libbu/tests/semchk.cxx:
	  Put a compile-time measure in place to guard against errors in
	  the *_SEM_* definitions used by bu_parallel such as the one I
	  introduced in 72600. I've almost made similar mistakes in the
	  past, and per Sean's 73001 fix the run-time results of getting
	  this wrong are potentially both subtle/quirky and very
	  problematic. This should make it much harder to mess up, and
	  semchk.cxx can be further enhanced if more checks are needed.

2019-05-06 03:11  brlcad

	* [r73005] include/bu/app.h, include/bu/parallel.h,
	  src/libbu/dir.c, src/libbu/getcwd.c, src/libbu/init.c:
	  we now have knowledge of the original working directory when the
	  application was started.

2019-05-05 21:43  starseeker

	* [r73004] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  Start using the .gitignore files hacked out of svn2git's
	  processing

2019-05-05 20:09  starseeker

	* [r73003] misc/repoconv/svnfexport/common_structs.h,
	  misc/repoconv/svnfexport/svnfexport.cxx,
	  misc/repoconv/svnfexport/svnfexport_git.cxx:
	  Hopefully this will be the last major refactor of this logic...
	  Setting things up to use broken out 'template' files which can be
	  hand edited, and in the case of the commit information allow use
	  of revision numbers and branch names which are converted
	  automatically at run time into sha1 strings. In principle this
	  should allow for the automation of the deleteall + fulltree
	  process currently being done manually on most revision validation
	  failures. We're getting more of those as we get towards more
	  modern commits with more advanced svn syncing, and it's too
	  time/labor intensive to keep having to do that manually. Also,
	  need to be able to 'replay' the full process with a minimum of
	  intervention if a problem is found in the early svn commits, so
	  hopefully this will allow that to happen cleanly. Some more work
	  to do and quite a bit more testing needed, but checkpointing as
	  most of the fundamental restructure should now be in place.

2019-05-05 05:30  brlcad

	* [r73002] src/gtools/gex.cpp:
	  add the ability to hexdump specific objects for diagnostic
	  debugging. adapted an old canonical (pd) hexing method for this
	  purpose.

2019-05-04 21:29  brlcad

	* [r73001] include/bu/parallel.h:
	  wonderful. looks like possibly the cause of the spurious
	  parallelism failures I was observing. it means the last semaphore
	  will be potentially unitialized/unallocated memory, which is
	  particularly catastrophic on optimized builds. this means bu_hash
	  semaphore locking is hozed, which affects even non-parallel usage
	  including ged 'select' command, drawing in archer, prep caching,
	  and anything that does a dirbuild. unit testing failed to catch
	  this because it uses BU_SEM_LAST too.

2019-05-04 20:53  starseeker

	* [r73000] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  build fixes

2019-05-04 15:19  starseeker

	* [r72999] misc/repoconv/svn2git/svn-fast-export/svn.cpp,
	  misc/repoconv/svn2git/svn2git_gitignore_files-r29886_to_r72245.tar.gz:
	  Have svn2git write out its .gitignore files if it thinks a
	  revision has them - will try to use these for svn prop-only
	  update commits - this way, we don't have to write our own parser.
	  Don't look much like the cvs .gitignore files, so I'm not really
	  sure how accurate these are, but probably good enough - once we
	  switch to git we can customize it going forward.

2019-05-04 04:39  brlcad

	* [r72998] TODO:
	  nirt issues

2019-05-04 04:37  brlcad

	* [r72997] CHANGES, include/ged/database.h, src/libdm/dm-rtgl.c,
	  src/libged/check/check.c, src/libged/joint.c, src/libged/nirt.c,
	  src/libged/preview.c, src/libged/rrt.c, src/libged/rt.c,
	  src/libged/rtcheck.c, src/libged/solids_on_ray.c,
	  src/libged/who.c, src/mged/cmd.c:
	  rename ged_count_tops() and ged_build_tops() to ged_who_argc()
	  and ged_who_argv() respectively as they have nothing to do with
	  tops

2019-05-04 04:24  brlcad

	* [r72996] src/libged/rt.c, src/libged/who.c:
	  move functions from rt.c to who.c as they have nothing to do with
	  prior and all to do with the latter.

2019-05-04 04:19  brlcad

	* [r72995] include/ged/database.h, src/libged/check/check.c,
	  src/libged/joint.c, src/libged/nirt.c, src/libged/preview.c,
	  src/libged/rrt.c, src/libged/rt.c, src/libged/rtcheck.c,
	  src/libged/solids_on_ray.c, src/mged/cmd.c:
	  first steps towards making embedded nirt behave -- noted several
	  bugs during user support, notably that you couldn't ask for help
	  or override the format. here, we at least recognize help and
	  propagate constness.

2019-05-04 04:03  brlcad

	* [r72994] src/libbu/CMakeLists.txt, src/libbu/init.c:
	  stub an init function for libbu with cautionary instructions.
	  this is really intended to be only used where the alternative is
	  manually adding an init function to all applications or every API
	  call. initial use case for this is in order to obtain the initial
	  working directory of applications.

2019-05-04 03:59  brlcad

	* [r72993] include/common.h:
	  include a general mechanism for defining a function that will get
	  run when a library is loaded. uses static struct constructor for
	  C++, an msvc declspec+pragma for msvc to put the function in the
	  .init section (.CRT), or gcc/llvm constructor attribute
	  elsewhere. these cause a function declared via the macro to run
	  before main() is invoked, so extreme caution will be needed to
	  not abuse this capability.

2019-05-04 02:09  starseeker

	* [r72992] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  Groan... the switch to sha1 usage broke some other features.
	  Start working on what will be needed for this. Once a verified
	  run through the commits is done, should be able to streamline the
	  iteration down somewhat.

2019-05-04 01:26  starseeker

	* [r72991] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  Start roughing out a routine to apply git notes with SVN revision
	  numbers automatically after each commit. This, combined with an
	  alias command, will be the key to being able to (relatively)
	  easily get specific SVN commits out of git.

2019-05-03 22:18  starseeker

	* [r72990] src/libbrep/cdt.cpp:
	  TODO - Need an extra check here.

2019-05-03 22:07  starseeker

	* [r72989] src/libbrep/cdt.cpp:
	  Don't want to bump all extra points off by the same offset - if
	  we get more than two on an edge, we're back in the collinearity
	  soup.

2019-05-03 22:03  starseeker

	* [r72988] src/libbrep/cdt.cpp:
	  need to plot this to make sure it's doing what is intended, but
	  try to be clear we're nudging out from the triangle center -
	  that's the safe direction to avoid introducing self-intersections
	  into the boundary polygon.

2019-05-03 21:51  starseeker

	* [r72987] src/libbrep/cdt.cpp:
	  Perturbation looks like it did the trick - in retrospect not
	  surprising as collinearity is apparently not handled by most of
	  the triangulation routines. May be able to go back to using only
	  poly2tri, but it really should be wrapped under the libbg api
	  either way.

2019-05-03 21:48  starseeker

	* [r72986] src/libbrep/cdt.cpp:
	  perturb the 2D points in the triangle face parameter space to
	  help the tessellation. NIST2 can now pass solidity. Remaining
	  NIST test cases with problems are 5 and Solid1.s in 7-10

2019-05-03 20:43  starseeker

	* [r72985] src/libbrep/cdt.cpp:
	  remove the triangles we are splitting from the active triangle
	  set, comment out some log messages. NIST2 still doesn't have the
	  right triangles, so missing something.

2019-05-03 20:14  starseeker

	* [r72984] src/libbrep/cdt.cpp:
	  Add the generated faces to tri_add

2019-05-03 18:59  starseeker

	* [r72983] doc/legal/embedded/CMakeLists.txt,
	  doc/legal/embedded/ear_clipping.txt,
	  doc/legal/embedded/earcut.txt, src/libbg/CMakeLists.txt,
	  src/libbg/earcut.hpp, src/libbg/polygon_ear_clipping.c,
	  src/libbg/polygon_triangulate.cxx, src/libbrep/cdt.cpp:
	  Replace the custom libbg ear clipping implementation with the
	  version from https://github.com/mapbox/earcut.hpp. Seems to have
	  better behavior, and (although I want to test this before
	  updating the header docs) may eliminate the need for the caller
	  to make sure of the polygon ordering in the input data set before
	  calling bg_polygon_triangulate. Sean mentioned the
	  nmg_triangulate_fu function, which is also something to look at,
	  but currently we're not using any libnmg data structures in libbg
	  and I'd prefer not to add that cognative and debugging overhead
	  right now...

2019-05-03 18:40  starseeker

	* [r72982] src/libbg/tests/polygon_triangulate.c:
	  Print out a bit of information about what was found.

2019-05-03 14:58  starseeker

	* [r72981] src/libbg/tests/polygon_triangulate.c:
	  Note which bg triangulation test is failing. Given the observed
	  failure case, need to put some thought into this. poly2tri should
	  be under this libbg API ideally, and need to see if there are
	  drop-ins that are more robust than the old libbg ear clipping
	  implementation.

2019-05-03 14:56  starseeker

	* [r72980] src/libbrep/cdt.cpp:
	  this will be throwaway, but might as well document it... tested
	  the libbg triangulate with the same case that got weird cdt
	  answers.

2019-05-03 14:27  starseeker

	* [r72979] src/libbg/tests/polygon_triangulate.c:
	  This case arose in a triangulation problem from the nurbs->bot
	  work on one of the NIST test cases. It's a polygon with 4 points,
	  but three are colinear due to coming from an edge. We need to
	  triangulate this such that we gt the two triangles which
	  incorporate all 4 points, but so far both poly2tri and libbg's
	  ear clipping don't like it.

2019-05-03 03:23  brlcad

	* [r72978] AUTHORS:
	  a one-line bug fix, but code change nonetheless. credit ali for
	  sf patch #524 leader line bug.

2019-05-03 00:15  starseeker

	* [r72977] misc/repoconv/svnfexport/svnfexport_git.cxx:
	  another special case branch fi file to deal with

2019-05-02 21:36  starseeker

	* [r72976] src/libbrep/cdt.cpp:
	  Add some debug plotting

2019-05-02 17:30  starseeker

	* [r72975] src/libbrep/cdt.cpp:
	  Run CDT on the polyline. Getting a couple odd face counts from
	  the CDT - needs more investigation.

2019-05-02 15:25  starseeker

	* [r72974] src/libbrep/cdt.cpp:
	  Stubbing in pieces of the polyline build

2019-05-02 14:56  starseeker

	* [r72973] src/libbrep/cdt.cpp:
	  Start setting up for the p2t face triangulation.

2019-05-02 14:37  starseeker

	* [r72972] src/libbrep/cdt.cpp:
	  Finding the points we need to add to specific edges

2019-05-02 13:47  starseeker

	* [r72971] src/libbrep/cdt.cpp:
	  Confirm we are finding triangles. The next step - the hard one -
	  is to identify the orphaned points relevant to each involved face
	  and building the polygon for p2t.

2019-05-02 13:29  starseeker

	* [r72970] src/libbrep/cdt.cpp:
	  Stub in a commented out check for too-close 3D points - not clear
	  yet if we'll need this, will require a larger test sample. Not a
	  factor in any of the NIST examples so far.

2019-05-01 21:59  starseeker

	* [r72969] src/libbrep/cdt.cpp:
	  checkpoint (non-working)

2019-05-01 20:17  starseeker

	* [r72968] src/libbrep/cdt.cpp:
	  Actually, we'll need both, because a degenerate triangle in one
	  face along an edge will pull in a non-degenerate triangle on the
	  other face. Need to handle both situations, so we'll probably
	  still need this anyway...

2019-05-01 20:11  starseeker

	* [r72967] src/libbrep/cdt.cpp:
	  Ideally, we should try to do this without reference to the edges
	  specifically, since it's possible this situation will arise out
	  in the middle of a surface as well...

2019-05-01 18:45  starseeker

	* [r72966] src/libbrep/cdt.cpp:
	  I think were going to need the brep_loop_points info for mesh
	  building - stash it.

2019-05-01 18:07  starseeker

	* [r72965] src/libbrep/cdt.cpp:
	  Discussion with Tim helped ID the problem - need to split
	  triangles more than once in some cases. Unfortunately, that's
	  going to complicate this logic a fair bit.

2019-04-30 21:03  starseeker

	* [r72964] src/libbrep/cdt.cpp:
	  This gets NIST #1, #3, #4 and 3 of the 7-10 solids generating a
	  solid output. Still have issues with #2 and #5 and 7-10 Solid 1

2019-04-30 20:29  brlcad

	* [r72963] NEWS:
	  per user request rtweight no longer truncates long pathnames

2019-04-30 19:07  brlcad

	* [r72962] src/rt/viewweight.c:
	  don't truncate path names in rtweight output as that makes them
	  useless for copy-paste workflows. pretty-printing is secondary to
	  utility. not truncating names was requested by users.

2019-04-30 18:34  starseeker

	* [r72961] src/libbrep/cdt.cpp:
	  tweak triangle count - not getting the right 3D points for the
	  new faces.

2019-04-30 18:16  starseeker

	* [r72960] src/libbrep/cdt.cpp:
	  checkpoint - still getting the new triangles wrong

2019-04-30 18:06  n_reed

	* [r72959] src/external/Creo/CMakeLists.txt:
	  Find new Unicode libraries to compile for Creo 4.0.

2019-04-30 16:50  brlcad

	* [r72958] src/libbrep/brep_except.h:
	  need <string> here with the header reshuffle

2019-04-30 14:00  starseeker

	* [r72957] src/libbrep/cdt.cpp:
	  If we don't want to discard the midpoint vertex on the degenerate
	  face(s) (and we don't, ideally) we'll need to split even if we
	  yank degenerate triangles on both sides of an edge.

2019-04-29 22:01  starseeker

	* [r72956] src/libbrep/cdt.cpp:
	  Use removal of zero area faces from the edge->face map to get a
	  sense of whether we need to split any faces or if we're good just
	  yanking the bad ones.

2019-04-29 21:42  starseeker

	* [r72955] src/libbrep/cdt.cpp:
	  Still should skip the trivially degenerate faces up front.

2019-04-29 21:31  starseeker

	* [r72954] src/libbrep/cdt.cpp:
	  This seems to be a tradeoff between lower triangle count vs more
	  extreme triangle shapes. Go with the lower count for now, but
	  this warrants more thinking.

2019-04-29 21:21  starseeker

	* [r72953] src/libbrep/cdt.cpp:
	  per face point maps (2d->3d is not unique across all faces).
	  Also, don't always have just one matching face on an edge in
	  degenerate situations - will have to handle it somehow.

2019-04-29 18:28  starseeker

	* [r72952] src/libbrep/cdt.cpp:
	  If this is being interpreted as the maximum allowable distance
	  for an edge, don't we want this to be clamped by a rel limit not
	  expanded?

2019-04-29 16:59  starseeker

	* [r72951] src/libbrep/cdt.cpp:
	  Get a bit fancier about the checking... don't want to make a line
	  off of a too-short edge.

2019-04-28 21:29  starseeker

	* [r72950] misc/repoconv/svnfexport/custom/checkout_dercs.sh:
	  skip both stepcode and step

2019-04-28 18:05  starseeker

	* [r72949] misc/repoconv/README:
	  Updates to readme. In particular, define a 'logb' command to give
	  us a git log commit history with only the commits specific to a
	  particular branch.

2019-04-28 15:36  d_rossberg

	* [r72948] src/librt/primitives/annot/annot.c:
	  applied the annot.c.patch from ali haydar
	  see https://sourceforge.net/p/brlcad/patches/524 "leader line
	  bug"
	  this a fix for the bug occuring on windows whrer the leader line
	  in the annotation is not drawn because the variable pt that holds
	  its coordinates to the vilst is not initialized

2019-04-26 22:03  starseeker

	* [r72947] src/libbrep/cdt.cpp:
	  checkpoint

2019-04-26 20:27  starseeker

	* [r72946] src/libbrep/cdt.cpp:
	  will have some work to do to get this right...

2019-04-26 19:56  starseeker

	* [r72945] src/libbrep/cdt.cpp:
	  flesh out what is needed here - just yanking them is actually the
	  right move if they're both degenerate (that's why it worked in
	  NIST1).

2019-04-26 19:48  starseeker

	* [r72944] src/libbrep/cdt.cpp:
	  If only one of the triangles on an edge has zero area, we can't
	  just yank it as that will create an unmated edge. We need to do
	  something more sophisticated - working on what.

2019-04-26 18:30  starseeker

	* [r72943] src/libbrep/cdt.cpp:
	  This looks like a symptom of some other problem...

2019-04-26 17:12  starseeker

	* [r72942] src/libbrep/cdt.cpp:
	  We're getting colinear (zero area) triangles along edges, which
	  was causing flipped edges. This may have unintended consequences
	  - we'll see - but ideally we don't want infinitesmally thin
	  triangles anyway...

2019-04-26 15:08  starseeker

	* [r72941] src/libbrep/cdt.cpp:
	  print more information about misoriented edges

2019-04-26 14:40  starseeker

	* [r72940] include/bg/trimesh.h:
	  spelling

2019-04-26 14:18  starseeker

	* [r72939] src/libbrep/cdt.cpp:
	  degen faces aren't the only problem - we'll need to check/report
	  on the others as well.

2019-04-26 14:11  starseeker

	* [r72938] src/libbrep/cdt.cpp:
	  Skip writing out faces that are degenerate when mapped into 3D
	  (they can be introduced by singular trims)

2019-04-26 13:54  starseeker

	* [r72937] src/libbrep/cdt.cpp:
	  use the face index not loop index when printing info, use the
	  pre-made vertex point instead of making another one.

2019-04-26 13:42  starseeker

	* [r72936] src/libbg/trimesh.c:
	  If we're storing face indices and not vertex indices in this
	  array, we don't want to offset it by 3

2019-04-26 13:30  starseeker

	* [r72935] src/libbrep/cdt.cpp:
	  fix indexing, but it looks like the degenerate faces return from
	  the trimesh function isn't recording what I thought it was.

2019-04-26 12:50  starseeker

	* [r72934] src/libbrep/cdt.cpp:
	  initialize for GCC

2019-04-25 23:29  starseeker

	* [r72933] src/libbrep/cdt.cpp:
	  Dump brep information about problematic points.

2019-04-25 23:00  starseeker

	* [r72932] src/libbrep/cdt.cpp:
	  print out info about degen faces triggering solid failures (not
	  using brep date yet).

2019-04-25 18:56  starseeker

	* [r72931] src/libbrep/cdt.cpp:
	  Replace w3dpnts push backs with wrapper function that also
	  stashes debugging info.

2019-04-25 18:32  starseeker

	* [r72930] src/libbrep/cdt.cpp:
	  don't pass the w3d containers now that we're passing the state.

2019-04-25 12:45  starseeker

	* [r72929] src/libbrep/cdt.cpp:
	  Start getting set up for adding origin information to points for
	  debugging purposes. Taking this in small chunks to try and avoid
	  breaking anything...

2019-04-25 12:43  starseeker

	* [r72928] src/librt/primitives/brep/brep_debug.cpp:
	  rename

2019-04-25 02:32  starseeker

	* [r72927] misc/repoconv/svnfexport/custom/checkout_dercs.sh:
	  stepcode, not step in src/other

2019-04-24 20:48  starseeker

	* [r72926] src/libbrep/cdt.cpp:
	  Forgot to flip this normal if the face is flipped

2019-04-24 13:56  starseeker

	* [r72925] src/librt/primitives/brep/brep_cdt.cpp,
	  src/librt/primitives/brep/brep_debug.cpp,
	  src/librt/primitives/brep/brep_local.h:
	  Put the librt cdt logic back to it's pre-watertight state to use
	  as a reference until we get the bugs shaken out of the new logic.

2019-04-24 13:43  starseeker

	* [r72924] src/librt/primitives/brep/brep.cpp:
	  Use tolerances and the solidity return code in rt_brep_tess. Now
	  rt_brep_tess should succeed only if it returns a correct output,
	  which is what we want. (Also means most facetize calls on brep
	  objects will currently fail, but working on that...)

2019-04-24 13:41  starseeker

	* [r72923] src/libged/brep.c, src/libged/ged_private.h,
	  src/libged/shape_recognition.cpp:
	  Use tolerances in the brep bot subcommand

2019-04-24 13:40  starseeker

	* [r72922] include/brep/cdt.h, src/libbrep/cdt.cpp:
	  Add tolerance functions, check solidity of mesh if we have all
	  faces tessellated and use that to guide the return code.

2019-04-23 22:30  starseeker

	* [r72921] src/libged/brep.c, src/libged/ged_private.h,
	  src/libged/shape_recognition.cpp,
	  src/librt/primitives/brep/brep.cpp:
	  This is a bit premature (tolerances are still ignored) but wire
	  up the brep CDT routine where facetize can get it. Since this has
	  to go through the NMG routines as well, add a bot subcommand to
	  brep that will let us get the direct output without having to add
	  the complication of staging through NMG containers.

2019-04-23 20:18  starseeker

	* [r72920] include/brep/cdt.h, src/libbrep/cdt.cpp,
	  src/librt/primitives/brep/brep_cdt.cpp:
	  Generate a BoT from the brep via the libbrep version of this
	  logic.

2019-04-23 18:57  starseeker

	* [r72919] src/libbrep/cdt.cpp:
	  Don't use avg of normals along edges - causes visual artifacts
	  when the edges are supposed to be sharp.

2019-04-23 00:27  starseeker

	* [r72918] misc/repoconv/svn_git_cmp/svn_git_cmp.cxx:
	  It looks like a lot of the 'Initial revision' commit timestamps
	  from cvs2svn are mapping to timestamps in the cvs2git commit log,
	  even though the messages are different. Probably worth checking
	  more closely, but tentatively assume that these indicate svn
	  revision mappings for those git commits.

2019-04-19 21:11  brlcad

	* [r72917] TODO:
	  something recently went wrong with mged command input, likely
	  memory corruption

2019-04-19 16:52  starseeker

	* [r72916] misc/repoconv/svnfexport/common_structs.h,
	  misc/repoconv/svnfexport/custom/sync_commit.sh,
	  misc/repoconv/svnfexport/custom/sync_commit_trunk.sh,
	  misc/repoconv/svnfexport/svnfexport_git.cxx:
	  Tweak diffing, verify all commits, stash some more utility script
	  logic.

2019-04-17 21:42  starseeker

	* [r72915] src/libbrep/cdt.cpp:
	  Try an experiment with only using average vertex normals if the
	  surface normals look weird. Still have some other problem, so
	  can't judge the success of this yet.

2019-04-17 19:13  starseeker

	* [r72914] src/libbrep/cdt.cpp:
	  Set some default tolerances - need better logic than this - and
	  get things plotting. It's looking like the normals trick (which
	  doesn't show in default BoT drawing) is counterproductive in most
	  instances for verts. Will need to use it much more sparingly
	  (i.e. only to override a surface that seems to have a all-up
	  wrong vertex normal...

2019-04-17 17:56  starseeker

	* [r72913] src/libbrep/cdt.cpp:
	  closer...

2019-04-17 14:02  starseeker

	* [r72912] src/libbu/color.c:
	  bu_color_to_rgb_ints was declared but apparently not implemented.
	  Implement it.

2019-04-17 13:59  starseeker

	* [r72911] include/brep/cdt.h, src/libbrep/cdt.cpp:
	  Start shifting vlist plotting logic

2019-04-16 20:37  starseeker

	* [r72910] src/libbrep/cdt.cpp:
	  per face logic will need to be a function, since we may want some
	  or all of the faces depending on the application.

2019-04-16 20:14  starseeker

	* [r72909] src/libbrep/cdt.cpp:
	  Start shifting portions of the main CDT logic to the new libbrep
	  function.

2019-04-16 08:34  d_rossberg

	* [r72908] include/bg/trimesh.h,
	  src/libbrep/libbrep_brep_tools.cpp:
	  DLL export declarations for the Windows version

2019-04-16 08:30  d_rossberg

	* [r72907] src/libbrep/BBNode.cpp, src/libbrep/BRNode.cpp:
	  MS Visual Studio 2013 requires the algorithm header for std::max

2019-04-15 14:45  starseeker

	* [r72906] src/libged/rtcheck.c:
	  initialize

2019-04-13 18:48  starseeker

	* [r72905] include/brep/cdt.h, src/libbrep/CMakeLists.txt,
	  src/libbrep/cdt.cpp:
	  Start working on moving the CDT logic to libbrep

2019-04-13 17:52  starseeker

	* [r72904] include/brep.h, include/brep/bbnode.h,
	  include/brep/brnode.h, include/brep/cdt.h,
	  include/brep/curvetree.h, include/brep/defines.h,
	  include/brep/pullback.h, include/brep/util.h,
	  src/libbrep/BBNode.cpp, src/libbrep/BRNode.cpp,
	  src/libbrep/PullbackCurve.cpp, src/libbrep/PullbackCurve.h,
	  src/libbrep/Subcurve.cpp, src/libbrep/Subsurface.cpp,
	  src/libbrep/boolean.cpp, src/libbrep/intersect.cpp,
	  src/libbrep/libbrep_brep_tools.h, src/libbrep/opennurbs_ext.cpp,
	  src/libbrep/px_event.cpp, src/libbrep/shape_recognition.cpp,
	  src/libbrep/shape_recognition.h,
	  src/libbrep/shape_recognition_planar.cpp,
	  src/libbrep/shape_recognition_util.cpp,
	  src/libbrep/ssx_event.cpp:
	  Move things around in the brep headers a bit so we aren't
	  including the toplevel brep.h everywhere in libbrep

2019-04-13 15:26  starseeker

	* [r72903] include/brep.h, include/brep/CMakeLists.txt,
	  include/brep/cdt.h:
	  Start thinking about a CDT api for libbrep - we're going to want
	  to move the main code for this out of librt.

2019-04-12 19:13  brlcad

	* [r72902] include/rt/mem.h, src/librt/memalloc.c:
	  remove unused functions, step towards removing outdated memory
	  pooling method

2019-04-12 19:11  brlcad

	* [r72901] CMakeLists.txt:
	  cmake 3.14 requires manually including for CheckSymbolExists

2019-04-12 18:30  starseeker

	* [r72900] src/libbg/trimesh_isect.cxx:
	  Plot the faces into overlay plot3 files so we can see what we're
	  getting.

2019-04-12 16:44  starseeker

	* [r72899] include/bg/trimesh.h, src/libbg/CMakeLists.txt,
	  src/libbg/trimesh_isect.cxx, src/libged/bot.c:
	  Stub in a framework to allow for experiments with finding
	  intersecting faces from two meshes.

2019-04-11 15:37  starseeker

	* [r72898] src/librt/primitives/brep/brep_cdt.cpp:
	  Reset triangle count, insert triangle points in opposite order if
	  the face is flipped. This gets the rcc working, but the NIST
	  examples still don't come out solid

2019-04-11 14:41  starseeker

	* [r72897] src/librt/primitives/brep/brep_cdt.cpp:
	  Any time we're getting a normal, pay attention to the face
	  flipping

2019-04-11 14:09  starseeker

	* [r72896] src/librt/primitives/brep/brep_cdt.cpp:
	  Closer - still getting incorrect face normals on one of the
	  cylinder faces

2019-04-10 23:47  starseeker

	* [r72895] src/libged/brep.c,
	  src/librt/primitives/brep/brep_cdt.cpp,
	  src/librt/primitives/brep/brep_debug.cpp,
	  src/librt/primitives/brep/brep_local.h:
	  Quick and dirty stub in of logic for working on getting a BoT out
	  of the CDT logic. Don't currently have normals for non-edge
	  points... need to fix that before this can work.

2019-04-10 21:20  starseeker

	* [r72894] src/librt/primitives/brep/brep_cdt.cpp:
	  Tweaks

2019-04-10 21:14  starseeker

	* [r72893] include/brep/defines.h,
	  src/librt/primitives/brep/brep_cdt.cpp:
	  Start working on what it will take to make a BoT out of this...

2019-04-10 19:10  starseeker

	* [r72892] src/librt/primitives/brep/brep_cdt.cpp:
	  Fix termination condition

2019-04-10 17:23  starseeker

	* [r72891] src/librt/primitives/brep/brep_cdt.cpp:
	  No output yet, but wire up CDT function to iterate over faces

2019-04-10 16:52  starseeker

	* [r72890] src/librt/CMakeLists.txt,
	  src/librt/primitives/brep/brep_cdt.cpp,
	  src/librt/primitives/brep/brep_cdt2.cpp:
	  Still have at least one crasher in the new logic, but clearly
	  won't need the separate cdt2 file for a whole new logic chain -
	  fold back in.

2019-04-10 16:31  starseeker

	* [r72889] src/librt/primitives/brep/brep_cdt.cpp:
	  Do the right flipping test on the 2D points, undo the subsequent
	  edge point flipping. Produces (visually at least) a closed
	  cylinder.

2019-04-10 13:43  starseeker

	* [r72888] src/librt/primitives/brep/brep_cdt.cpp:
	  Flip the edge points - better but still not everything

2019-04-10 13:05  starseeker

	* [r72887] src/librt/primitives/brep/brep_cdt.cpp:
	  Whoops, would help to actually record the new edge parameter
	  values...

2019-04-09 20:53  starseeker

	* [r72886] src/librt/primitives/brep/brep_cdt.cpp:
	  Start working on simultaneous processing of both trims with the
	  edge cranked in. Not working right now - doesn't converge
	  properly.

2019-04-09 16:58  starseeker

	* [r72885] src/librt/primitives/brep/brep_cdt.cpp:
	  Pass the edge through to getEdgePoints - setting up for
	  processing using it.

2019-04-09 16:58  n_reed

	* [r72884] src/external/Creo/creo-brl.h,
	  src/external/Creo/util.cpp:
	  Restore prior user-preferred behavior of naming solids using the
	  same parameters as for the containing regions. Results in foo.r
	  containing foo.s rather than foo.s being named after the creo
	  name.

2019-04-09 14:49  starseeker

	* [r72883] src/librt/primitives/brep/brep_cdt.cpp:
	  Consolidate duplicate logic

2019-04-09 14:41  starseeker

	* [r72882] include/brep/defines.h,
	  src/librt/primitives/brep/brep_cdt.cpp:
	  Stash a couple more values in the BrepTrimPoint and simplify the
	  list of parameters to edge point functions.

2019-04-09 14:19  starseeker

	* [r72881] src/librt/primitives/brep/brep_cdt.cpp:
	  Rather than setting up the BrepTrimPoint in the loop assembly,
	  create and stash it when we're doing the initial setup since we
	  already have the information.

2019-04-09 12:40  starseeker

	* [r72880] src/librt/primitives/brep/brep_cdt.cpp:
	  We aren't using info, so don't bother passing it around. Also
	  aren't using rt_points

2019-04-08 20:13  starseeker

	* [r72879] src/librt/primitives/brep/brep_cdt.cpp:
	  Doesn't look like singularity_points is in use

2019-04-08 20:07  starseeker

	* [r72878] src/librt/CMakeLists.txt,
	  src/librt/primitives/brep/brep_cdt.cpp,
	  src/librt/primitives/brep/brep_cdt2.cpp:
	  Split up for easer working

2019-04-08 16:04  starseeker

	* [r72877] src/librt/primitives/brep/brep_cdt.cpp:
	  The edge curve doesn't really have 2D points or normals... make a
	  stab at the 3d point and tangent portions of the logic.

2019-04-08 14:16  starseeker

	* [r72876] src/librt/primitives/brep/brep_cdt.cpp:
	  There will be some bookkeeping to do here...

2019-04-08 13:54  starseeker

	* [r72875] src/librt/primitives/brep/brep_cdt.cpp:
	  Use the tolerance container to hold and pass settings

2019-04-08 13:41  starseeker

	* [r72874] src/librt/primitives/brep/brep_cdt.cpp:
	  We're doing more work than we have to with these comparisons
	  broken out of the if test - if this logic winds up staying this
	  way we'll put it back.

2019-04-08 13:36  starseeker

	* [r72873] src/librt/primitives/brep/brep_cdt.cpp:
	  More refactoring

2019-04-08 13:04  starseeker

	* [r72872] src/librt/primitives/brep/brep_cdt.cpp:
	  Refactor getEdgePoints logic to make it clearer what steps are
	  unique to each if/then case

2019-04-08 01:26  starseeker

	* [r72871] misc/repoconv/svn_git_cmp,
	  misc/repoconv/svn_git_cmp/svn_git_cmp.cxx,
	  misc/repoconv/svn_git_cmp/svn_msgs.cxx:
	  Quick and dirty C++ to do mapping between svn commits and git
	  commits pre 29887 based on commit messages and timestamps. Just
	  over a thousand don't map due to non-uniqueness, and over a
	  hundred don't map at all (quite a few cvs2svn generated commits
	  in the latter, it looks like...) but on the whole a surprisingly
	  good result. The successful mappings will directly feed note
	  commits to the cvs2git repo to match up SVN revision numbers to
	  git commits, and the failed commits are listed for inspection.

2019-04-06 19:08  starseeker

	* [r72870] src/librt/primitives/brep/brep_cdt.cpp:
	  GetSurfaceSize is also using ControlPolygonLength under the hood.

2019-04-06 18:49  starseeker

	* [r72869] src/librt/primitives/brep/brep_cdt.cpp:
	  Add some notes on general logic flows

2019-04-06 14:29  starseeker

	* [r72868] src/librt/primitives/brep/brep_cdt.cpp:
	  Starting the process of breaking down/understanding existing CDT
	  logic

2019-04-05 21:01  starseeker

	* [r72867] src/librt/primitives/brep/brep_cdt.cpp:
	  Checkpoint. This will be an experiment with edge point sampling
	  based on local delta of point distances between the parent and
	  the proposed split.

2019-04-05 15:39  starseeker

	* [r72866] CMakeLists.txt, misc/CMake/NSIS.template.in,
	  misc/CMake/NSIS_silent.template.in:
	  Good catch Keith - forgot to fix the doc paths in the NSIS
	  installer

2019-04-04 21:45  brlcad

	* [r72865] NEWS, db/CMakeLists.txt, db/bearing.asc:
	  add the pretty ball bearing model

2019-04-04 20:24  brlcad

	* [r72864] TODO:
	  need .glb support

2019-04-04 20:19  brlcad

	* [r72863] TODO:
	  group tasks related to bounding boxes, reframe need to calculate
	  different tighter boxes by default, and options for different
	  types of boxes

2019-04-04 18:04  starseeker

	* [r72862] src/librt/primitives/brep/brep_cdt.cpp,
	  src/librt/primitives/brep/brep_debug.cpp,
	  src/librt/primitives/brep/brep_local.h:
	  Stub in a function for doing cdt plotting of the whole brep,
	  rather than one face. Right now just calls face plotting, but
	  staging this for some further experimental work.

2019-04-04 17:29  n_reed

	* [r72861] src/external/Creo/util.cpp:
	  expand character set replaced in names to match old pctc java
	  program to avoid problems combinining new and old conversions

2019-04-04 15:31  n_reed

	* [r72860] doc/README.Windows:
	  document special Visual Studio 2015 installation procedure

2019-04-04 13:12  starseeker

	* [r72859] ., CHANGES, ChangeLog, NEWS, README, TODO, bench, db,
	  doc, doc/STRATEGY, doc/docbook/articles, doc/docbook/books,
	  doc/docbook/lessons, include, include/conf/PATCH,
	  misc/debian/changelog, misc/macosx/Resources/ReadMe.rtfd/TXT.rtf,
	  misc/macosx/Resources/Welcome.rtfd/TXT.rtf, regress,
	  regress/repository.sh, src/libbu, src/libged/polyclip.cpp,
	  src/other, src/tclscripts/archer:
	  Merge in RELEASE changes, bump version numbers

2019-04-04 02:45  brlcad

	* [r72854] AUTHORS:
	  note sf patch 521 ( Fixes Annotation module ) from chetan shinde
	  applied in r72853 that fixes the annotation primitive.

2019-04-04 01:51  gabbar1947

	* [r72853] src/libged/typein.c:
	  MAJOR_TYPE value initialized in annot_in

2019-04-03 20:33  brlcad

	* [r72852] src/librt/db_tree.c:
	  prevent a crash when calling adjust with a bad tree. tp may end
	  up null at any point in here. fixed newlines too.

2019-04-03 19:41  brlcad

	* [r72851] BUGS:
	  reword, say slashes for searchability

2019-04-03 19:39  brlcad

	* [r72850] BUGS:
	  having slashes in names works at the db I/O layer, but does not
	  work at the shell layer right now at all. either need to prevent
	  slashes in names on creation or have a reliable quoting mechanism
	  that handles them correctly.

2019-04-03 18:45  brlcad

	* [r72849] doc/docbook/system/mann/clone.xml, src/libged/clone.c:
	  note that the -c option may be specified multiple times to
	  increment other numbers, not just the second.

2019-04-03 15:32  brlcad

	* [r72848] src/libged/clone.c:
	  redo clone usage statement to separate the main modes of
	  operation and structure accordingly (matching the new manual
	  page). reword for clarity and mention defaults.

2019-04-03 15:19  n_reed

	* [r72847] src/external/Creo/util.cpp:
	  Don't need to insert a dash separator before the number used to
	  make a name unique, and doing so in a loop inserted a variable
	  number of dashes.

2019-04-02 22:42  brlcad

	* [r72846] NEWS:
	  document the clone command

2019-04-02 22:41  brlcad

	* [r72845] doc/docbook/system/mann/clone.xml:
	  sort the options based on readability and likely frequency of use

2019-04-02 22:39  brlcad

	* [r72844] doc/docbook/system/mann/CMakeLists.txt,
	  doc/docbook/system/mann/clone.xml:
	  add an initial manual page for the clone command, based on the
	  current usage synopsis.

2019-04-02 18:24  brlcad

	* [r72842] src/libged/clone.c:
	  remove clone's -v version option. misleading, not accurate, and
	  not a useful pattern that extends to most commands. per-command
	  versioning is a topic for later.

2019-04-02 18:06  brlcad

	* [r72841] src/libged/clone.c:
	  comment cleanup, add note about prefix-number bug

2019-04-02 17:58  starseeker

	* [r72840] src/libbu/num.c:
	  clang static analyzer - value stored is never read

2019-04-02 17:15  n_reed

	* [r72839] src/external/Creo/util.cpp:
	  Exchange ad hoc character replacement and condensing in part
	  names with the vls routine made for that purpose. Expand the
	  range of characters preserved, in particular "_", to return
	  behavior closer to pre r69400.

