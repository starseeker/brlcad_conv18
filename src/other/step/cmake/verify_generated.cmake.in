# Inherit the parent CMake setting
set(DEBUGGING_GENERATED_SOURCES @DEBUGGING_GENERATED_SOURCES@)

# Include the file the provides the baseline against which
# current files will be compared
if(NOT DEBUGGING_GENERATED_SOURCES)

  include(@BASELINE_INFORMATION_FILE@)

  # Assume we're OK until proven otherwise
  set(srcs_pass 1)

  # Define a variety of convenience routines
  include(@PROJECT_CMAKE_DIR@/Generated_Source_Utils.cmake)

  # Individually verify all of the files in question.
  set(filelist "@VERIFY_FILELIST@")
  foreach(filename ${filelist})
    if(NOT EXISTS @CMAKE_CURRENT_SOURCE_DIR@/${filename})
      message(FATAL_ERROR "Attempted to verify non-existant file ${filename}")
    endif(NOT EXISTS @CMAKE_CURRENT_SOURCE_DIR@/${filename})
    FILEVAR(${filename} filevar)
    if(NOT baseline_${filevar}_md5)
      message(FATAL_ERROR "No baseline MD5 available for ${filename} - ${filevar} is not defined.")
    endif(NOT baseline_${filevar}_md5)
    MD5(@CMAKE_CURRENT_SOURCE_DIR@/${filename} ${filevar}_md5)
    if(NOT "${${filevar}_md5}" STREQUAL "${baseline_${filevar}_md5}")
      message("\n${filename} has been modified: baseline md5 hash is ${baseline_${filevar}_md5} and current hash is ${${filevar}_md5}.\n")
      set(srcs_pass 0)
    endif(NOT "${${filevar}_md5}" STREQUAL "${baseline_${filevar}_md5}")
  endforeach(filename ${filelist})
  if(NOT srcs_pass)
    message(FATAL_ERROR "Generated sources have been modified.  These files should never be modified directly except when debugging faulty output from the generators - changes to lexer and parser logic should be made to the generator input files.  If this is a debugging situation, set the variable DEBUGGING_GENERATED_SOURCES to ON during the CMake configure.")
  endif(NOT srcs_pass)

endif(NOT DEBUGGING_GENERATED_SOURCES)

# Local Variables:
# tab-width: 8
# mode: cmake
# indent-tabs-mode: t
# End:
# ex: shiftwidth=2 tabstop=8
