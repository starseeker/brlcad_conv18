

Terminals which are not used:

   TOK_CONTEXT
   TOK_END_CONTEXT
   TOK_END_MODEL
   TOK_MODEL


Conflict in state 270 between rule 311 and token TOK_DOT resolved as shift.
Conflict in state 270 between rule 311 and token TOK_BACKSLASH resolved as shift.
Conflict in state 270 between rule 311 and token TOK_LEFT_BRACKET resolved as shift.
Conflict in state 271 between rule 310 and token TOK_DOT resolved as shift.
Conflict in state 271 between rule 310 and token TOK_BACKSLASH resolved as shift.
Conflict in state 271 between rule 310 and token TOK_LEFT_BRACKET resolved as shift.
Conflict in state 272 between rule 309 and token TOK_DOT resolved as shift.
Conflict in state 272 between rule 309 and token TOK_BACKSLASH resolved as shift.
Conflict in state 272 between rule 309 and token TOK_LEFT_BRACKET resolved as shift.
Conflict in state 398 between rule 97 and token TOK_EQUAL resolved as reduce.
Conflict in state 398 between rule 97 and token TOK_GREATER_EQUAL resolved as reduce.
Conflict in state 398 between rule 97 and token TOK_GREATER_THAN resolved as reduce.
Conflict in state 398 between rule 97 and token TOK_IN resolved as reduce.
Conflict in state 398 between rule 97 and token TOK_INST_EQUAL resolved as reduce.
Conflict in state 398 between rule 97 and token TOK_INST_NOT_EQUAL resolved as reduce.
Conflict in state 398 between rule 97 and token TOK_LESS_EQUAL resolved as reduce.
Conflict in state 398 between rule 97 and token TOK_LESS_THAN resolved as reduce.
Conflict in state 398 between rule 97 and token TOK_LIKE resolved as reduce.
Conflict in state 398 between rule 97 and token TOK_NOT_EQUAL resolved as reduce.
Conflict in state 398 between rule 97 and token TOK_OR resolved as shift.
Conflict in state 398 between rule 97 and token TOK_XOR resolved as shift.
Conflict in state 398 between rule 97 and token TOK_AND resolved as shift.
Conflict in state 399 between rule 99 and token TOK_EQUAL resolved as reduce.
Conflict in state 399 between rule 99 and token TOK_GREATER_EQUAL resolved as reduce.
Conflict in state 399 between rule 99 and token TOK_GREATER_THAN resolved as reduce.
Conflict in state 399 between rule 99 and token TOK_IN resolved as reduce.
Conflict in state 399 between rule 99 and token TOK_INST_EQUAL resolved as reduce.
Conflict in state 399 between rule 99 and token TOK_INST_NOT_EQUAL resolved as reduce.
Conflict in state 399 between rule 99 and token TOK_LESS_EQUAL resolved as reduce.
Conflict in state 399 between rule 99 and token TOK_LESS_THAN resolved as reduce.
Conflict in state 399 between rule 99 and token TOK_LIKE resolved as reduce.
Conflict in state 399 between rule 99 and token TOK_NOT_EQUAL resolved as reduce.
Conflict in state 399 between rule 99 and token TOK_OR resolved as shift.
Conflict in state 399 between rule 99 and token TOK_XOR resolved as shift.
Conflict in state 399 between rule 99 and token TOK_AND resolved as shift.
Conflict in state 400 between rule 96 and token TOK_EQUAL resolved as reduce.
Conflict in state 400 between rule 96 and token TOK_GREATER_EQUAL resolved as reduce.
Conflict in state 400 between rule 96 and token TOK_GREATER_THAN resolved as reduce.
Conflict in state 400 between rule 96 and token TOK_IN resolved as reduce.
Conflict in state 400 between rule 96 and token TOK_INST_EQUAL resolved as reduce.
Conflict in state 400 between rule 96 and token TOK_INST_NOT_EQUAL resolved as reduce.
Conflict in state 400 between rule 96 and token TOK_LESS_EQUAL resolved as reduce.
Conflict in state 400 between rule 96 and token TOK_LESS_THAN resolved as reduce.
Conflict in state 400 between rule 96 and token TOK_LIKE resolved as reduce.
Conflict in state 400 between rule 96 and token TOK_NOT_EQUAL resolved as reduce.
Conflict in state 400 between rule 96 and token TOK_OR resolved as shift.
Conflict in state 400 between rule 96 and token TOK_XOR resolved as shift.
Conflict in state 400 between rule 96 and token TOK_AND resolved as shift.
Conflict in state 401 between rule 103 and token TOK_EQUAL resolved as reduce.
Conflict in state 401 between rule 103 and token TOK_GREATER_EQUAL resolved as reduce.
Conflict in state 401 between rule 103 and token TOK_GREATER_THAN resolved as reduce.
Conflict in state 401 between rule 103 and token TOK_IN resolved as reduce.
Conflict in state 401 between rule 103 and token TOK_INST_EQUAL resolved as reduce.
Conflict in state 401 between rule 103 and token TOK_INST_NOT_EQUAL resolved as reduce.
Conflict in state 401 between rule 103 and token TOK_LESS_EQUAL resolved as reduce.
Conflict in state 401 between rule 103 and token TOK_LESS_THAN resolved as reduce.
Conflict in state 401 between rule 103 and token TOK_LIKE resolved as reduce.
Conflict in state 401 between rule 103 and token TOK_NOT_EQUAL resolved as reduce.
Conflict in state 401 between rule 103 and token TOK_OR resolved as shift.
Conflict in state 401 between rule 103 and token TOK_XOR resolved as shift.
Conflict in state 401 between rule 103 and token TOK_AND resolved as shift.
Conflict in state 402 between rule 101 and token TOK_EQUAL resolved as reduce.
Conflict in state 402 between rule 101 and token TOK_GREATER_EQUAL resolved as reduce.
Conflict in state 402 between rule 101 and token TOK_GREATER_THAN resolved as reduce.
Conflict in state 402 between rule 101 and token TOK_IN resolved as reduce.
Conflict in state 402 between rule 101 and token TOK_INST_EQUAL resolved as reduce.
Conflict in state 402 between rule 101 and token TOK_INST_NOT_EQUAL resolved as reduce.
Conflict in state 402 between rule 101 and token TOK_LESS_EQUAL resolved as reduce.
Conflict in state 402 between rule 101 and token TOK_LESS_THAN resolved as reduce.
Conflict in state 402 between rule 101 and token TOK_LIKE resolved as reduce.
Conflict in state 402 between rule 101 and token TOK_NOT_EQUAL resolved as reduce.
Conflict in state 402 between rule 101 and token TOK_OR resolved as shift.
Conflict in state 402 between rule 101 and token TOK_XOR resolved as shift.
Conflict in state 402 between rule 101 and token TOK_AND resolved as shift.
Conflict in state 403 between rule 102 and token TOK_EQUAL resolved as reduce.
Conflict in state 403 between rule 102 and token TOK_GREATER_EQUAL resolved as reduce.
Conflict in state 403 between rule 102 and token TOK_GREATER_THAN resolved as reduce.
Conflict in state 403 between rule 102 and token TOK_IN resolved as reduce.
Conflict in state 403 between rule 102 and token TOK_INST_EQUAL resolved as reduce.
Conflict in state 403 between rule 102 and token TOK_INST_NOT_EQUAL resolved as reduce.
Conflict in state 403 between rule 102 and token TOK_LESS_EQUAL resolved as reduce.
Conflict in state 403 between rule 102 and token TOK_LESS_THAN resolved as reduce.
Conflict in state 403 between rule 102 and token TOK_LIKE resolved as reduce.
Conflict in state 403 between rule 102 and token TOK_NOT_EQUAL resolved as reduce.
Conflict in state 403 between rule 102 and token TOK_OR resolved as shift.
Conflict in state 403 between rule 102 and token TOK_XOR resolved as shift.
Conflict in state 403 between rule 102 and token TOK_AND resolved as shift.
Conflict in state 404 between rule 98 and token TOK_EQUAL resolved as reduce.
Conflict in state 404 between rule 98 and token TOK_GREATER_EQUAL resolved as reduce.
Conflict in state 404 between rule 98 and token TOK_GREATER_THAN resolved as reduce.
Conflict in state 404 between rule 98 and token TOK_IN resolved as reduce.
Conflict in state 404 between rule 98 and token TOK_INST_EQUAL resolved as reduce.
Conflict in state 404 between rule 98 and token TOK_INST_NOT_EQUAL resolved as reduce.
Conflict in state 404 between rule 98 and token TOK_LESS_EQUAL resolved as reduce.
Conflict in state 404 between rule 98 and token TOK_LESS_THAN resolved as reduce.
Conflict in state 404 between rule 98 and token TOK_LIKE resolved as reduce.
Conflict in state 404 between rule 98 and token TOK_NOT_EQUAL resolved as reduce.
Conflict in state 404 between rule 98 and token TOK_OR resolved as shift.
Conflict in state 404 between rule 98 and token TOK_XOR resolved as shift.
Conflict in state 404 between rule 98 and token TOK_AND resolved as shift.
Conflict in state 405 between rule 95 and token TOK_EQUAL resolved as reduce.
Conflict in state 405 between rule 95 and token TOK_GREATER_EQUAL resolved as reduce.
Conflict in state 405 between rule 95 and token TOK_GREATER_THAN resolved as reduce.
Conflict in state 405 between rule 95 and token TOK_IN resolved as reduce.
Conflict in state 405 between rule 95 and token TOK_INST_EQUAL resolved as reduce.
Conflict in state 405 between rule 95 and token TOK_INST_NOT_EQUAL resolved as reduce.
Conflict in state 405 between rule 95 and token TOK_LESS_EQUAL resolved as reduce.
Conflict in state 405 between rule 95 and token TOK_LESS_THAN resolved as reduce.
Conflict in state 405 between rule 95 and token TOK_LIKE resolved as reduce.
Conflict in state 405 between rule 95 and token TOK_NOT_EQUAL resolved as reduce.
Conflict in state 405 between rule 95 and token TOK_OR resolved as shift.
Conflict in state 405 between rule 95 and token TOK_XOR resolved as shift.
Conflict in state 405 between rule 95 and token TOK_AND resolved as shift.
Conflict in state 406 between rule 104 and token TOK_EQUAL resolved as reduce.
Conflict in state 406 between rule 104 and token TOK_GREATER_EQUAL resolved as reduce.
Conflict in state 406 between rule 104 and token TOK_GREATER_THAN resolved as reduce.
Conflict in state 406 between rule 104 and token TOK_IN resolved as reduce.
Conflict in state 406 between rule 104 and token TOK_INST_EQUAL resolved as reduce.
Conflict in state 406 between rule 104 and token TOK_INST_NOT_EQUAL resolved as reduce.
Conflict in state 406 between rule 104 and token TOK_LESS_EQUAL resolved as reduce.
Conflict in state 406 between rule 104 and token TOK_LESS_THAN resolved as reduce.
Conflict in state 406 between rule 104 and token TOK_LIKE resolved as reduce.
Conflict in state 406 between rule 104 and token TOK_NOT_EQUAL resolved as reduce.
Conflict in state 406 between rule 104 and token TOK_OR resolved as shift.
Conflict in state 406 between rule 104 and token TOK_XOR resolved as shift.
Conflict in state 406 between rule 104 and token TOK_AND resolved as shift.
Conflict in state 407 between rule 100 and token TOK_EQUAL resolved as reduce.
Conflict in state 407 between rule 100 and token TOK_GREATER_EQUAL resolved as reduce.
Conflict in state 407 between rule 100 and token TOK_GREATER_THAN resolved as reduce.
Conflict in state 407 between rule 100 and token TOK_IN resolved as reduce.
Conflict in state 407 between rule 100 and token TOK_INST_EQUAL resolved as reduce.
Conflict in state 407 between rule 100 and token TOK_INST_NOT_EQUAL resolved as reduce.
Conflict in state 407 between rule 100 and token TOK_LESS_EQUAL resolved as reduce.
Conflict in state 407 between rule 100 and token TOK_LESS_THAN resolved as reduce.
Conflict in state 407 between rule 100 and token TOK_LIKE resolved as reduce.
Conflict in state 407 between rule 100 and token TOK_NOT_EQUAL resolved as reduce.
Conflict in state 407 between rule 100 and token TOK_OR resolved as shift.
Conflict in state 407 between rule 100 and token TOK_XOR resolved as shift.
Conflict in state 407 between rule 100 and token TOK_AND resolved as shift.
Conflict in state 408 between rule 93 and token TOK_EQUAL resolved as reduce.
Conflict in state 408 between rule 93 and token TOK_GREATER_EQUAL resolved as reduce.
Conflict in state 408 between rule 93 and token TOK_GREATER_THAN resolved as reduce.
Conflict in state 408 between rule 93 and token TOK_IN resolved as reduce.
Conflict in state 408 between rule 93 and token TOK_INST_EQUAL resolved as reduce.
Conflict in state 408 between rule 93 and token TOK_INST_NOT_EQUAL resolved as reduce.
Conflict in state 408 between rule 93 and token TOK_LESS_EQUAL resolved as reduce.
Conflict in state 408 between rule 93 and token TOK_LESS_THAN resolved as reduce.
Conflict in state 408 between rule 93 and token TOK_LIKE resolved as reduce.
Conflict in state 408 between rule 93 and token TOK_NOT_EQUAL resolved as reduce.
Conflict in state 408 between rule 93 and token TOK_OR resolved as reduce.
Conflict in state 408 between rule 93 and token TOK_XOR resolved as reduce.
Conflict in state 408 between rule 93 and token TOK_AND resolved as shift.
Conflict in state 409 between rule 94 and token TOK_EQUAL resolved as reduce.
Conflict in state 409 between rule 94 and token TOK_GREATER_EQUAL resolved as reduce.
Conflict in state 409 between rule 94 and token TOK_GREATER_THAN resolved as reduce.
Conflict in state 409 between rule 94 and token TOK_IN resolved as reduce.
Conflict in state 409 between rule 94 and token TOK_INST_EQUAL resolved as reduce.
Conflict in state 409 between rule 94 and token TOK_INST_NOT_EQUAL resolved as reduce.
Conflict in state 409 between rule 94 and token TOK_LESS_EQUAL resolved as reduce.
Conflict in state 409 between rule 94 and token TOK_LESS_THAN resolved as reduce.
Conflict in state 409 between rule 94 and token TOK_LIKE resolved as reduce.
Conflict in state 409 between rule 94 and token TOK_NOT_EQUAL resolved as reduce.
Conflict in state 409 between rule 94 and token TOK_OR resolved as reduce.
Conflict in state 409 between rule 94 and token TOK_XOR resolved as reduce.
Conflict in state 409 between rule 94 and token TOK_AND resolved as shift.
Conflict in state 410 between rule 92 and token TOK_EQUAL resolved as reduce.
Conflict in state 410 between rule 92 and token TOK_GREATER_EQUAL resolved as reduce.
Conflict in state 410 between rule 92 and token TOK_GREATER_THAN resolved as reduce.
Conflict in state 410 between rule 92 and token TOK_IN resolved as reduce.
Conflict in state 410 between rule 92 and token TOK_INST_EQUAL resolved as reduce.
Conflict in state 410 between rule 92 and token TOK_INST_NOT_EQUAL resolved as reduce.
Conflict in state 410 between rule 92 and token TOK_LESS_EQUAL resolved as reduce.
Conflict in state 410 between rule 92 and token TOK_LESS_THAN resolved as reduce.
Conflict in state 410 between rule 92 and token TOK_LIKE resolved as reduce.
Conflict in state 410 between rule 92 and token TOK_NOT_EQUAL resolved as reduce.
Conflict in state 410 between rule 92 and token TOK_OR resolved as reduce.
Conflict in state 410 between rule 92 and token TOK_XOR resolved as reduce.
Conflict in state 410 between rule 92 and token TOK_AND resolved as reduce.
Conflict in state 411 between rule 114 and token TOK_MINUS resolved as reduce.
Conflict in state 411 between rule 114 and token TOK_PLUS resolved as reduce.
Conflict in state 411 between rule 114 and token TOK_DIV resolved as shift.
Conflict in state 411 between rule 114 and token TOK_MOD resolved as shift.
Conflict in state 411 between rule 114 and token TOK_REAL_DIV resolved as shift.
Conflict in state 411 between rule 114 and token TOK_TIMES resolved as shift.
Conflict in state 411 between rule 114 and token TOK_CONCAT_OP resolved as shift.
Conflict in state 411 between rule 114 and token TOK_EXP resolved as shift.
Conflict in state 412 between rule 113 and token TOK_MINUS resolved as reduce.
Conflict in state 412 between rule 113 and token TOK_PLUS resolved as reduce.
Conflict in state 412 between rule 113 and token TOK_DIV resolved as shift.
Conflict in state 412 between rule 113 and token TOK_MOD resolved as shift.
Conflict in state 412 between rule 113 and token TOK_REAL_DIV resolved as shift.
Conflict in state 412 between rule 113 and token TOK_TIMES resolved as shift.
Conflict in state 412 between rule 113 and token TOK_CONCAT_OP resolved as shift.
Conflict in state 412 between rule 113 and token TOK_EXP resolved as shift.
Conflict in state 413 between rule 110 and token TOK_MINUS resolved as reduce.
Conflict in state 413 between rule 110 and token TOK_PLUS resolved as reduce.
Conflict in state 413 between rule 110 and token TOK_DIV resolved as reduce.
Conflict in state 413 between rule 110 and token TOK_MOD resolved as reduce.
Conflict in state 413 between rule 110 and token TOK_REAL_DIV resolved as reduce.
Conflict in state 413 between rule 110 and token TOK_TIMES resolved as reduce.
Conflict in state 413 between rule 110 and token TOK_CONCAT_OP resolved as reduce.
Conflict in state 413 between rule 110 and token TOK_EXP resolved as shift.
Conflict in state 414 between rule 112 and token TOK_MINUS resolved as reduce.
Conflict in state 414 between rule 112 and token TOK_PLUS resolved as reduce.
Conflict in state 414 between rule 112 and token TOK_DIV resolved as reduce.
Conflict in state 414 between rule 112 and token TOK_MOD resolved as reduce.
Conflict in state 414 between rule 112 and token TOK_REAL_DIV resolved as reduce.
Conflict in state 414 between rule 112 and token TOK_TIMES resolved as reduce.
Conflict in state 414 between rule 112 and token TOK_CONCAT_OP resolved as reduce.
Conflict in state 414 between rule 112 and token TOK_EXP resolved as shift.
Conflict in state 415 between rule 111 and token TOK_MINUS resolved as reduce.
Conflict in state 415 between rule 111 and token TOK_PLUS resolved as reduce.
Conflict in state 415 between rule 111 and token TOK_DIV resolved as reduce.
Conflict in state 415 between rule 111 and token TOK_MOD resolved as reduce.
Conflict in state 415 between rule 111 and token TOK_REAL_DIV resolved as reduce.
Conflict in state 415 between rule 111 and token TOK_TIMES resolved as reduce.
Conflict in state 415 between rule 111 and token TOK_CONCAT_OP resolved as reduce.
Conflict in state 415 between rule 111 and token TOK_EXP resolved as shift.
Conflict in state 416 between rule 109 and token TOK_MINUS resolved as reduce.
Conflict in state 416 between rule 109 and token TOK_PLUS resolved as reduce.
Conflict in state 416 between rule 109 and token TOK_DIV resolved as reduce.
Conflict in state 416 between rule 109 and token TOK_MOD resolved as reduce.
Conflict in state 416 between rule 109 and token TOK_REAL_DIV resolved as reduce.
Conflict in state 416 between rule 109 and token TOK_TIMES resolved as reduce.
Conflict in state 416 between rule 109 and token TOK_CONCAT_OP resolved as reduce.
Conflict in state 416 between rule 109 and token TOK_EXP resolved as shift.
Conflict in state 417 between rule 107 and token TOK_MINUS resolved as reduce.
Conflict in state 417 between rule 107 and token TOK_PLUS resolved as reduce.
Conflict in state 417 between rule 107 and token TOK_DIV resolved as reduce.
Conflict in state 417 between rule 107 and token TOK_MOD resolved as reduce.
Conflict in state 417 between rule 107 and token TOK_REAL_DIV resolved as reduce.
Conflict in state 417 between rule 107 and token TOK_TIMES resolved as reduce.
Conflict in state 417 between rule 107 and token TOK_CONCAT_OP resolved as reduce.
Conflict in state 417 between rule 107 and token TOK_EXP resolved as shift.
Conflict in state 418 between rule 108 and token TOK_MINUS resolved as reduce.
Conflict in state 418 between rule 108 and token TOK_PLUS resolved as reduce.
Conflict in state 418 between rule 108 and token TOK_DIV resolved as reduce.
Conflict in state 418 between rule 108 and token TOK_MOD resolved as reduce.
Conflict in state 418 between rule 108 and token TOK_REAL_DIV resolved as reduce.
Conflict in state 418 between rule 108 and token TOK_TIMES resolved as reduce.
Conflict in state 418 between rule 108 and token TOK_CONCAT_OP resolved as reduce.
Conflict in state 418 between rule 108 and token TOK_EXP resolved as shift.
State 576 contains 1 reduce/reduce conflict.

Grammar
rule 1    action_body -> action_body_item_rep statement_rep
rule 2    action_body_item -> declaration
rule 3    action_body_item -> constant_decl
rule 4    action_body_item -> local_decl
rule 5    action_body_item_rep ->		/* empty */
rule 6    action_body_item_rep -> action_body_item action_body_item_rep
rule 7    actual_parameters -> TOK_LEFT_PAREN expression_list TOK_RIGHT_PAREN
rule 8    actual_parameters -> TOK_LEFT_PAREN TOK_RIGHT_PAREN
rule 9    aggregate_initializer -> TOK_LEFT_BRACKET TOK_RIGHT_BRACKET
rule 10   aggregate_initializer -> TOK_LEFT_BRACKET aggregate_init_body TOK_RIGHT_BRACKET
rule 11   aggregate_init_element -> expression
rule 12   aggregate_init_body -> aggregate_init_element
rule 13   aggregate_init_body -> aggregate_init_element TOK_COLON expression
rule 14   aggregate_init_body -> aggregate_init_body TOK_COMMA aggregate_init_element
rule 15   aggregate_init_body -> aggregate_init_body TOK_COMMA aggregate_init_element TOK_COLON expression
rule 16   aggregate_type -> TOK_AGGREGATE TOK_OF parameter_type
rule 17   aggregate_type -> TOK_AGGREGATE TOK_COLON TOK_IDENTIFIER TOK_OF parameter_type
rule 18   aggregation_type -> array_type
rule 19   aggregation_type -> bag_type
rule 20   aggregation_type -> list_type
rule 21   aggregation_type -> set_type
rule 22   @1 ->		/* empty */
rule 23   alias_statement -> TOK_ALIAS TOK_IDENTIFIER TOK_FOR general_ref semicolon @1 statement_rep TOK_END_ALIAS semicolon
rule 24   array_type -> TOK_ARRAY index_spec TOK_OF optional_or_unique attribute_type
rule 25   assignable -> assignable qualifier
rule 26   assignable -> identifier
rule 27   assignment_statement -> assignable TOK_ASSIGNMENT expression semicolon
rule 28   attribute_type -> aggregation_type
rule 29   attribute_type -> basic_type
rule 30   attribute_type -> defined_type
rule 31   explicit_attr_list ->		/* empty */
rule 32   explicit_attr_list -> explicit_attr_list explicit_attribute
rule 33   bag_type -> TOK_BAG limit_spec TOK_OF attribute_type
rule 34   bag_type -> TOK_BAG TOK_OF attribute_type
rule 35   basic_type -> TOK_BOOLEAN
rule 36   basic_type -> TOK_INTEGER precision_spec
rule 37   basic_type -> TOK_REAL precision_spec
rule 38   basic_type -> TOK_NUMBER
rule 39   basic_type -> TOK_LOGICAL
rule 40   basic_type -> TOK_BINARY precision_spec optional_fixed
rule 41   basic_type -> TOK_STRING precision_spec optional_fixed
rule 42   block_list ->		/* empty */
rule 43   block_list -> block_list block_member
rule 44   block_member -> declaration
rule 45   block_member -> include_directive
rule 46   block_member -> rule_decl
rule 47   by_expression ->		/* empty */
rule 48   by_expression -> TOK_BY expression
rule 49   cardinality_op -> TOK_LEFT_CURL expression TOK_COLON expression TOK_RIGHT_CURL
rule 50   case_action -> case_labels TOK_COLON statement
rule 51   case_action_list ->		/* empty */
rule 52   case_action_list -> case_action_list case_action
rule 53   case_block -> case_action_list case_otherwise
rule 54   case_labels -> expression
rule 55   case_labels -> case_labels TOK_COMMA expression
rule 56   case_otherwise ->		/* empty */
rule 57   case_otherwise -> TOK_OTHERWISE TOK_COLON statement
rule 58   case_statement -> TOK_CASE expression TOK_OF case_block TOK_END_CASE semicolon
rule 59   compound_statement -> TOK_BEGIN statement_rep TOK_END semicolon
rule 60   constant -> TOK_PI
rule 61   constant -> TOK_E
rule 62   constant_body -> identifier TOK_COLON attribute_type TOK_ASSIGNMENT expression semicolon
rule 63   constant_body_list ->		/* empty */
rule 64   constant_body_list -> constant_body constant_body_list
rule 65   constant_decl -> TOK_CONSTANT constant_body_list TOK_END_CONSTANT semicolon
rule 66   declaration -> entity_decl
rule 67   declaration -> function_decl
rule 68   declaration -> procedure_decl
rule 69   declaration -> type_decl
rule 70   derive_decl ->		/* empty */
rule 71   derive_decl -> TOK_DERIVE derived_attribute_rep
rule 72   derived_attribute -> attribute_decl TOK_COLON attribute_type initializer semicolon
rule 73   derived_attribute_rep -> derived_attribute
rule 74   derived_attribute_rep -> derived_attribute_rep derived_attribute
rule 75   entity_body -> explicit_attr_list derive_decl inverse_clause unique_clause where_rule_OPT
rule 76   entity_decl -> entity_header subsuper_decl semicolon entity_body TOK_END_ENTITY semicolon
rule 77   entity_header -> TOK_ENTITY TOK_IDENTIFIER
rule 78   enumeration_type -> TOK_ENUMERATION TOK_OF nested_id_list
rule 79   escape_statement -> TOK_ESCAPE semicolon
rule 80   attribute_decl -> TOK_IDENTIFIER
rule 81   attribute_decl -> TOK_SELF TOK_BACKSLASH TOK_IDENTIFIER TOK_DOT TOK_IDENTIFIER
rule 82   attribute_decl_list -> attribute_decl
rule 83   attribute_decl_list -> attribute_decl_list TOK_COMMA attribute_decl
rule 84   optional ->		/* empty */
rule 85   optional -> TOK_OPTIONAL
rule 86   explicit_attribute -> attribute_decl_list TOK_COLON optional attribute_type semicolon
rule 87   @2 ->		/* empty */
rule 88   express_file -> @2 schema_decl_list
rule 89   schema_decl_list -> schema_decl
rule 90   schema_decl_list -> schema_decl_list schema_decl
rule 91   expression -> simple_expression
rule 92   expression -> expression TOK_AND expression
rule 93   expression -> expression TOK_OR expression
rule 94   expression -> expression TOK_XOR expression
rule 95   expression -> expression TOK_LESS_THAN expression
rule 96   expression -> expression TOK_GREATER_THAN expression
rule 97   expression -> expression TOK_EQUAL expression
rule 98   expression -> expression TOK_LESS_EQUAL expression
rule 99   expression -> expression TOK_GREATER_EQUAL expression
rule 100  expression -> expression TOK_NOT_EQUAL expression
rule 101  expression -> expression TOK_INST_EQUAL expression
rule 102  expression -> expression TOK_INST_NOT_EQUAL expression
rule 103  expression -> expression TOK_IN expression
rule 104  expression -> expression TOK_LIKE expression
rule 105  expression -> simple_expression cardinality_op simple_expression
rule 106  simple_expression -> unary_expression
rule 107  simple_expression -> simple_expression TOK_CONCAT_OP simple_expression
rule 108  simple_expression -> simple_expression TOK_EXP simple_expression
rule 109  simple_expression -> simple_expression TOK_TIMES simple_expression
rule 110  simple_expression -> simple_expression TOK_DIV simple_expression
rule 111  simple_expression -> simple_expression TOK_REAL_DIV simple_expression
rule 112  simple_expression -> simple_expression TOK_MOD simple_expression
rule 113  simple_expression -> simple_expression TOK_PLUS simple_expression
rule 114  simple_expression -> simple_expression TOK_MINUS simple_expression
rule 115  expression_list -> expression
rule 116  expression_list -> expression_list TOK_COMMA expression
rule 117  var ->		/* empty */
rule 118  var -> TOK_VAR
rule 119  formal_parameter -> var id_list TOK_COLON parameter_type
rule 120  formal_parameter_list ->		/* empty */
rule 121  formal_parameter_list -> TOK_LEFT_PAREN formal_parameter_rep TOK_RIGHT_PAREN
rule 122  formal_parameter_rep -> formal_parameter
rule 123  formal_parameter_rep -> formal_parameter_rep semicolon formal_parameter
rule 124  parameter_type -> basic_type
rule 125  parameter_type -> conformant_aggregation
rule 126  parameter_type -> defined_type
rule 127  parameter_type -> generic_type
rule 128  function_call -> function_id actual_parameters
rule 129  function_decl -> function_header action_body TOK_END_FUNCTION semicolon
rule 130  @3 ->		/* empty */
rule 131  @4 ->		/* empty */
rule 132  @5 ->		/* empty */
rule 133  function_header -> TOK_FUNCTION @3 TOK_IDENTIFIER @4 formal_parameter_list @5 TOK_COLON parameter_type semicolon
rule 134  function_id -> TOK_IDENTIFIER
rule 135  function_id -> TOK_BUILTIN_FUNCTION
rule 136  conformant_aggregation -> aggregate_type
rule 137  conformant_aggregation -> TOK_ARRAY TOK_OF optional_or_unique parameter_type
rule 138  conformant_aggregation -> TOK_ARRAY index_spec TOK_OF optional_or_unique parameter_type
rule 139  conformant_aggregation -> TOK_BAG TOK_OF parameter_type
rule 140  conformant_aggregation -> TOK_BAG index_spec TOK_OF parameter_type
rule 141  conformant_aggregation -> TOK_LIST TOK_OF unique parameter_type
rule 142  conformant_aggregation -> TOK_LIST index_spec TOK_OF unique parameter_type
rule 143  conformant_aggregation -> TOK_SET TOK_OF parameter_type
rule 144  conformant_aggregation -> TOK_SET index_spec TOK_OF parameter_type
rule 145  generic_type -> TOK_GENERIC
rule 146  generic_type -> TOK_GENERIC TOK_COLON TOK_IDENTIFIER
rule 147  id_list -> TOK_IDENTIFIER
rule 148  id_list -> id_list TOK_COMMA TOK_IDENTIFIER
rule 149  identifier -> TOK_SELF
rule 150  identifier -> TOK_QUESTION_MARK
rule 151  identifier -> TOK_IDENTIFIER
rule 152  if_statement -> TOK_IF expression TOK_THEN statement_rep TOK_END_IF semicolon
rule 153  if_statement -> TOK_IF expression TOK_THEN statement_rep TOK_ELSE statement_rep TOK_END_IF semicolon
rule 154  include_directive -> TOK_INCLUDE TOK_STRING_LITERAL semicolon
rule 155  increment_control -> TOK_IDENTIFIER TOK_ASSIGNMENT expression TOK_TO expression by_expression
rule 156  index_spec -> TOK_LEFT_BRACKET expression TOK_COLON expression TOK_RIGHT_BRACKET
rule 157  initializer -> TOK_ASSIGNMENT expression
rule 158  rename -> TOK_IDENTIFIER
rule 159  rename -> TOK_IDENTIFIER TOK_AS TOK_IDENTIFIER
rule 160  rename_list -> rename
rule 161  rename_list -> rename_list TOK_COMMA rename
rule 162  parened_rename_list -> TOK_LEFT_PAREN rename_list TOK_RIGHT_PAREN
rule 163  reference_clause -> TOK_REFERENCE TOK_FROM TOK_IDENTIFIER semicolon
rule 164  @6 ->		/* empty */
rule 165  reference_clause -> TOK_REFERENCE TOK_FROM TOK_IDENTIFIER @6 parened_rename_list semicolon
rule 166  use_clause -> TOK_USE TOK_FROM TOK_IDENTIFIER semicolon
rule 167  @7 ->		/* empty */
rule 168  use_clause -> TOK_USE TOK_FROM TOK_IDENTIFIER @7 parened_rename_list semicolon
rule 169  interface_specification -> use_clause
rule 170  interface_specification -> reference_clause
rule 171  interface_specification_list ->		/* empty */
rule 172  interface_specification_list -> interface_specification_list interface_specification
rule 173  interval -> TOK_LEFT_CURL simple_expression rel_op simple_expression rel_op simple_expression right_curl
rule 174  set_or_bag_of_entity -> defined_type
rule 175  set_or_bag_of_entity -> TOK_SET TOK_OF defined_type
rule 176  set_or_bag_of_entity -> TOK_SET limit_spec TOK_OF defined_type
rule 177  set_or_bag_of_entity -> TOK_BAG limit_spec TOK_OF defined_type
rule 178  set_or_bag_of_entity -> TOK_BAG TOK_OF defined_type
rule 179  inverse_attr_list -> inverse_attr
rule 180  inverse_attr_list -> inverse_attr_list inverse_attr
rule 181  inverse_attr -> TOK_IDENTIFIER TOK_COLON set_or_bag_of_entity TOK_FOR TOK_IDENTIFIER semicolon
rule 182  inverse_clause ->		/* empty */
rule 183  inverse_clause -> TOK_INVERSE inverse_attr_list
rule 184  limit_spec -> TOK_LEFT_BRACKET expression TOK_COLON expression TOK_RIGHT_BRACKET
rule 185  list_type -> TOK_LIST limit_spec TOK_OF unique attribute_type
rule 186  list_type -> TOK_LIST TOK_OF unique attribute_type
rule 187  literal -> TOK_INTEGER_LITERAL
rule 188  literal -> TOK_REAL_LITERAL
rule 189  literal -> TOK_STRING_LITERAL
rule 190  literal -> TOK_STRING_LITERAL_ENCODED
rule 191  literal -> TOK_LOGICAL_LITERAL
rule 192  literal -> TOK_BINARY_LITERAL
rule 193  literal -> constant
rule 194  local_initializer -> TOK_ASSIGNMENT expression
rule 195  local_variable -> id_list TOK_COLON parameter_type semicolon
rule 196  local_variable -> id_list TOK_COLON parameter_type local_initializer semicolon
rule 197  local_body ->		/* empty */
rule 198  local_body -> local_variable local_body
rule 199  local_decl -> TOK_LOCAL local_body TOK_END_LOCAL semicolon
rule 200  defined_type -> TOK_IDENTIFIER
rule 201  defined_type_list -> defined_type
rule 202  defined_type_list -> defined_type_list TOK_COMMA defined_type
rule 203  nested_id_list -> TOK_LEFT_PAREN id_list TOK_RIGHT_PAREN
rule 204  oneof_op -> TOK_ONEOF
rule 205  optional_or_unique ->		/* empty */
rule 206  optional_or_unique -> TOK_OPTIONAL
rule 207  optional_or_unique -> TOK_UNIQUE
rule 208  optional_or_unique -> TOK_OPTIONAL TOK_UNIQUE
rule 209  optional_or_unique -> TOK_UNIQUE TOK_OPTIONAL
rule 210  optional_fixed ->		/* empty */
rule 211  optional_fixed -> TOK_FIXED
rule 212  precision_spec ->		/* empty */
rule 213  precision_spec -> TOK_LEFT_PAREN expression TOK_RIGHT_PAREN
rule 214  proc_call_statement -> procedure_id actual_parameters semicolon
rule 215  proc_call_statement -> procedure_id semicolon
rule 216  procedure_decl -> procedure_header action_body TOK_END_PROCEDURE semicolon
rule 217  @8 ->		/* empty */
rule 218  @9 ->		/* empty */
rule 219  procedure_header -> TOK_PROCEDURE @8 TOK_IDENTIFIER @9 formal_parameter_list semicolon
rule 220  procedure_id -> TOK_IDENTIFIER
rule 221  procedure_id -> TOK_BUILTIN_PROCEDURE
rule 222  group_ref -> TOK_BACKSLASH TOK_IDENTIFIER
rule 223  qualifier -> TOK_DOT TOK_IDENTIFIER
rule 224  qualifier -> TOK_BACKSLASH TOK_IDENTIFIER
rule 225  qualifier -> TOK_LEFT_BRACKET simple_expression TOK_RIGHT_BRACKET
rule 226  qualifier -> TOK_LEFT_BRACKET simple_expression TOK_COLON simple_expression TOK_RIGHT_BRACKET
rule 227  @10 ->		/* empty */
rule 228  query_expression -> TOK_QUERY TOK_LEFT_PAREN TOK_IDENTIFIER TOK_ALL_IN expression TOK_SUCH_THAT @10 expression TOK_RIGHT_PAREN
rule 229  rel_op -> TOK_LESS_THAN
rule 230  rel_op -> TOK_GREATER_THAN
rule 231  rel_op -> TOK_EQUAL
rule 232  rel_op -> TOK_LESS_EQUAL
rule 233  rel_op -> TOK_GREATER_EQUAL
rule 234  rel_op -> TOK_NOT_EQUAL
rule 235  rel_op -> TOK_INST_EQUAL
rule 236  rel_op -> TOK_INST_NOT_EQUAL
rule 237  repeat_statement -> TOK_REPEAT increment_control while_control until_control semicolon statement_rep TOK_END_REPEAT semicolon
rule 238  repeat_statement -> TOK_REPEAT while_control until_control semicolon statement_rep TOK_END_REPEAT semicolon
rule 239  return_statement -> TOK_RETURN semicolon
rule 240  return_statement -> TOK_RETURN TOK_LEFT_PAREN expression TOK_RIGHT_PAREN semicolon
rule 241  right_curl -> TOK_RIGHT_CURL
rule 242  rule_decl -> rule_header action_body where_rule TOK_END_RULE semicolon
rule 243  rule_formal_parameter -> TOK_IDENTIFIER
rule 244  rule_formal_parameter_list -> rule_formal_parameter
rule 245  rule_formal_parameter_list -> rule_formal_parameter_list TOK_COMMA rule_formal_parameter
rule 246  @11 ->		/* empty */
rule 247  @12 ->		/* empty */
rule 248  rule_header -> TOK_RULE @11 TOK_IDENTIFIER TOK_FOR TOK_LEFT_PAREN @12 rule_formal_parameter_list TOK_RIGHT_PAREN semicolon
rule 249  schema_body -> interface_specification_list block_list
rule 250  schema_body -> interface_specification_list constant_decl block_list
rule 251  schema_decl -> schema_header schema_body TOK_END_SCHEMA semicolon
rule 252  schema_decl -> include_directive
rule 253  schema_header -> TOK_SCHEMA TOK_IDENTIFIER semicolon
rule 254  select_type -> TOK_SELECT TOK_LEFT_PAREN defined_type_list TOK_RIGHT_PAREN
rule 255  semicolon -> TOK_SEMICOLON
rule 256  set_type -> TOK_SET limit_spec TOK_OF attribute_type
rule 257  set_type -> TOK_SET TOK_OF attribute_type
rule 258  skip_statement -> TOK_SKIP semicolon
rule 259  statement -> alias_statement
rule 260  statement -> assignment_statement
rule 261  statement -> case_statement
rule 262  statement -> compound_statement
rule 263  statement -> escape_statement
rule 264  statement -> if_statement
rule 265  statement -> proc_call_statement
rule 266  statement -> repeat_statement
rule 267  statement -> return_statement
rule 268  statement -> skip_statement
rule 269  statement_rep ->		/* empty */
rule 270  statement_rep -> semicolon statement_rep
rule 271  statement_rep -> statement statement_rep
rule 272  subsuper_decl ->		/* empty */
rule 273  subsuper_decl -> supertype_decl
rule 274  subsuper_decl -> subtype_decl
rule 275  subsuper_decl -> supertype_decl subtype_decl
rule 276  subtype_decl -> TOK_SUBTYPE TOK_OF TOK_LEFT_PAREN defined_type_list TOK_RIGHT_PAREN
rule 277  supertype_decl -> TOK_ABSTRACT TOK_SUPERTYPE
rule 278  supertype_decl -> TOK_SUPERTYPE TOK_OF TOK_LEFT_PAREN supertype_expression TOK_RIGHT_PAREN
rule 279  supertype_decl -> TOK_ABSTRACT TOK_SUPERTYPE TOK_OF TOK_LEFT_PAREN supertype_expression TOK_RIGHT_PAREN
rule 280  supertype_expression -> supertype_factor
rule 281  supertype_expression -> supertype_expression TOK_AND supertype_factor
rule 282  supertype_expression -> supertype_expression TOK_ANDOR supertype_factor
rule 283  supertype_expression_list -> supertype_expression
rule 284  supertype_expression_list -> supertype_expression_list TOK_COMMA supertype_expression
rule 285  supertype_factor -> identifier
rule 286  supertype_factor -> oneof_op TOK_LEFT_PAREN supertype_expression_list TOK_RIGHT_PAREN
rule 287  supertype_factor -> TOK_LEFT_PAREN supertype_expression TOK_RIGHT_PAREN
rule 288  type -> aggregation_type
rule 289  type -> basic_type
rule 290  type -> defined_type
rule 291  type -> select_type
rule 292  type_item_body -> enumeration_type
rule 293  type_item_body -> type
rule 294  @13 ->		/* empty */
rule 295  @14 ->		/* empty */
rule 296  type_item -> TOK_IDENTIFIER TOK_EQUAL @13 type_item_body @14 semicolon
rule 297  @15 ->		/* empty */
rule 298  type_decl -> TOK_TYPE type_item where_rule_OPT @15 TOK_END_TYPE semicolon
rule 299  general_ref -> assignable group_ref
rule 300  general_ref -> assignable
rule 301  unary_expression -> aggregate_initializer
rule 302  unary_expression -> unary_expression qualifier
rule 303  unary_expression -> literal
rule 304  unary_expression -> function_call
rule 305  unary_expression -> identifier
rule 306  unary_expression -> TOK_LEFT_PAREN expression TOK_RIGHT_PAREN
rule 307  unary_expression -> interval
rule 308  unary_expression -> query_expression
rule 309  unary_expression -> TOK_NOT unary_expression
rule 310  unary_expression -> TOK_PLUS unary_expression
rule 311  unary_expression -> TOK_MINUS unary_expression
rule 312  unique ->		/* empty */
rule 313  unique -> TOK_UNIQUE
rule 314  qualified_attr -> TOK_IDENTIFIER
rule 315  qualified_attr -> TOK_SELF TOK_BACKSLASH TOK_IDENTIFIER TOK_DOT TOK_IDENTIFIER
rule 316  qualified_attr_list -> qualified_attr
rule 317  qualified_attr_list -> qualified_attr_list TOK_COMMA qualified_attr
rule 318  labelled_attrib_list -> qualified_attr_list semicolon
rule 319  labelled_attrib_list -> TOK_IDENTIFIER TOK_COLON qualified_attr_list semicolon
rule 320  labelled_attrib_list_list -> labelled_attrib_list
rule 321  labelled_attrib_list_list -> labelled_attrib_list_list labelled_attrib_list
rule 322  unique_clause ->		/* empty */
rule 323  unique_clause -> TOK_UNIQUE labelled_attrib_list_list
rule 324  until_control ->		/* empty */
rule 325  until_control -> TOK_UNTIL expression
rule 326  where_clause -> expression semicolon
rule 327  where_clause -> TOK_IDENTIFIER TOK_COLON expression semicolon
rule 328  where_clause_list -> where_clause
rule 329  where_clause_list -> where_clause_list where_clause
rule 330  where_rule -> TOK_WHERE where_clause_list
rule 331  where_rule_OPT ->		/* empty */
rule 332  where_rule_OPT -> where_rule
rule 333  while_control ->		/* empty */
rule 334  while_control -> TOK_WHILE expression

Terminals, with rules where they appear

$ (-1)
error (256)
TOK_EQUAL (258) 97 231 296
TOK_GREATER_EQUAL (259) 99 233
TOK_GREATER_THAN (260) 96 230
TOK_IN (261) 103
TOK_INST_EQUAL (262) 101 235
TOK_INST_NOT_EQUAL (263) 102 236
TOK_LESS_EQUAL (264) 98 232
TOK_LESS_THAN (265) 95 229
TOK_LIKE (266) 104
TOK_NOT_EQUAL (267) 100 234
TOK_MINUS (268) 114 311
TOK_PLUS (269) 113 310
TOK_OR (270) 93
TOK_XOR (271) 94
TOK_DIV (272) 110
TOK_MOD (273) 112
TOK_REAL_DIV (274) 111
TOK_TIMES (275) 109
TOK_AND (276) 92 281
TOK_ANDOR (277) 282
TOK_CONCAT_OP (278) 107
TOK_EXP (279) 108
TOK_NOT (280) 309
TOK_DOT (281) 81 223 315
TOK_BACKSLASH (282) 81 222 224 315
TOK_LEFT_BRACKET (283) 9 10 156 184 225 226
TOK_ABSTRACT (284) 277 279
TOK_AGGREGATE (285) 16 17
TOK_ALIAS (286) 23
TOK_ALL_IN (287) 228
TOK_ARRAY (288) 24 137 138
TOK_AS (289) 159
TOK_ASSIGNMENT (290) 27 62 155 157 194
TOK_BAG (291) 33 34 139 140 177 178
TOK_BEGIN (292) 59
TOK_BINARY (293) 40
TOK_BOOLEAN (294) 35
TOK_BY (295) 48
TOK_CASE (296) 58
TOK_COLON (297) 13 15 17 49 50 57 62 72 86 119 133 146 156 181 184
    195 196 226 319 327
TOK_COMMA (298) 14 15 55 83 116 148 161 202 245 284 317
TOK_CONSTANT (299) 65
TOK_CONTEXT (300)
TOK_E (301) 61
TOK_DERIVE (302) 71
TOK_ELSE (303) 153
TOK_END (304) 59
TOK_END_ALIAS (305) 23
TOK_END_CASE (306) 58
TOK_END_CONSTANT (307) 65
TOK_END_CONTEXT (308)
TOK_END_ENTITY (309) 76
TOK_END_FUNCTION (310) 129
TOK_END_IF (311) 152 153
TOK_END_LOCAL (312) 199
TOK_END_MODEL (313)
TOK_END_PROCEDURE (314) 216
TOK_END_REPEAT (315) 237 238
TOK_END_RULE (316) 242
TOK_END_SCHEMA (317) 251
TOK_END_TYPE (318) 298
TOK_ENTITY (319) 77
TOK_ENUMERATION (320) 78
TOK_ESCAPE (321) 79
TOK_FIXED (322) 211
TOK_FOR (323) 23 181 248
TOK_FROM (324) 163 165 166 168
TOK_FUNCTION (325) 133
TOK_GENERIC (326) 145 146
TOK_IF (327) 152 153
TOK_INCLUDE (328) 154
TOK_INTEGER (329) 36
TOK_INVERSE (330) 183
TOK_LEFT_CURL (331) 49 173
TOK_LEFT_PAREN (332) 7 8 121 162 203 213 228 240 248 254 276 278 279
    286 287 306
TOK_LIST (333) 141 142 185 186
TOK_LOCAL (334) 199
TOK_LOGICAL (335) 39
TOK_MODEL (336)
TOK_NUMBER (337) 38
TOK_OF (338) 16 17 24 33 34 58 78 137 138 139 140 141 142 143 144 175
    176 177 178 185 186 256 257 276 278 279
TOK_ONEOF (339) 204
TOK_OPTIONAL (340) 85 206 208 209
TOK_OTHERWISE (341) 57
TOK_PI (342) 60
TOK_PROCEDURE (343) 219
TOK_QUERY (344) 228
TOK_QUESTION_MARK (345) 150
TOK_REAL (346) 37
TOK_REFERENCE (347) 163 165
TOK_REPEAT (348) 237 238
TOK_RETURN (349) 239 240
TOK_RIGHT_BRACKET (350) 9 10 156 184 225 226
TOK_RIGHT_CURL (351) 49 241
TOK_RIGHT_PAREN (352) 7 8 121 162 203 213 228 240 248 254 276 278 279
    286 287 306
TOK_RULE (353) 248
TOK_SCHEMA (354) 253
TOK_SELECT (355) 254
TOK_SET (356) 143 144 175 176 256 257
TOK_SKIP (357) 258
TOK_STRING (358) 41
TOK_SUBTYPE (359) 276
TOK_SUCH_THAT (360) 228
TOK_SUPERTYPE (361) 277 278 279
TOK_THEN (362) 152 153
TOK_TO (363) 155
TOK_TYPE (364) 298
TOK_UNIQUE (365) 207 208 209 313 323
TOK_UNTIL (366) 325
TOK_USE (367) 166 168
TOK_VAR (368) 118
TOK_WHERE (369) 330
TOK_WHILE (370) 334
TOK_STRING_LITERAL (371) 154 189
TOK_STRING_LITERAL_ENCODED (372) 190
TOK_BUILTIN_FUNCTION (373) 135
TOK_BUILTIN_PROCEDURE (374) 221
TOK_IDENTIFIER (375) 17 23 77 80 81 133 134 146 147 148 151 155 158
    159 163 165 166 168 181 200 219 220 222 223 224 228 243 248 253
    296 314 315 319 327
TOK_SELF (376) 81 149 315
TOK_INTEGER_LITERAL (377) 187
TOK_REAL_LITERAL (378) 188
TOK_LOGICAL_LITERAL (379) 191
TOK_BINARY_LITERAL (380) 192
TOK_SEMICOLON (381) 255

Nonterminals, with rules where they appear

action_body (127)
    on left: 1, on right: 129 216 242
action_body_item (128)
    on left: 2 3 4, on right: 6
action_body_item_rep (129)
    on left: 5 6, on right: 1 6
actual_parameters (130)
    on left: 7 8, on right: 128 214
aggregate_initializer (131)
    on left: 9 10, on right: 301
aggregate_init_element (132)
    on left: 11, on right: 12 13 14 15
aggregate_init_body (133)
    on left: 12 13 14 15, on right: 10 14 15
aggregate_type (134)
    on left: 16 17, on right: 136
aggregation_type (135)
    on left: 18 19 20 21, on right: 28 288
alias_statement (136)
    on left: 23, on right: 259
@1 (137)
    on left: 22, on right: 23
array_type (138)
    on left: 24, on right: 18
assignable (139)
    on left: 25 26, on right: 25 27 299 300
assignment_statement (140)
    on left: 27, on right: 260
attribute_type (141)
    on left: 28 29 30, on right: 24 33 34 62 72 86 185 186 256 257
explicit_attr_list (142)
    on left: 31 32, on right: 32 75
bag_type (143)
    on left: 33 34, on right: 19
basic_type (144)
    on left: 35 36 37 38 39 40 41, on right: 29 124 289
block_list (145)
    on left: 42 43, on right: 43 249 250
block_member (146)
    on left: 44 45 46, on right: 43
by_expression (147)
    on left: 47 48, on right: 155
cardinality_op (148)
    on left: 49, on right: 105
case_action (149)
    on left: 50, on right: 52
case_action_list (150)
    on left: 51 52, on right: 52 53
case_block (151)
    on left: 53, on right: 58
case_labels (152)
    on left: 54 55, on right: 50 55
case_otherwise (153)
    on left: 56 57, on right: 53
case_statement (154)
    on left: 58, on right: 261
compound_statement (155)
    on left: 59, on right: 262
constant (156)
    on left: 60 61, on right: 193
constant_body (157)
    on left: 62, on right: 64
constant_body_list (158)
    on left: 63 64, on right: 64 65
constant_decl (159)
    on left: 65, on right: 3 250
declaration (160)
    on left: 66 67 68 69, on right: 2 44
derive_decl (161)
    on left: 70 71, on right: 75
derived_attribute (162)
    on left: 72, on right: 73 74
derived_attribute_rep (163)
    on left: 73 74, on right: 71 74
entity_body (164)
    on left: 75, on right: 76
entity_decl (165)
    on left: 76, on right: 66
entity_header (166)
    on left: 77, on right: 76
enumeration_type (167)
    on left: 78, on right: 292
escape_statement (168)
    on left: 79, on right: 263
attribute_decl (169)
    on left: 80 81, on right: 72 82 83
attribute_decl_list (170)
    on left: 82 83, on right: 83 86
optional (171)
    on left: 84 85, on right: 86
explicit_attribute (172)
    on left: 86, on right: 32
express_file (173)
    on left: 88
@2 (174)
    on left: 87, on right: 88
schema_decl_list (175)
    on left: 89 90, on right: 88 90
expression (176)
    on left: 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105,
    on right: 11 13 15 27 48 49 54 55 58 62 92 93 94 95 96 97 98 99
    100 101 102 103 104 115 116 152 153 155 156 157 184 194 213 228
    240 306 325 326 327 334
simple_expression (177)
    on left: 106 107 108 109 110 111 112 113 114, on right: 91 105
    107 108 109 110 111 112 113 114 173 225 226
expression_list (178)
    on left: 115 116, on right: 7 116
var (179)
    on left: 117 118, on right: 119
formal_parameter (180)
    on left: 119, on right: 122 123
formal_parameter_list (181)
    on left: 120 121, on right: 133 219
formal_parameter_rep (182)
    on left: 122 123, on right: 121 123
parameter_type (183)
    on left: 124 125 126 127, on right: 16 17 119 133 137 138 139 140
    141 142 143 144 195 196
function_call (184)
    on left: 128, on right: 304
function_decl (185)
    on left: 129, on right: 67
function_header (186)
    on left: 133, on right: 129
@3 (187)
    on left: 130, on right: 133
@4 (188)
    on left: 131, on right: 133
@5 (189)
    on left: 132, on right: 133
function_id (190)
    on left: 134 135, on right: 128
conformant_aggregation (191)
    on left: 136 137 138 139 140 141 142 143 144, on right: 125
generic_type (192)
    on left: 145 146, on right: 127
id_list (193)
    on left: 147 148, on right: 119 148 195 196 203
identifier (194)
    on left: 149 150 151, on right: 26 62 285 305
if_statement (195)
    on left: 152 153, on right: 264
include_directive (196)
    on left: 154, on right: 45 252
increment_control (197)
    on left: 155, on right: 237
index_spec (198)
    on left: 156, on right: 24 138 140 142 144
initializer (199)
    on left: 157, on right: 72
rename (200)
    on left: 158 159, on right: 160 161
rename_list (201)
    on left: 160 161, on right: 161 162
parened_rename_list (202)
    on left: 162, on right: 165 168
reference_clause (203)
    on left: 163 165, on right: 170
@6 (204)
    on left: 164, on right: 165
use_clause (205)
    on left: 166 168, on right: 169
@7 (206)
    on left: 167, on right: 168
interface_specification (207)
    on left: 169 170, on right: 172
interface_specification_list (208)
    on left: 171 172, on right: 172 249 250
interval (209)
    on left: 173, on right: 307
set_or_bag_of_entity (210)
    on left: 174 175 176 177 178, on right: 181
inverse_attr_list (211)
    on left: 179 180, on right: 180 183
inverse_attr (212)
    on left: 181, on right: 179 180
inverse_clause (213)
    on left: 182 183, on right: 75
limit_spec (214)
    on left: 184, on right: 33 176 177 185 256
list_type (215)
    on left: 185 186, on right: 20
literal (216)
    on left: 187 188 189 190 191 192 193, on right: 303
local_initializer (217)
    on left: 194, on right: 196
local_variable (218)
    on left: 195 196, on right: 198
local_body (219)
    on left: 197 198, on right: 198 199
local_decl (220)
    on left: 199, on right: 4
defined_type (221)
    on left: 200, on right: 30 126 174 175 176 177 178 201 202 290
defined_type_list (222)
    on left: 201 202, on right: 202 254 276
nested_id_list (223)
    on left: 203, on right: 78
oneof_op (224)
    on left: 204, on right: 286
optional_or_unique (225)
    on left: 205 206 207 208 209, on right: 24 137 138
optional_fixed (226)
    on left: 210 211, on right: 40 41
precision_spec (227)
    on left: 212 213, on right: 36 37 40 41
proc_call_statement (228)
    on left: 214 215, on right: 265
procedure_decl (229)
    on left: 216, on right: 68
procedure_header (230)
    on left: 219, on right: 216
@8 (231)
    on left: 217, on right: 219
@9 (232)
    on left: 218, on right: 219
procedure_id (233)
    on left: 220 221, on right: 214 215
group_ref (234)
    on left: 222, on right: 299
qualifier (235)
    on left: 223 224 225 226, on right: 25 302
query_expression (236)
    on left: 228, on right: 308
@10 (237)
    on left: 227, on right: 228
rel_op (238)
    on left: 229 230 231 232 233 234 235 236, on right: 173
repeat_statement (239)
    on left: 237 238, on right: 266
return_statement (240)
    on left: 239 240, on right: 267
right_curl (241)
    on left: 241, on right: 173
rule_decl (242)
    on left: 242, on right: 46
rule_formal_parameter (243)
    on left: 243, on right: 244 245
rule_formal_parameter_list (244)
    on left: 244 245, on right: 245 248
rule_header (245)
    on left: 248, on right: 242
@11 (246)
    on left: 246, on right: 248
@12 (247)
    on left: 247, on right: 248
schema_body (248)
    on left: 249 250, on right: 251
schema_decl (249)
    on left: 251 252, on right: 89 90
schema_header (250)
    on left: 253, on right: 251
select_type (251)
    on left: 254, on right: 291
semicolon (252)
    on left: 255, on right: 23 27 58 59 62 65 72 76 79 86 123 129 133
    152 153 154 163 165 166 168 181 195 196 199 214 215 216 219 237
    238 239 240 242 248 251 253 258 270 296 298 318 319 326 327
set_type (253)
    on left: 256 257, on right: 21
skip_statement (254)
    on left: 258, on right: 268
statement (255)
    on left: 259 260 261 262 263 264 265 266 267 268,
    on right: 50 57 271
statement_rep (256)
    on left: 269 270 271, on right: 1 23 59 152 153 237 238 270 271
subsuper_decl (257)
    on left: 272 273 274 275, on right: 76
subtype_decl (258)
    on left: 276, on right: 274 275
supertype_decl (259)
    on left: 277 278 279, on right: 273 275
supertype_expression (260)
    on left: 280 281 282, on right: 278 279 281 282 283 284 287
supertype_expression_list (261)
    on left: 283 284, on right: 284 286
supertype_factor (262)
    on left: 285 286 287, on right: 280 281 282
type (263)
    on left: 288 289 290 291, on right: 293
type_item_body (264)
    on left: 292 293, on right: 296
type_item (265)
    on left: 296, on right: 298
@13 (266)
    on left: 294, on right: 296
@14 (267)
    on left: 295, on right: 296
type_decl (268)
    on left: 298, on right: 69
@15 (269)
    on left: 297, on right: 298
general_ref (270)
    on left: 299 300, on right: 23
unary_expression (271)
    on left: 301 302 303 304 305 306 307 308 309 310 311,
    on right: 106 302 309 310 311
unique (272)
    on left: 312 313, on right: 141 142 185 186
qualified_attr (273)
    on left: 314 315, on right: 316 317
qualified_attr_list (274)
    on left: 316 317, on right: 317 318 319
labelled_attrib_list (275)
    on left: 318 319, on right: 320 321
labelled_attrib_list_list (276)
    on left: 320 321, on right: 321 323
unique_clause (277)
    on left: 322 323, on right: 75
until_control (278)
    on left: 324 325, on right: 237 238
where_clause (279)
    on left: 326 327, on right: 328 329
where_clause_list (280)
    on left: 328 329, on right: 329 330
where_rule (281)
    on left: 330, on right: 242 332
where_rule_OPT (282)
    on left: 331 332, on right: 75 298
while_control (283)
    on left: 333 334, on right: 237 238


state 0

    $default	reduce using rule 87 (@2)

    express_file	go to state 655
    @2  	go to state 1



state 1

    express_file  ->  @2 . schema_decl_list   (rule 88)

    TOK_INCLUDE	shift, and go to state 2
    TOK_SCHEMA	shift, and go to state 3

    schema_decl_list	go to state 4
    include_directive	go to state 5
    schema_decl	go to state 6
    schema_header	go to state 7



state 2

    include_directive  ->  TOK_INCLUDE . TOK_STRING_LITERAL semicolon   (rule 154)

    TOK_STRING_LITERAL	shift, and go to state 8



state 3

    schema_header  ->  TOK_SCHEMA . TOK_IDENTIFIER semicolon   (rule 253)

    TOK_IDENTIFIER	shift, and go to state 9



state 4

    express_file  ->  @2 schema_decl_list .   (rule 88)
    schema_decl_list  ->  schema_decl_list . schema_decl   (rule 90)

    TOK_INCLUDE	shift, and go to state 2
    TOK_SCHEMA	shift, and go to state 3

    $default	reduce using rule 88 (express_file)

    include_directive	go to state 5
    schema_decl	go to state 10
    schema_header	go to state 7



state 5

    schema_decl  ->  include_directive .   (rule 252)

    $default	reduce using rule 252 (schema_decl)



state 6

    schema_decl_list  ->  schema_decl .   (rule 89)

    $default	reduce using rule 89 (schema_decl_list)



state 7

    schema_decl  ->  schema_header . schema_body TOK_END_SCHEMA semicolon   (rule 251)

    $default	reduce using rule 171 (interface_specification_list)

    interface_specification_list	go to state 11
    schema_body	go to state 12



state 8

    include_directive  ->  TOK_INCLUDE TOK_STRING_LITERAL . semicolon   (rule 154)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 14



state 9

    schema_header  ->  TOK_SCHEMA TOK_IDENTIFIER . semicolon   (rule 253)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 15



state 10

    schema_decl_list  ->  schema_decl_list schema_decl .   (rule 90)

    $default	reduce using rule 90 (schema_decl_list)



state 11

    interface_specification_list  ->  interface_specification_list . interface_specification   (rule 172)
    schema_body  ->  interface_specification_list . block_list   (rule 249)
    schema_body  ->  interface_specification_list . constant_decl block_list   (rule 250)

    TOK_CONSTANT	shift, and go to state 16
    TOK_REFERENCE	shift, and go to state 17
    TOK_USE	shift, and go to state 18

    $default	reduce using rule 42 (block_list)

    block_list	go to state 19
    constant_decl	go to state 20
    reference_clause	go to state 21
    use_clause	go to state 22
    interface_specification	go to state 23



state 12

    schema_decl  ->  schema_header schema_body . TOK_END_SCHEMA semicolon   (rule 251)

    TOK_END_SCHEMA	shift, and go to state 24



state 13

    semicolon  ->  TOK_SEMICOLON .   (rule 255)

    $default	reduce using rule 255 (semicolon)



state 14

    include_directive  ->  TOK_INCLUDE TOK_STRING_LITERAL semicolon .   (rule 154)

    $default	reduce using rule 154 (include_directive)



state 15

    schema_header  ->  TOK_SCHEMA TOK_IDENTIFIER semicolon .   (rule 253)

    $default	reduce using rule 253 (schema_header)



state 16

    constant_decl  ->  TOK_CONSTANT . constant_body_list TOK_END_CONSTANT semicolon   (rule 65)

    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_IDENTIFIER	shift, and go to state 26
    TOK_SELF	shift, and go to state 27

    $default	reduce using rule 63 (constant_body_list)

    constant_body	go to state 28
    constant_body_list	go to state 29
    identifier	go to state 30



state 17

    reference_clause  ->  TOK_REFERENCE . TOK_FROM TOK_IDENTIFIER semicolon   (rule 163)
    reference_clause  ->  TOK_REFERENCE . TOK_FROM TOK_IDENTIFIER @6 parened_rename_list semicolon   (rule 165)

    TOK_FROM	shift, and go to state 31



state 18

    use_clause  ->  TOK_USE . TOK_FROM TOK_IDENTIFIER semicolon   (rule 166)
    use_clause  ->  TOK_USE . TOK_FROM TOK_IDENTIFIER @7 parened_rename_list semicolon   (rule 168)

    TOK_FROM	shift, and go to state 32



state 19

    block_list  ->  block_list . block_member   (rule 43)
    schema_body  ->  interface_specification_list block_list .   (rule 249)

    TOK_ENTITY	shift, and go to state 33
    TOK_FUNCTION	shift, and go to state 34
    TOK_INCLUDE	shift, and go to state 2
    TOK_PROCEDURE	shift, and go to state 35
    TOK_RULE	shift, and go to state 36
    TOK_TYPE	shift, and go to state 37

    $default	reduce using rule 249 (schema_body)

    block_member	go to state 38
    declaration	go to state 39
    entity_decl	go to state 40
    entity_header	go to state 41
    function_decl	go to state 42
    function_header	go to state 43
    include_directive	go to state 44
    procedure_decl	go to state 45
    procedure_header	go to state 46
    rule_decl	go to state 47
    rule_header	go to state 48
    type_decl	go to state 49



state 20

    schema_body  ->  interface_specification_list constant_decl . block_list   (rule 250)

    $default	reduce using rule 42 (block_list)

    block_list	go to state 50



state 21

    interface_specification  ->  reference_clause .   (rule 170)

    $default	reduce using rule 170 (interface_specification)



state 22

    interface_specification  ->  use_clause .   (rule 169)

    $default	reduce using rule 169 (interface_specification)



state 23

    interface_specification_list  ->  interface_specification_list interface_specification .   (rule 172)

    $default	reduce using rule 172 (interface_specification_list)



state 24

    schema_decl  ->  schema_header schema_body TOK_END_SCHEMA . semicolon   (rule 251)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 51



state 25

    identifier  ->  TOK_QUESTION_MARK .   (rule 150)

    $default	reduce using rule 150 (identifier)



state 26

    identifier  ->  TOK_IDENTIFIER .   (rule 151)

    $default	reduce using rule 151 (identifier)



state 27

    identifier  ->  TOK_SELF .   (rule 149)

    $default	reduce using rule 149 (identifier)



state 28

    constant_body_list  ->  constant_body . constant_body_list   (rule 64)

    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_IDENTIFIER	shift, and go to state 26
    TOK_SELF	shift, and go to state 27

    $default	reduce using rule 63 (constant_body_list)

    constant_body	go to state 28
    constant_body_list	go to state 52
    identifier	go to state 30



state 29

    constant_decl  ->  TOK_CONSTANT constant_body_list . TOK_END_CONSTANT semicolon   (rule 65)

    TOK_END_CONSTANT	shift, and go to state 53



state 30

    constant_body  ->  identifier . TOK_COLON attribute_type TOK_ASSIGNMENT expression semicolon   (rule 62)

    TOK_COLON	shift, and go to state 54



state 31

    reference_clause  ->  TOK_REFERENCE TOK_FROM . TOK_IDENTIFIER semicolon   (rule 163)
    reference_clause  ->  TOK_REFERENCE TOK_FROM . TOK_IDENTIFIER @6 parened_rename_list semicolon   (rule 165)

    TOK_IDENTIFIER	shift, and go to state 55



state 32

    use_clause  ->  TOK_USE TOK_FROM . TOK_IDENTIFIER semicolon   (rule 166)
    use_clause  ->  TOK_USE TOK_FROM . TOK_IDENTIFIER @7 parened_rename_list semicolon   (rule 168)

    TOK_IDENTIFIER	shift, and go to state 56



state 33

    entity_header  ->  TOK_ENTITY . TOK_IDENTIFIER   (rule 77)

    TOK_IDENTIFIER	shift, and go to state 57



state 34

    function_header  ->  TOK_FUNCTION . @3 TOK_IDENTIFIER @4 formal_parameter_list @5 TOK_COLON parameter_type semicolon   (rule 133)

    $default	reduce using rule 130 (@3)

    @3  	go to state 58



state 35

    procedure_header  ->  TOK_PROCEDURE . @8 TOK_IDENTIFIER @9 formal_parameter_list semicolon   (rule 219)

    $default	reduce using rule 217 (@8)

    @8  	go to state 59



state 36

    rule_header  ->  TOK_RULE . @11 TOK_IDENTIFIER TOK_FOR TOK_LEFT_PAREN @12 rule_formal_parameter_list TOK_RIGHT_PAREN semicolon   (rule 248)

    $default	reduce using rule 246 (@11)

    @11 	go to state 60



state 37

    type_decl  ->  TOK_TYPE . type_item where_rule_OPT @15 TOK_END_TYPE semicolon   (rule 298)

    TOK_IDENTIFIER	shift, and go to state 61

    type_item	go to state 62



state 38

    block_list  ->  block_list block_member .   (rule 43)

    $default	reduce using rule 43 (block_list)



state 39

    block_member  ->  declaration .   (rule 44)

    $default	reduce using rule 44 (block_member)



state 40

    declaration  ->  entity_decl .   (rule 66)

    $default	reduce using rule 66 (declaration)



state 41

    entity_decl  ->  entity_header . subsuper_decl semicolon entity_body TOK_END_ENTITY semicolon   (rule 76)

    TOK_ABSTRACT	shift, and go to state 63
    TOK_SUBTYPE	shift, and go to state 64
    TOK_SUPERTYPE	shift, and go to state 65

    $default	reduce using rule 272 (subsuper_decl)

    subsuper_decl	go to state 66
    subtype_decl	go to state 67
    supertype_decl	go to state 68



state 42

    declaration  ->  function_decl .   (rule 67)

    $default	reduce using rule 67 (declaration)



state 43

    function_decl  ->  function_header . action_body TOK_END_FUNCTION semicolon   (rule 129)

    TOK_CONSTANT	shift, and go to state 16
    TOK_ENTITY	shift, and go to state 33
    TOK_FUNCTION	shift, and go to state 34
    TOK_LOCAL	shift, and go to state 69
    TOK_PROCEDURE	shift, and go to state 35
    TOK_TYPE	shift, and go to state 37

    $default	reduce using rule 5 (action_body_item_rep)

    action_body	go to state 70
    action_body_item	go to state 71
    action_body_item_rep	go to state 72
    constant_decl	go to state 73
    declaration	go to state 74
    entity_decl	go to state 40
    entity_header	go to state 41
    function_decl	go to state 42
    function_header	go to state 43
    local_decl	go to state 75
    procedure_decl	go to state 45
    procedure_header	go to state 46
    type_decl	go to state 49



state 44

    block_member  ->  include_directive .   (rule 45)

    $default	reduce using rule 45 (block_member)



state 45

    declaration  ->  procedure_decl .   (rule 68)

    $default	reduce using rule 68 (declaration)



state 46

    procedure_decl  ->  procedure_header . action_body TOK_END_PROCEDURE semicolon   (rule 216)

    TOK_CONSTANT	shift, and go to state 16
    TOK_ENTITY	shift, and go to state 33
    TOK_FUNCTION	shift, and go to state 34
    TOK_LOCAL	shift, and go to state 69
    TOK_PROCEDURE	shift, and go to state 35
    TOK_TYPE	shift, and go to state 37

    $default	reduce using rule 5 (action_body_item_rep)

    action_body	go to state 76
    action_body_item	go to state 71
    action_body_item_rep	go to state 72
    constant_decl	go to state 73
    declaration	go to state 74
    entity_decl	go to state 40
    entity_header	go to state 41
    function_decl	go to state 42
    function_header	go to state 43
    local_decl	go to state 75
    procedure_decl	go to state 45
    procedure_header	go to state 46
    type_decl	go to state 49



state 47

    block_member  ->  rule_decl .   (rule 46)

    $default	reduce using rule 46 (block_member)



state 48

    rule_decl  ->  rule_header . action_body where_rule TOK_END_RULE semicolon   (rule 242)

    TOK_CONSTANT	shift, and go to state 16
    TOK_ENTITY	shift, and go to state 33
    TOK_FUNCTION	shift, and go to state 34
    TOK_LOCAL	shift, and go to state 69
    TOK_PROCEDURE	shift, and go to state 35
    TOK_TYPE	shift, and go to state 37

    $default	reduce using rule 5 (action_body_item_rep)

    action_body	go to state 77
    action_body_item	go to state 71
    action_body_item_rep	go to state 72
    constant_decl	go to state 73
    declaration	go to state 74
    entity_decl	go to state 40
    entity_header	go to state 41
    function_decl	go to state 42
    function_header	go to state 43
    local_decl	go to state 75
    procedure_decl	go to state 45
    procedure_header	go to state 46
    type_decl	go to state 49



state 49

    declaration  ->  type_decl .   (rule 69)

    $default	reduce using rule 69 (declaration)



state 50

    block_list  ->  block_list . block_member   (rule 43)
    schema_body  ->  interface_specification_list constant_decl block_list .   (rule 250)

    TOK_ENTITY	shift, and go to state 33
    TOK_FUNCTION	shift, and go to state 34
    TOK_INCLUDE	shift, and go to state 2
    TOK_PROCEDURE	shift, and go to state 35
    TOK_RULE	shift, and go to state 36
    TOK_TYPE	shift, and go to state 37

    $default	reduce using rule 250 (schema_body)

    block_member	go to state 38
    declaration	go to state 39
    entity_decl	go to state 40
    entity_header	go to state 41
    function_decl	go to state 42
    function_header	go to state 43
    include_directive	go to state 44
    procedure_decl	go to state 45
    procedure_header	go to state 46
    rule_decl	go to state 47
    rule_header	go to state 48
    type_decl	go to state 49



state 51

    schema_decl  ->  schema_header schema_body TOK_END_SCHEMA semicolon .   (rule 251)

    $default	reduce using rule 251 (schema_decl)



state 52

    constant_body_list  ->  constant_body constant_body_list .   (rule 64)

    $default	reduce using rule 64 (constant_body_list)



state 53

    constant_decl  ->  TOK_CONSTANT constant_body_list TOK_END_CONSTANT . semicolon   (rule 65)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 78



state 54

    constant_body  ->  identifier TOK_COLON . attribute_type TOK_ASSIGNMENT expression semicolon   (rule 62)

    TOK_ARRAY	shift, and go to state 79
    TOK_BAG	shift, and go to state 80
    TOK_BINARY	shift, and go to state 81
    TOK_BOOLEAN	shift, and go to state 82
    TOK_INTEGER	shift, and go to state 83
    TOK_LIST	shift, and go to state 84
    TOK_LOGICAL	shift, and go to state 85
    TOK_NUMBER	shift, and go to state 86
    TOK_REAL	shift, and go to state 87
    TOK_SET	shift, and go to state 88
    TOK_STRING	shift, and go to state 89
    TOK_IDENTIFIER	shift, and go to state 90

    aggregation_type	go to state 91
    array_type	go to state 92
    attribute_type	go to state 93
    bag_type	go to state 94
    basic_type	go to state 95
    list_type	go to state 96
    defined_type	go to state 97
    set_type	go to state 98



state 55

    reference_clause  ->  TOK_REFERENCE TOK_FROM TOK_IDENTIFIER . semicolon   (rule 163)
    reference_clause  ->  TOK_REFERENCE TOK_FROM TOK_IDENTIFIER . @6 parened_rename_list semicolon   (rule 165)

    TOK_SEMICOLON	shift, and go to state 13

    $default	reduce using rule 164 (@6)

    @6  	go to state 99
    semicolon	go to state 100



state 56

    use_clause  ->  TOK_USE TOK_FROM TOK_IDENTIFIER . semicolon   (rule 166)
    use_clause  ->  TOK_USE TOK_FROM TOK_IDENTIFIER . @7 parened_rename_list semicolon   (rule 168)

    TOK_SEMICOLON	shift, and go to state 13

    $default	reduce using rule 167 (@7)

    @7  	go to state 101
    semicolon	go to state 102



state 57

    entity_header  ->  TOK_ENTITY TOK_IDENTIFIER .   (rule 77)

    $default	reduce using rule 77 (entity_header)



state 58

    function_header  ->  TOK_FUNCTION @3 . TOK_IDENTIFIER @4 formal_parameter_list @5 TOK_COLON parameter_type semicolon   (rule 133)

    TOK_IDENTIFIER	shift, and go to state 103



state 59

    procedure_header  ->  TOK_PROCEDURE @8 . TOK_IDENTIFIER @9 formal_parameter_list semicolon   (rule 219)

    TOK_IDENTIFIER	shift, and go to state 104



state 60

    rule_header  ->  TOK_RULE @11 . TOK_IDENTIFIER TOK_FOR TOK_LEFT_PAREN @12 rule_formal_parameter_list TOK_RIGHT_PAREN semicolon   (rule 248)

    TOK_IDENTIFIER	shift, and go to state 105



state 61

    type_item  ->  TOK_IDENTIFIER . TOK_EQUAL @13 type_item_body @14 semicolon   (rule 296)

    TOK_EQUAL	shift, and go to state 106



state 62

    type_decl  ->  TOK_TYPE type_item . where_rule_OPT @15 TOK_END_TYPE semicolon   (rule 298)

    TOK_WHERE	shift, and go to state 107

    $default	reduce using rule 331 (where_rule_OPT)

    where_rule	go to state 108
    where_rule_OPT	go to state 109



state 63

    supertype_decl  ->  TOK_ABSTRACT . TOK_SUPERTYPE   (rule 277)
    supertype_decl  ->  TOK_ABSTRACT . TOK_SUPERTYPE TOK_OF TOK_LEFT_PAREN supertype_expression TOK_RIGHT_PAREN   (rule 279)

    TOK_SUPERTYPE	shift, and go to state 110



state 64

    subtype_decl  ->  TOK_SUBTYPE . TOK_OF TOK_LEFT_PAREN defined_type_list TOK_RIGHT_PAREN   (rule 276)

    TOK_OF	shift, and go to state 111



state 65

    supertype_decl  ->  TOK_SUPERTYPE . TOK_OF TOK_LEFT_PAREN supertype_expression TOK_RIGHT_PAREN   (rule 278)

    TOK_OF	shift, and go to state 112



state 66

    entity_decl  ->  entity_header subsuper_decl . semicolon entity_body TOK_END_ENTITY semicolon   (rule 76)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 113



state 67

    subsuper_decl  ->  subtype_decl .   (rule 274)

    $default	reduce using rule 274 (subsuper_decl)



state 68

    subsuper_decl  ->  supertype_decl .   (rule 273)
    subsuper_decl  ->  supertype_decl . subtype_decl   (rule 275)

    TOK_SUBTYPE	shift, and go to state 64

    $default	reduce using rule 273 (subsuper_decl)

    subtype_decl	go to state 114



state 69

    local_decl  ->  TOK_LOCAL . local_body TOK_END_LOCAL semicolon   (rule 199)

    TOK_IDENTIFIER	shift, and go to state 115

    $default	reduce using rule 197 (local_body)

    id_list	go to state 116
    local_variable	go to state 117
    local_body	go to state 118



state 70

    function_decl  ->  function_header action_body . TOK_END_FUNCTION semicolon   (rule 129)

    TOK_END_FUNCTION	shift, and go to state 119



state 71

    action_body_item_rep  ->  action_body_item . action_body_item_rep   (rule 6)

    TOK_CONSTANT	shift, and go to state 16
    TOK_ENTITY	shift, and go to state 33
    TOK_FUNCTION	shift, and go to state 34
    TOK_LOCAL	shift, and go to state 69
    TOK_PROCEDURE	shift, and go to state 35
    TOK_TYPE	shift, and go to state 37

    $default	reduce using rule 5 (action_body_item_rep)

    action_body_item	go to state 71
    action_body_item_rep	go to state 120
    constant_decl	go to state 73
    declaration	go to state 74
    entity_decl	go to state 40
    entity_header	go to state 41
    function_decl	go to state 42
    function_header	go to state 43
    local_decl	go to state 75
    procedure_decl	go to state 45
    procedure_header	go to state 46
    type_decl	go to state 49



state 72

    action_body  ->  action_body_item_rep . statement_rep   (rule 1)

    TOK_ALIAS	shift, and go to state 121
    TOK_BEGIN	shift, and go to state 122
    TOK_CASE	shift, and go to state 123
    TOK_ESCAPE	shift, and go to state 124
    TOK_IF	shift, and go to state 125
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_REPEAT	shift, and go to state 126
    TOK_RETURN	shift, and go to state 127
    TOK_SKIP	shift, and go to state 128
    TOK_BUILTIN_PROCEDURE	shift, and go to state 129
    TOK_IDENTIFIER	shift, and go to state 130
    TOK_SELF	shift, and go to state 27
    TOK_SEMICOLON	shift, and go to state 13

    $default	reduce using rule 269 (statement_rep)

    alias_statement	go to state 131
    assignable	go to state 132
    assignment_statement	go to state 133
    case_statement	go to state 134
    compound_statement	go to state 135
    escape_statement	go to state 136
    identifier	go to state 137
    if_statement	go to state 138
    proc_call_statement	go to state 139
    procedure_id	go to state 140
    repeat_statement	go to state 141
    return_statement	go to state 142
    semicolon	go to state 143
    skip_statement	go to state 144
    statement	go to state 145
    statement_rep	go to state 146



state 73

    action_body_item  ->  constant_decl .   (rule 3)

    $default	reduce using rule 3 (action_body_item)



state 74

    action_body_item  ->  declaration .   (rule 2)

    $default	reduce using rule 2 (action_body_item)



state 75

    action_body_item  ->  local_decl .   (rule 4)

    $default	reduce using rule 4 (action_body_item)



state 76

    procedure_decl  ->  procedure_header action_body . TOK_END_PROCEDURE semicolon   (rule 216)

    TOK_END_PROCEDURE	shift, and go to state 147



state 77

    rule_decl  ->  rule_header action_body . where_rule TOK_END_RULE semicolon   (rule 242)

    TOK_WHERE	shift, and go to state 107

    where_rule	go to state 148



state 78

    constant_decl  ->  TOK_CONSTANT constant_body_list TOK_END_CONSTANT semicolon .   (rule 65)

    $default	reduce using rule 65 (constant_decl)



state 79

    array_type  ->  TOK_ARRAY . index_spec TOK_OF optional_or_unique attribute_type   (rule 24)

    TOK_LEFT_BRACKET	shift, and go to state 149

    index_spec	go to state 150



state 80

    bag_type  ->  TOK_BAG . limit_spec TOK_OF attribute_type   (rule 33)
    bag_type  ->  TOK_BAG . TOK_OF attribute_type   (rule 34)

    TOK_LEFT_BRACKET	shift, and go to state 151
    TOK_OF	shift, and go to state 152

    limit_spec	go to state 153



state 81

    basic_type  ->  TOK_BINARY . precision_spec optional_fixed   (rule 40)

    TOK_LEFT_PAREN	shift, and go to state 154

    $default	reduce using rule 212 (precision_spec)

    precision_spec	go to state 155



state 82

    basic_type  ->  TOK_BOOLEAN .   (rule 35)

    $default	reduce using rule 35 (basic_type)



state 83

    basic_type  ->  TOK_INTEGER . precision_spec   (rule 36)

    TOK_LEFT_PAREN	shift, and go to state 154

    $default	reduce using rule 212 (precision_spec)

    precision_spec	go to state 156



state 84

    list_type  ->  TOK_LIST . limit_spec TOK_OF unique attribute_type   (rule 185)
    list_type  ->  TOK_LIST . TOK_OF unique attribute_type   (rule 186)

    TOK_LEFT_BRACKET	shift, and go to state 151
    TOK_OF	shift, and go to state 157

    limit_spec	go to state 158



state 85

    basic_type  ->  TOK_LOGICAL .   (rule 39)

    $default	reduce using rule 39 (basic_type)



state 86

    basic_type  ->  TOK_NUMBER .   (rule 38)

    $default	reduce using rule 38 (basic_type)



state 87

    basic_type  ->  TOK_REAL . precision_spec   (rule 37)

    TOK_LEFT_PAREN	shift, and go to state 154

    $default	reduce using rule 212 (precision_spec)

    precision_spec	go to state 159



state 88

    set_type  ->  TOK_SET . limit_spec TOK_OF attribute_type   (rule 256)
    set_type  ->  TOK_SET . TOK_OF attribute_type   (rule 257)

    TOK_LEFT_BRACKET	shift, and go to state 151
    TOK_OF	shift, and go to state 160

    limit_spec	go to state 161



state 89

    basic_type  ->  TOK_STRING . precision_spec optional_fixed   (rule 41)

    TOK_LEFT_PAREN	shift, and go to state 154

    $default	reduce using rule 212 (precision_spec)

    precision_spec	go to state 162



state 90

    defined_type  ->  TOK_IDENTIFIER .   (rule 200)

    $default	reduce using rule 200 (defined_type)



state 91

    attribute_type  ->  aggregation_type .   (rule 28)

    $default	reduce using rule 28 (attribute_type)



state 92

    aggregation_type  ->  array_type .   (rule 18)

    $default	reduce using rule 18 (aggregation_type)



state 93

    constant_body  ->  identifier TOK_COLON attribute_type . TOK_ASSIGNMENT expression semicolon   (rule 62)

    TOK_ASSIGNMENT	shift, and go to state 163



state 94

    aggregation_type  ->  bag_type .   (rule 19)

    $default	reduce using rule 19 (aggregation_type)



state 95

    attribute_type  ->  basic_type .   (rule 29)

    $default	reduce using rule 29 (attribute_type)



state 96

    aggregation_type  ->  list_type .   (rule 20)

    $default	reduce using rule 20 (aggregation_type)



state 97

    attribute_type  ->  defined_type .   (rule 30)

    $default	reduce using rule 30 (attribute_type)



state 98

    aggregation_type  ->  set_type .   (rule 21)

    $default	reduce using rule 21 (aggregation_type)



state 99

    reference_clause  ->  TOK_REFERENCE TOK_FROM TOK_IDENTIFIER @6 . parened_rename_list semicolon   (rule 165)

    TOK_LEFT_PAREN	shift, and go to state 164

    parened_rename_list	go to state 165



state 100

    reference_clause  ->  TOK_REFERENCE TOK_FROM TOK_IDENTIFIER semicolon .   (rule 163)

    $default	reduce using rule 163 (reference_clause)



state 101

    use_clause  ->  TOK_USE TOK_FROM TOK_IDENTIFIER @7 . parened_rename_list semicolon   (rule 168)

    TOK_LEFT_PAREN	shift, and go to state 164

    parened_rename_list	go to state 166



state 102

    use_clause  ->  TOK_USE TOK_FROM TOK_IDENTIFIER semicolon .   (rule 166)

    $default	reduce using rule 166 (use_clause)



state 103

    function_header  ->  TOK_FUNCTION @3 TOK_IDENTIFIER . @4 formal_parameter_list @5 TOK_COLON parameter_type semicolon   (rule 133)

    $default	reduce using rule 131 (@4)

    @4  	go to state 167



state 104

    procedure_header  ->  TOK_PROCEDURE @8 TOK_IDENTIFIER . @9 formal_parameter_list semicolon   (rule 219)

    $default	reduce using rule 218 (@9)

    @9  	go to state 168



state 105

    rule_header  ->  TOK_RULE @11 TOK_IDENTIFIER . TOK_FOR TOK_LEFT_PAREN @12 rule_formal_parameter_list TOK_RIGHT_PAREN semicolon   (rule 248)

    TOK_FOR	shift, and go to state 169



state 106

    type_item  ->  TOK_IDENTIFIER TOK_EQUAL . @13 type_item_body @14 semicolon   (rule 296)

    $default	reduce using rule 294 (@13)

    @13 	go to state 170



state 107

    where_rule  ->  TOK_WHERE . where_clause_list   (rule 330)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 183
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 190
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198
    where_clause	go to state 199
    where_clause_list	go to state 200



state 108

    where_rule_OPT  ->  where_rule .   (rule 332)

    $default	reduce using rule 332 (where_rule_OPT)



state 109

    type_decl  ->  TOK_TYPE type_item where_rule_OPT . @15 TOK_END_TYPE semicolon   (rule 298)

    $default	reduce using rule 297 (@15)

    @15 	go to state 201



state 110

    supertype_decl  ->  TOK_ABSTRACT TOK_SUPERTYPE .   (rule 277)
    supertype_decl  ->  TOK_ABSTRACT TOK_SUPERTYPE . TOK_OF TOK_LEFT_PAREN supertype_expression TOK_RIGHT_PAREN   (rule 279)

    TOK_OF	shift, and go to state 202

    $default	reduce using rule 277 (supertype_decl)



state 111

    subtype_decl  ->  TOK_SUBTYPE TOK_OF . TOK_LEFT_PAREN defined_type_list TOK_RIGHT_PAREN   (rule 276)

    TOK_LEFT_PAREN	shift, and go to state 203



state 112

    supertype_decl  ->  TOK_SUPERTYPE TOK_OF . TOK_LEFT_PAREN supertype_expression TOK_RIGHT_PAREN   (rule 278)

    TOK_LEFT_PAREN	shift, and go to state 204



state 113

    entity_decl  ->  entity_header subsuper_decl semicolon . entity_body TOK_END_ENTITY semicolon   (rule 76)

    $default	reduce using rule 31 (explicit_attr_list)

    explicit_attr_list	go to state 205
    entity_body	go to state 206



state 114

    subsuper_decl  ->  supertype_decl subtype_decl .   (rule 275)

    $default	reduce using rule 275 (subsuper_decl)



state 115

    id_list  ->  TOK_IDENTIFIER .   (rule 147)

    $default	reduce using rule 147 (id_list)



state 116

    id_list  ->  id_list . TOK_COMMA TOK_IDENTIFIER   (rule 148)
    local_variable  ->  id_list . TOK_COLON parameter_type semicolon   (rule 195)
    local_variable  ->  id_list . TOK_COLON parameter_type local_initializer semicolon   (rule 196)

    TOK_COLON	shift, and go to state 207
    TOK_COMMA	shift, and go to state 208



state 117

    local_body  ->  local_variable . local_body   (rule 198)

    TOK_IDENTIFIER	shift, and go to state 115

    $default	reduce using rule 197 (local_body)

    id_list	go to state 116
    local_variable	go to state 117
    local_body	go to state 209



state 118

    local_decl  ->  TOK_LOCAL local_body . TOK_END_LOCAL semicolon   (rule 199)

    TOK_END_LOCAL	shift, and go to state 210



state 119

    function_decl  ->  function_header action_body TOK_END_FUNCTION . semicolon   (rule 129)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 211



state 120

    action_body_item_rep  ->  action_body_item action_body_item_rep .   (rule 6)

    $default	reduce using rule 6 (action_body_item_rep)



state 121

    alias_statement  ->  TOK_ALIAS . TOK_IDENTIFIER TOK_FOR general_ref semicolon @1 statement_rep TOK_END_ALIAS semicolon   (rule 23)

    TOK_IDENTIFIER	shift, and go to state 212



state 122

    compound_statement  ->  TOK_BEGIN . statement_rep TOK_END semicolon   (rule 59)

    TOK_ALIAS	shift, and go to state 121
    TOK_BEGIN	shift, and go to state 122
    TOK_CASE	shift, and go to state 123
    TOK_ESCAPE	shift, and go to state 124
    TOK_IF	shift, and go to state 125
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_REPEAT	shift, and go to state 126
    TOK_RETURN	shift, and go to state 127
    TOK_SKIP	shift, and go to state 128
    TOK_BUILTIN_PROCEDURE	shift, and go to state 129
    TOK_IDENTIFIER	shift, and go to state 130
    TOK_SELF	shift, and go to state 27
    TOK_SEMICOLON	shift, and go to state 13

    $default	reduce using rule 269 (statement_rep)

    alias_statement	go to state 131
    assignable	go to state 132
    assignment_statement	go to state 133
    case_statement	go to state 134
    compound_statement	go to state 135
    escape_statement	go to state 136
    identifier	go to state 137
    if_statement	go to state 138
    proc_call_statement	go to state 139
    procedure_id	go to state 140
    repeat_statement	go to state 141
    return_statement	go to state 142
    semicolon	go to state 143
    skip_statement	go to state 144
    statement	go to state 145
    statement_rep	go to state 213



state 123

    case_statement  ->  TOK_CASE . expression TOK_OF case_block TOK_END_CASE semicolon   (rule 58)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 215
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 124

    escape_statement  ->  TOK_ESCAPE . semicolon   (rule 79)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 216



state 125

    if_statement  ->  TOK_IF . expression TOK_THEN statement_rep TOK_END_IF semicolon   (rule 152)
    if_statement  ->  TOK_IF . expression TOK_THEN statement_rep TOK_ELSE statement_rep TOK_END_IF semicolon   (rule 153)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 217
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 126

    repeat_statement  ->  TOK_REPEAT . increment_control while_control until_control semicolon statement_rep TOK_END_REPEAT semicolon   (rule 237)
    repeat_statement  ->  TOK_REPEAT . while_control until_control semicolon statement_rep TOK_END_REPEAT semicolon   (rule 238)

    TOK_WHILE	shift, and go to state 218
    TOK_IDENTIFIER	shift, and go to state 219

    $default	reduce using rule 333 (while_control)

    increment_control	go to state 220
    while_control	go to state 221



state 127

    return_statement  ->  TOK_RETURN . semicolon   (rule 239)
    return_statement  ->  TOK_RETURN . TOK_LEFT_PAREN expression TOK_RIGHT_PAREN semicolon   (rule 240)

    TOK_LEFT_PAREN	shift, and go to state 222
    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 223



state 128

    skip_statement  ->  TOK_SKIP . semicolon   (rule 258)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 224



state 129

    procedure_id  ->  TOK_BUILTIN_PROCEDURE .   (rule 221)

    $default	reduce using rule 221 (procedure_id)



state 130

    identifier  ->  TOK_IDENTIFIER .   (rule 151)
    procedure_id  ->  TOK_IDENTIFIER .   (rule 220)

    $default	reduce using rule 151 (identifier)



state 131

    statement  ->  alias_statement .   (rule 259)

    $default	reduce using rule 259 (statement)



state 132

    assignable  ->  assignable . qualifier   (rule 25)
    assignment_statement  ->  assignable . TOK_ASSIGNMENT expression semicolon   (rule 27)

    TOK_DOT	shift, and go to state 225
    TOK_BACKSLASH	shift, and go to state 226
    TOK_LEFT_BRACKET	shift, and go to state 227
    TOK_ASSIGNMENT	shift, and go to state 228

    qualifier	go to state 229



state 133

    statement  ->  assignment_statement .   (rule 260)

    $default	reduce using rule 260 (statement)



state 134

    statement  ->  case_statement .   (rule 261)

    $default	reduce using rule 261 (statement)



state 135

    statement  ->  compound_statement .   (rule 262)

    $default	reduce using rule 262 (statement)



state 136

    statement  ->  escape_statement .   (rule 263)

    $default	reduce using rule 263 (statement)



state 137

    assignable  ->  identifier .   (rule 26)

    $default	reduce using rule 26 (assignable)



state 138

    statement  ->  if_statement .   (rule 264)

    $default	reduce using rule 264 (statement)



state 139

    statement  ->  proc_call_statement .   (rule 265)

    $default	reduce using rule 265 (statement)



state 140

    proc_call_statement  ->  procedure_id . actual_parameters semicolon   (rule 214)
    proc_call_statement  ->  procedure_id . semicolon   (rule 215)

    TOK_LEFT_PAREN	shift, and go to state 230
    TOK_SEMICOLON	shift, and go to state 13

    actual_parameters	go to state 231
    semicolon	go to state 232



state 141

    statement  ->  repeat_statement .   (rule 266)

    $default	reduce using rule 266 (statement)



state 142

    statement  ->  return_statement .   (rule 267)

    $default	reduce using rule 267 (statement)



state 143

    statement_rep  ->  semicolon . statement_rep   (rule 270)

    TOK_ALIAS	shift, and go to state 121
    TOK_BEGIN	shift, and go to state 122
    TOK_CASE	shift, and go to state 123
    TOK_ESCAPE	shift, and go to state 124
    TOK_IF	shift, and go to state 125
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_REPEAT	shift, and go to state 126
    TOK_RETURN	shift, and go to state 127
    TOK_SKIP	shift, and go to state 128
    TOK_BUILTIN_PROCEDURE	shift, and go to state 129
    TOK_IDENTIFIER	shift, and go to state 130
    TOK_SELF	shift, and go to state 27
    TOK_SEMICOLON	shift, and go to state 13

    $default	reduce using rule 269 (statement_rep)

    alias_statement	go to state 131
    assignable	go to state 132
    assignment_statement	go to state 133
    case_statement	go to state 134
    compound_statement	go to state 135
    escape_statement	go to state 136
    identifier	go to state 137
    if_statement	go to state 138
    proc_call_statement	go to state 139
    procedure_id	go to state 140
    repeat_statement	go to state 141
    return_statement	go to state 142
    semicolon	go to state 143
    skip_statement	go to state 144
    statement	go to state 145
    statement_rep	go to state 233



state 144

    statement  ->  skip_statement .   (rule 268)

    $default	reduce using rule 268 (statement)



state 145

    statement_rep  ->  statement . statement_rep   (rule 271)

    TOK_ALIAS	shift, and go to state 121
    TOK_BEGIN	shift, and go to state 122
    TOK_CASE	shift, and go to state 123
    TOK_ESCAPE	shift, and go to state 124
    TOK_IF	shift, and go to state 125
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_REPEAT	shift, and go to state 126
    TOK_RETURN	shift, and go to state 127
    TOK_SKIP	shift, and go to state 128
    TOK_BUILTIN_PROCEDURE	shift, and go to state 129
    TOK_IDENTIFIER	shift, and go to state 130
    TOK_SELF	shift, and go to state 27
    TOK_SEMICOLON	shift, and go to state 13

    $default	reduce using rule 269 (statement_rep)

    alias_statement	go to state 131
    assignable	go to state 132
    assignment_statement	go to state 133
    case_statement	go to state 134
    compound_statement	go to state 135
    escape_statement	go to state 136
    identifier	go to state 137
    if_statement	go to state 138
    proc_call_statement	go to state 139
    procedure_id	go to state 140
    repeat_statement	go to state 141
    return_statement	go to state 142
    semicolon	go to state 143
    skip_statement	go to state 144
    statement	go to state 145
    statement_rep	go to state 234



state 146

    action_body  ->  action_body_item_rep statement_rep .   (rule 1)

    $default	reduce using rule 1 (action_body)



state 147

    procedure_decl  ->  procedure_header action_body TOK_END_PROCEDURE . semicolon   (rule 216)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 235



state 148

    rule_decl  ->  rule_header action_body where_rule . TOK_END_RULE semicolon   (rule 242)

    TOK_END_RULE	shift, and go to state 236



state 149

    index_spec  ->  TOK_LEFT_BRACKET . expression TOK_COLON expression TOK_RIGHT_BRACKET   (rule 156)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 237
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 150

    array_type  ->  TOK_ARRAY index_spec . TOK_OF optional_or_unique attribute_type   (rule 24)

    TOK_OF	shift, and go to state 238



state 151

    limit_spec  ->  TOK_LEFT_BRACKET . expression TOK_COLON expression TOK_RIGHT_BRACKET   (rule 184)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 239
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 152

    bag_type  ->  TOK_BAG TOK_OF . attribute_type   (rule 34)

    TOK_ARRAY	shift, and go to state 79
    TOK_BAG	shift, and go to state 80
    TOK_BINARY	shift, and go to state 81
    TOK_BOOLEAN	shift, and go to state 82
    TOK_INTEGER	shift, and go to state 83
    TOK_LIST	shift, and go to state 84
    TOK_LOGICAL	shift, and go to state 85
    TOK_NUMBER	shift, and go to state 86
    TOK_REAL	shift, and go to state 87
    TOK_SET	shift, and go to state 88
    TOK_STRING	shift, and go to state 89
    TOK_IDENTIFIER	shift, and go to state 90

    aggregation_type	go to state 91
    array_type	go to state 92
    attribute_type	go to state 240
    bag_type	go to state 94
    basic_type	go to state 95
    list_type	go to state 96
    defined_type	go to state 97
    set_type	go to state 98



state 153

    bag_type  ->  TOK_BAG limit_spec . TOK_OF attribute_type   (rule 33)

    TOK_OF	shift, and go to state 241



state 154

    precision_spec  ->  TOK_LEFT_PAREN . expression TOK_RIGHT_PAREN   (rule 213)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 242
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 155

    basic_type  ->  TOK_BINARY precision_spec . optional_fixed   (rule 40)

    TOK_FIXED	shift, and go to state 243

    $default	reduce using rule 210 (optional_fixed)

    optional_fixed	go to state 244



state 156

    basic_type  ->  TOK_INTEGER precision_spec .   (rule 36)

    $default	reduce using rule 36 (basic_type)



state 157

    list_type  ->  TOK_LIST TOK_OF . unique attribute_type   (rule 186)

    TOK_UNIQUE	shift, and go to state 245

    $default	reduce using rule 312 (unique)

    unique	go to state 246



state 158

    list_type  ->  TOK_LIST limit_spec . TOK_OF unique attribute_type   (rule 185)

    TOK_OF	shift, and go to state 247



state 159

    basic_type  ->  TOK_REAL precision_spec .   (rule 37)

    $default	reduce using rule 37 (basic_type)



state 160

    set_type  ->  TOK_SET TOK_OF . attribute_type   (rule 257)

    TOK_ARRAY	shift, and go to state 79
    TOK_BAG	shift, and go to state 80
    TOK_BINARY	shift, and go to state 81
    TOK_BOOLEAN	shift, and go to state 82
    TOK_INTEGER	shift, and go to state 83
    TOK_LIST	shift, and go to state 84
    TOK_LOGICAL	shift, and go to state 85
    TOK_NUMBER	shift, and go to state 86
    TOK_REAL	shift, and go to state 87
    TOK_SET	shift, and go to state 88
    TOK_STRING	shift, and go to state 89
    TOK_IDENTIFIER	shift, and go to state 90

    aggregation_type	go to state 91
    array_type	go to state 92
    attribute_type	go to state 248
    bag_type	go to state 94
    basic_type	go to state 95
    list_type	go to state 96
    defined_type	go to state 97
    set_type	go to state 98



state 161

    set_type  ->  TOK_SET limit_spec . TOK_OF attribute_type   (rule 256)

    TOK_OF	shift, and go to state 249



state 162

    basic_type  ->  TOK_STRING precision_spec . optional_fixed   (rule 41)

    TOK_FIXED	shift, and go to state 243

    $default	reduce using rule 210 (optional_fixed)

    optional_fixed	go to state 250



state 163

    constant_body  ->  identifier TOK_COLON attribute_type TOK_ASSIGNMENT . expression semicolon   (rule 62)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 251
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 164

    parened_rename_list  ->  TOK_LEFT_PAREN . rename_list TOK_RIGHT_PAREN   (rule 162)

    TOK_IDENTIFIER	shift, and go to state 252

    rename	go to state 253
    rename_list	go to state 254



state 165

    reference_clause  ->  TOK_REFERENCE TOK_FROM TOK_IDENTIFIER @6 parened_rename_list . semicolon   (rule 165)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 255



state 166

    use_clause  ->  TOK_USE TOK_FROM TOK_IDENTIFIER @7 parened_rename_list . semicolon   (rule 168)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 256



state 167

    function_header  ->  TOK_FUNCTION @3 TOK_IDENTIFIER @4 . formal_parameter_list @5 TOK_COLON parameter_type semicolon   (rule 133)

    TOK_LEFT_PAREN	shift, and go to state 257

    $default	reduce using rule 120 (formal_parameter_list)

    formal_parameter_list	go to state 258



state 168

    procedure_header  ->  TOK_PROCEDURE @8 TOK_IDENTIFIER @9 . formal_parameter_list semicolon   (rule 219)

    TOK_LEFT_PAREN	shift, and go to state 257

    $default	reduce using rule 120 (formal_parameter_list)

    formal_parameter_list	go to state 259



state 169

    rule_header  ->  TOK_RULE @11 TOK_IDENTIFIER TOK_FOR . TOK_LEFT_PAREN @12 rule_formal_parameter_list TOK_RIGHT_PAREN semicolon   (rule 248)

    TOK_LEFT_PAREN	shift, and go to state 260



state 170

    type_item  ->  TOK_IDENTIFIER TOK_EQUAL @13 . type_item_body @14 semicolon   (rule 296)

    TOK_ARRAY	shift, and go to state 79
    TOK_BAG	shift, and go to state 80
    TOK_BINARY	shift, and go to state 81
    TOK_BOOLEAN	shift, and go to state 82
    TOK_ENUMERATION	shift, and go to state 261
    TOK_INTEGER	shift, and go to state 83
    TOK_LIST	shift, and go to state 84
    TOK_LOGICAL	shift, and go to state 85
    TOK_NUMBER	shift, and go to state 86
    TOK_REAL	shift, and go to state 87
    TOK_SELECT	shift, and go to state 262
    TOK_SET	shift, and go to state 88
    TOK_STRING	shift, and go to state 89
    TOK_IDENTIFIER	shift, and go to state 90

    aggregation_type	go to state 263
    array_type	go to state 92
    bag_type	go to state 94
    basic_type	go to state 264
    enumeration_type	go to state 265
    list_type	go to state 96
    defined_type	go to state 266
    select_type	go to state 267
    set_type	go to state 98
    type	go to state 268
    type_item_body	go to state 269



state 171

    unary_expression  ->  TOK_MINUS . unary_expression   (rule 311)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 270



state 172

    unary_expression  ->  TOK_PLUS . unary_expression   (rule 310)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 271



state 173

    unary_expression  ->  TOK_NOT . unary_expression   (rule 309)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 272



state 174

    aggregate_initializer  ->  TOK_LEFT_BRACKET . TOK_RIGHT_BRACKET   (rule 9)
    aggregate_initializer  ->  TOK_LEFT_BRACKET . aggregate_init_body TOK_RIGHT_BRACKET   (rule 10)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_RIGHT_BRACKET	shift, and go to state 273
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    aggregate_init_element	go to state 274
    aggregate_init_body	go to state 275
    constant	go to state 189
    expression	go to state 276
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 175

    constant  ->  TOK_E .   (rule 61)

    $default	reduce using rule 61 (constant)



state 176

    interval  ->  TOK_LEFT_CURL . simple_expression rel_op simple_expression rel_op simple_expression right_curl   (rule 173)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    simple_expression	go to state 277
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 177

    unary_expression  ->  TOK_LEFT_PAREN . expression TOK_RIGHT_PAREN   (rule 306)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 278
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 178

    constant  ->  TOK_PI .   (rule 60)

    $default	reduce using rule 60 (constant)



state 179

    query_expression  ->  TOK_QUERY . TOK_LEFT_PAREN TOK_IDENTIFIER TOK_ALL_IN expression TOK_SUCH_THAT @10 expression TOK_RIGHT_PAREN   (rule 228)

    TOK_LEFT_PAREN	shift, and go to state 279



state 180

    literal  ->  TOK_STRING_LITERAL .   (rule 189)

    $default	reduce using rule 189 (literal)



state 181

    literal  ->  TOK_STRING_LITERAL_ENCODED .   (rule 190)

    $default	reduce using rule 190 (literal)



state 182

    function_id  ->  TOK_BUILTIN_FUNCTION .   (rule 135)

    $default	reduce using rule 135 (function_id)



state 183

    function_id  ->  TOK_IDENTIFIER .   (rule 134)
    identifier  ->  TOK_IDENTIFIER .   (rule 151)
    where_clause  ->  TOK_IDENTIFIER . TOK_COLON expression semicolon   (rule 327)

    TOK_COLON	shift, and go to state 280

    TOK_COLON	[reduce using rule 151 (identifier)]
    $default	reduce using rule 151 (identifier)



state 184

    literal  ->  TOK_INTEGER_LITERAL .   (rule 187)

    $default	reduce using rule 187 (literal)



state 185

    literal  ->  TOK_REAL_LITERAL .   (rule 188)

    $default	reduce using rule 188 (literal)



state 186

    literal  ->  TOK_LOGICAL_LITERAL .   (rule 191)

    $default	reduce using rule 191 (literal)



state 187

    literal  ->  TOK_BINARY_LITERAL .   (rule 192)

    $default	reduce using rule 192 (literal)



state 188

    unary_expression  ->  aggregate_initializer .   (rule 301)

    $default	reduce using rule 301 (unary_expression)



state 189

    literal  ->  constant .   (rule 193)

    $default	reduce using rule 193 (literal)



state 190

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)
    where_clause  ->  expression . semicolon   (rule 326)

    TOK_EQUAL	shift, and go to state 281
    TOK_GREATER_EQUAL	shift, and go to state 282
    TOK_GREATER_THAN	shift, and go to state 283
    TOK_IN	shift, and go to state 284
    TOK_INST_EQUAL	shift, and go to state 285
    TOK_INST_NOT_EQUAL	shift, and go to state 286
    TOK_LESS_EQUAL	shift, and go to state 287
    TOK_LESS_THAN	shift, and go to state 288
    TOK_LIKE	shift, and go to state 289
    TOK_NOT_EQUAL	shift, and go to state 290
    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293
    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 294



state 191

    expression  ->  simple_expression .   (rule 91)
    expression  ->  simple_expression . cardinality_op simple_expression   (rule 105)
    simple_expression  ->  simple_expression . TOK_CONCAT_OP simple_expression   (rule 107)
    simple_expression  ->  simple_expression . TOK_EXP simple_expression   (rule 108)
    simple_expression  ->  simple_expression . TOK_TIMES simple_expression   (rule 109)
    simple_expression  ->  simple_expression . TOK_DIV simple_expression   (rule 110)
    simple_expression  ->  simple_expression . TOK_REAL_DIV simple_expression   (rule 111)
    simple_expression  ->  simple_expression . TOK_MOD simple_expression   (rule 112)
    simple_expression  ->  simple_expression . TOK_PLUS simple_expression   (rule 113)
    simple_expression  ->  simple_expression . TOK_MINUS simple_expression   (rule 114)

    TOK_MINUS	shift, and go to state 295
    TOK_PLUS	shift, and go to state 296
    TOK_DIV	shift, and go to state 297
    TOK_MOD	shift, and go to state 298
    TOK_REAL_DIV	shift, and go to state 299
    TOK_TIMES	shift, and go to state 300
    TOK_CONCAT_OP	shift, and go to state 301
    TOK_EXP	shift, and go to state 302
    TOK_LEFT_CURL	shift, and go to state 303

    $default	reduce using rule 91 (expression)

    cardinality_op	go to state 304



state 192

    unary_expression  ->  function_call .   (rule 304)

    $default	reduce using rule 304 (unary_expression)



state 193

    function_call  ->  function_id . actual_parameters   (rule 128)

    TOK_LEFT_PAREN	shift, and go to state 230

    actual_parameters	go to state 305



state 194

    unary_expression  ->  identifier .   (rule 305)

    $default	reduce using rule 305 (unary_expression)



state 195

    unary_expression  ->  interval .   (rule 307)

    $default	reduce using rule 307 (unary_expression)



state 196

    unary_expression  ->  literal .   (rule 303)

    $default	reduce using rule 303 (unary_expression)



state 197

    unary_expression  ->  query_expression .   (rule 308)

    $default	reduce using rule 308 (unary_expression)



state 198

    simple_expression  ->  unary_expression .   (rule 106)
    unary_expression  ->  unary_expression . qualifier   (rule 302)

    TOK_DOT	shift, and go to state 225
    TOK_BACKSLASH	shift, and go to state 226
    TOK_LEFT_BRACKET	shift, and go to state 227

    $default	reduce using rule 106 (simple_expression)

    qualifier	go to state 306



state 199

    where_clause_list  ->  where_clause .   (rule 328)

    $default	reduce using rule 328 (where_clause_list)



state 200

    where_clause_list  ->  where_clause_list . where_clause   (rule 329)
    where_rule  ->  TOK_WHERE where_clause_list .   (rule 330)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 183
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    $default	reduce using rule 330 (where_rule)

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 190
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198
    where_clause	go to state 307



state 201

    type_decl  ->  TOK_TYPE type_item where_rule_OPT @15 . TOK_END_TYPE semicolon   (rule 298)

    TOK_END_TYPE	shift, and go to state 308



state 202

    supertype_decl  ->  TOK_ABSTRACT TOK_SUPERTYPE TOK_OF . TOK_LEFT_PAREN supertype_expression TOK_RIGHT_PAREN   (rule 279)

    TOK_LEFT_PAREN	shift, and go to state 309



state 203

    subtype_decl  ->  TOK_SUBTYPE TOK_OF TOK_LEFT_PAREN . defined_type_list TOK_RIGHT_PAREN   (rule 276)

    TOK_IDENTIFIER	shift, and go to state 90

    defined_type	go to state 310
    defined_type_list	go to state 311



state 204

    supertype_decl  ->  TOK_SUPERTYPE TOK_OF TOK_LEFT_PAREN . supertype_expression TOK_RIGHT_PAREN   (rule 278)

    TOK_LEFT_PAREN	shift, and go to state 312
    TOK_ONEOF	shift, and go to state 313
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_IDENTIFIER	shift, and go to state 26
    TOK_SELF	shift, and go to state 27

    identifier	go to state 314
    oneof_op	go to state 315
    supertype_expression	go to state 316
    supertype_factor	go to state 317



state 205

    explicit_attr_list  ->  explicit_attr_list . explicit_attribute   (rule 32)
    entity_body  ->  explicit_attr_list . derive_decl inverse_clause unique_clause where_rule_OPT   (rule 75)

    TOK_DERIVE	shift, and go to state 318
    TOK_IDENTIFIER	shift, and go to state 319
    TOK_SELF	shift, and go to state 320

    $default	reduce using rule 70 (derive_decl)

    derive_decl	go to state 321
    attribute_decl	go to state 322
    attribute_decl_list	go to state 323
    explicit_attribute	go to state 324



state 206

    entity_decl  ->  entity_header subsuper_decl semicolon entity_body . TOK_END_ENTITY semicolon   (rule 76)

    TOK_END_ENTITY	shift, and go to state 325



state 207

    local_variable  ->  id_list TOK_COLON . parameter_type semicolon   (rule 195)
    local_variable  ->  id_list TOK_COLON . parameter_type local_initializer semicolon   (rule 196)

    TOK_AGGREGATE	shift, and go to state 326
    TOK_ARRAY	shift, and go to state 327
    TOK_BAG	shift, and go to state 328
    TOK_BINARY	shift, and go to state 81
    TOK_BOOLEAN	shift, and go to state 82
    TOK_GENERIC	shift, and go to state 329
    TOK_INTEGER	shift, and go to state 83
    TOK_LIST	shift, and go to state 330
    TOK_LOGICAL	shift, and go to state 85
    TOK_NUMBER	shift, and go to state 86
    TOK_REAL	shift, and go to state 87
    TOK_SET	shift, and go to state 331
    TOK_STRING	shift, and go to state 89
    TOK_IDENTIFIER	shift, and go to state 90

    aggregate_type	go to state 332
    basic_type	go to state 333
    parameter_type	go to state 334
    conformant_aggregation	go to state 335
    generic_type	go to state 336
    defined_type	go to state 337



state 208

    id_list  ->  id_list TOK_COMMA . TOK_IDENTIFIER   (rule 148)

    TOK_IDENTIFIER	shift, and go to state 338



state 209

    local_body  ->  local_variable local_body .   (rule 198)

    $default	reduce using rule 198 (local_body)



state 210

    local_decl  ->  TOK_LOCAL local_body TOK_END_LOCAL . semicolon   (rule 199)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 339



state 211

    function_decl  ->  function_header action_body TOK_END_FUNCTION semicolon .   (rule 129)

    $default	reduce using rule 129 (function_decl)



state 212

    alias_statement  ->  TOK_ALIAS TOK_IDENTIFIER . TOK_FOR general_ref semicolon @1 statement_rep TOK_END_ALIAS semicolon   (rule 23)

    TOK_FOR	shift, and go to state 340



state 213

    compound_statement  ->  TOK_BEGIN statement_rep . TOK_END semicolon   (rule 59)

    TOK_END	shift, and go to state 341



state 214

    function_id  ->  TOK_IDENTIFIER .   (rule 134)
    identifier  ->  TOK_IDENTIFIER .   (rule 151)

    $default	reduce using rule 151 (identifier)



state 215

    case_statement  ->  TOK_CASE expression . TOK_OF case_block TOK_END_CASE semicolon   (rule 58)
    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)

    TOK_EQUAL	shift, and go to state 281
    TOK_GREATER_EQUAL	shift, and go to state 282
    TOK_GREATER_THAN	shift, and go to state 283
    TOK_IN	shift, and go to state 284
    TOK_INST_EQUAL	shift, and go to state 285
    TOK_INST_NOT_EQUAL	shift, and go to state 286
    TOK_LESS_EQUAL	shift, and go to state 287
    TOK_LESS_THAN	shift, and go to state 288
    TOK_LIKE	shift, and go to state 289
    TOK_NOT_EQUAL	shift, and go to state 290
    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293
    TOK_OF	shift, and go to state 342



state 216

    escape_statement  ->  TOK_ESCAPE semicolon .   (rule 79)

    $default	reduce using rule 79 (escape_statement)



state 217

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)
    if_statement  ->  TOK_IF expression . TOK_THEN statement_rep TOK_END_IF semicolon   (rule 152)
    if_statement  ->  TOK_IF expression . TOK_THEN statement_rep TOK_ELSE statement_rep TOK_END_IF semicolon   (rule 153)

    TOK_EQUAL	shift, and go to state 281
    TOK_GREATER_EQUAL	shift, and go to state 282
    TOK_GREATER_THAN	shift, and go to state 283
    TOK_IN	shift, and go to state 284
    TOK_INST_EQUAL	shift, and go to state 285
    TOK_INST_NOT_EQUAL	shift, and go to state 286
    TOK_LESS_EQUAL	shift, and go to state 287
    TOK_LESS_THAN	shift, and go to state 288
    TOK_LIKE	shift, and go to state 289
    TOK_NOT_EQUAL	shift, and go to state 290
    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293
    TOK_THEN	shift, and go to state 343



state 218

    while_control  ->  TOK_WHILE . expression   (rule 334)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 344
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 219

    increment_control  ->  TOK_IDENTIFIER . TOK_ASSIGNMENT expression TOK_TO expression by_expression   (rule 155)

    TOK_ASSIGNMENT	shift, and go to state 345



state 220

    repeat_statement  ->  TOK_REPEAT increment_control . while_control until_control semicolon statement_rep TOK_END_REPEAT semicolon   (rule 237)

    TOK_WHILE	shift, and go to state 218

    $default	reduce using rule 333 (while_control)

    while_control	go to state 346



state 221

    repeat_statement  ->  TOK_REPEAT while_control . until_control semicolon statement_rep TOK_END_REPEAT semicolon   (rule 238)

    TOK_UNTIL	shift, and go to state 347

    $default	reduce using rule 324 (until_control)

    until_control	go to state 348



state 222

    return_statement  ->  TOK_RETURN TOK_LEFT_PAREN . expression TOK_RIGHT_PAREN semicolon   (rule 240)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 349
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 223

    return_statement  ->  TOK_RETURN semicolon .   (rule 239)

    $default	reduce using rule 239 (return_statement)



state 224

    skip_statement  ->  TOK_SKIP semicolon .   (rule 258)

    $default	reduce using rule 258 (skip_statement)



state 225

    qualifier  ->  TOK_DOT . TOK_IDENTIFIER   (rule 223)

    TOK_IDENTIFIER	shift, and go to state 350



state 226

    qualifier  ->  TOK_BACKSLASH . TOK_IDENTIFIER   (rule 224)

    TOK_IDENTIFIER	shift, and go to state 351



state 227

    qualifier  ->  TOK_LEFT_BRACKET . simple_expression TOK_RIGHT_BRACKET   (rule 225)
    qualifier  ->  TOK_LEFT_BRACKET . simple_expression TOK_COLON simple_expression TOK_RIGHT_BRACKET   (rule 226)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    simple_expression	go to state 352
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 228

    assignment_statement  ->  assignable TOK_ASSIGNMENT . expression semicolon   (rule 27)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 353
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 229

    assignable  ->  assignable qualifier .   (rule 25)

    $default	reduce using rule 25 (assignable)



state 230

    actual_parameters  ->  TOK_LEFT_PAREN . expression_list TOK_RIGHT_PAREN   (rule 7)
    actual_parameters  ->  TOK_LEFT_PAREN . TOK_RIGHT_PAREN   (rule 8)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_RIGHT_PAREN	shift, and go to state 354
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 355
    simple_expression	go to state 191
    expression_list	go to state 356
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 231

    proc_call_statement  ->  procedure_id actual_parameters . semicolon   (rule 214)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 357



state 232

    proc_call_statement  ->  procedure_id semicolon .   (rule 215)

    $default	reduce using rule 215 (proc_call_statement)



state 233

    statement_rep  ->  semicolon statement_rep .   (rule 270)

    $default	reduce using rule 270 (statement_rep)



state 234

    statement_rep  ->  statement statement_rep .   (rule 271)

    $default	reduce using rule 271 (statement_rep)



state 235

    procedure_decl  ->  procedure_header action_body TOK_END_PROCEDURE semicolon .   (rule 216)

    $default	reduce using rule 216 (procedure_decl)



state 236

    rule_decl  ->  rule_header action_body where_rule TOK_END_RULE . semicolon   (rule 242)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 358



state 237

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)
    index_spec  ->  TOK_LEFT_BRACKET expression . TOK_COLON expression TOK_RIGHT_BRACKET   (rule 156)

    TOK_EQUAL	shift, and go to state 281
    TOK_GREATER_EQUAL	shift, and go to state 282
    TOK_GREATER_THAN	shift, and go to state 283
    TOK_IN	shift, and go to state 284
    TOK_INST_EQUAL	shift, and go to state 285
    TOK_INST_NOT_EQUAL	shift, and go to state 286
    TOK_LESS_EQUAL	shift, and go to state 287
    TOK_LESS_THAN	shift, and go to state 288
    TOK_LIKE	shift, and go to state 289
    TOK_NOT_EQUAL	shift, and go to state 290
    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293
    TOK_COLON	shift, and go to state 359



state 238

    array_type  ->  TOK_ARRAY index_spec TOK_OF . optional_or_unique attribute_type   (rule 24)

    TOK_OPTIONAL	shift, and go to state 360
    TOK_UNIQUE	shift, and go to state 361

    $default	reduce using rule 205 (optional_or_unique)

    optional_or_unique	go to state 362



state 239

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)
    limit_spec  ->  TOK_LEFT_BRACKET expression . TOK_COLON expression TOK_RIGHT_BRACKET   (rule 184)

    TOK_EQUAL	shift, and go to state 281
    TOK_GREATER_EQUAL	shift, and go to state 282
    TOK_GREATER_THAN	shift, and go to state 283
    TOK_IN	shift, and go to state 284
    TOK_INST_EQUAL	shift, and go to state 285
    TOK_INST_NOT_EQUAL	shift, and go to state 286
    TOK_LESS_EQUAL	shift, and go to state 287
    TOK_LESS_THAN	shift, and go to state 288
    TOK_LIKE	shift, and go to state 289
    TOK_NOT_EQUAL	shift, and go to state 290
    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293
    TOK_COLON	shift, and go to state 363



state 240

    bag_type  ->  TOK_BAG TOK_OF attribute_type .   (rule 34)

    $default	reduce using rule 34 (bag_type)



state 241

    bag_type  ->  TOK_BAG limit_spec TOK_OF . attribute_type   (rule 33)

    TOK_ARRAY	shift, and go to state 79
    TOK_BAG	shift, and go to state 80
    TOK_BINARY	shift, and go to state 81
    TOK_BOOLEAN	shift, and go to state 82
    TOK_INTEGER	shift, and go to state 83
    TOK_LIST	shift, and go to state 84
    TOK_LOGICAL	shift, and go to state 85
    TOK_NUMBER	shift, and go to state 86
    TOK_REAL	shift, and go to state 87
    TOK_SET	shift, and go to state 88
    TOK_STRING	shift, and go to state 89
    TOK_IDENTIFIER	shift, and go to state 90

    aggregation_type	go to state 91
    array_type	go to state 92
    attribute_type	go to state 364
    bag_type	go to state 94
    basic_type	go to state 95
    list_type	go to state 96
    defined_type	go to state 97
    set_type	go to state 98



state 242

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)
    precision_spec  ->  TOK_LEFT_PAREN expression . TOK_RIGHT_PAREN   (rule 213)

    TOK_EQUAL	shift, and go to state 281
    TOK_GREATER_EQUAL	shift, and go to state 282
    TOK_GREATER_THAN	shift, and go to state 283
    TOK_IN	shift, and go to state 284
    TOK_INST_EQUAL	shift, and go to state 285
    TOK_INST_NOT_EQUAL	shift, and go to state 286
    TOK_LESS_EQUAL	shift, and go to state 287
    TOK_LESS_THAN	shift, and go to state 288
    TOK_LIKE	shift, and go to state 289
    TOK_NOT_EQUAL	shift, and go to state 290
    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293
    TOK_RIGHT_PAREN	shift, and go to state 365



state 243

    optional_fixed  ->  TOK_FIXED .   (rule 211)

    $default	reduce using rule 211 (optional_fixed)



state 244

    basic_type  ->  TOK_BINARY precision_spec optional_fixed .   (rule 40)

    $default	reduce using rule 40 (basic_type)



state 245

    unique  ->  TOK_UNIQUE .   (rule 313)

    $default	reduce using rule 313 (unique)



state 246

    list_type  ->  TOK_LIST TOK_OF unique . attribute_type   (rule 186)

    TOK_ARRAY	shift, and go to state 79
    TOK_BAG	shift, and go to state 80
    TOK_BINARY	shift, and go to state 81
    TOK_BOOLEAN	shift, and go to state 82
    TOK_INTEGER	shift, and go to state 83
    TOK_LIST	shift, and go to state 84
    TOK_LOGICAL	shift, and go to state 85
    TOK_NUMBER	shift, and go to state 86
    TOK_REAL	shift, and go to state 87
    TOK_SET	shift, and go to state 88
    TOK_STRING	shift, and go to state 89
    TOK_IDENTIFIER	shift, and go to state 90

    aggregation_type	go to state 91
    array_type	go to state 92
    attribute_type	go to state 366
    bag_type	go to state 94
    basic_type	go to state 95
    list_type	go to state 96
    defined_type	go to state 97
    set_type	go to state 98



state 247

    list_type  ->  TOK_LIST limit_spec TOK_OF . unique attribute_type   (rule 185)

    TOK_UNIQUE	shift, and go to state 245

    $default	reduce using rule 312 (unique)

    unique	go to state 367



state 248

    set_type  ->  TOK_SET TOK_OF attribute_type .   (rule 257)

    $default	reduce using rule 257 (set_type)



state 249

    set_type  ->  TOK_SET limit_spec TOK_OF . attribute_type   (rule 256)

    TOK_ARRAY	shift, and go to state 79
    TOK_BAG	shift, and go to state 80
    TOK_BINARY	shift, and go to state 81
    TOK_BOOLEAN	shift, and go to state 82
    TOK_INTEGER	shift, and go to state 83
    TOK_LIST	shift, and go to state 84
    TOK_LOGICAL	shift, and go to state 85
    TOK_NUMBER	shift, and go to state 86
    TOK_REAL	shift, and go to state 87
    TOK_SET	shift, and go to state 88
    TOK_STRING	shift, and go to state 89
    TOK_IDENTIFIER	shift, and go to state 90

    aggregation_type	go to state 91
    array_type	go to state 92
    attribute_type	go to state 368
    bag_type	go to state 94
    basic_type	go to state 95
    list_type	go to state 96
    defined_type	go to state 97
    set_type	go to state 98



state 250

    basic_type  ->  TOK_STRING precision_spec optional_fixed .   (rule 41)

    $default	reduce using rule 41 (basic_type)



state 251

    constant_body  ->  identifier TOK_COLON attribute_type TOK_ASSIGNMENT expression . semicolon   (rule 62)
    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)

    TOK_EQUAL	shift, and go to state 281
    TOK_GREATER_EQUAL	shift, and go to state 282
    TOK_GREATER_THAN	shift, and go to state 283
    TOK_IN	shift, and go to state 284
    TOK_INST_EQUAL	shift, and go to state 285
    TOK_INST_NOT_EQUAL	shift, and go to state 286
    TOK_LESS_EQUAL	shift, and go to state 287
    TOK_LESS_THAN	shift, and go to state 288
    TOK_LIKE	shift, and go to state 289
    TOK_NOT_EQUAL	shift, and go to state 290
    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293
    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 369



state 252

    rename  ->  TOK_IDENTIFIER .   (rule 158)
    rename  ->  TOK_IDENTIFIER . TOK_AS TOK_IDENTIFIER   (rule 159)

    TOK_AS	shift, and go to state 370

    $default	reduce using rule 158 (rename)



state 253

    rename_list  ->  rename .   (rule 160)

    $default	reduce using rule 160 (rename_list)



state 254

    rename_list  ->  rename_list . TOK_COMMA rename   (rule 161)
    parened_rename_list  ->  TOK_LEFT_PAREN rename_list . TOK_RIGHT_PAREN   (rule 162)

    TOK_COMMA	shift, and go to state 371
    TOK_RIGHT_PAREN	shift, and go to state 372



state 255

    reference_clause  ->  TOK_REFERENCE TOK_FROM TOK_IDENTIFIER @6 parened_rename_list semicolon .   (rule 165)

    $default	reduce using rule 165 (reference_clause)



state 256

    use_clause  ->  TOK_USE TOK_FROM TOK_IDENTIFIER @7 parened_rename_list semicolon .   (rule 168)

    $default	reduce using rule 168 (use_clause)



state 257

    formal_parameter_list  ->  TOK_LEFT_PAREN . formal_parameter_rep TOK_RIGHT_PAREN   (rule 121)

    TOK_VAR	shift, and go to state 373

    $default	reduce using rule 117 (var)

    var 	go to state 374
    formal_parameter	go to state 375
    formal_parameter_rep	go to state 376



state 258

    function_header  ->  TOK_FUNCTION @3 TOK_IDENTIFIER @4 formal_parameter_list . @5 TOK_COLON parameter_type semicolon   (rule 133)

    $default	reduce using rule 132 (@5)

    @5  	go to state 377



state 259

    procedure_header  ->  TOK_PROCEDURE @8 TOK_IDENTIFIER @9 formal_parameter_list . semicolon   (rule 219)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 378



state 260

    rule_header  ->  TOK_RULE @11 TOK_IDENTIFIER TOK_FOR TOK_LEFT_PAREN . @12 rule_formal_parameter_list TOK_RIGHT_PAREN semicolon   (rule 248)

    $default	reduce using rule 247 (@12)

    @12 	go to state 379



state 261

    enumeration_type  ->  TOK_ENUMERATION . TOK_OF nested_id_list   (rule 78)

    TOK_OF	shift, and go to state 380



state 262

    select_type  ->  TOK_SELECT . TOK_LEFT_PAREN defined_type_list TOK_RIGHT_PAREN   (rule 254)

    TOK_LEFT_PAREN	shift, and go to state 381



state 263

    type  ->  aggregation_type .   (rule 288)

    $default	reduce using rule 288 (type)



state 264

    type  ->  basic_type .   (rule 289)

    $default	reduce using rule 289 (type)



state 265

    type_item_body  ->  enumeration_type .   (rule 292)

    $default	reduce using rule 292 (type_item_body)



state 266

    type  ->  defined_type .   (rule 290)

    $default	reduce using rule 290 (type)



state 267

    type  ->  select_type .   (rule 291)

    $default	reduce using rule 291 (type)



state 268

    type_item_body  ->  type .   (rule 293)

    $default	reduce using rule 293 (type_item_body)



state 269

    type_item  ->  TOK_IDENTIFIER TOK_EQUAL @13 type_item_body . @14 semicolon   (rule 296)

    $default	reduce using rule 295 (@14)

    @14 	go to state 382



state 270

    unary_expression  ->  unary_expression . qualifier   (rule 302)
    unary_expression  ->  TOK_MINUS unary_expression .   (rule 311)

    TOK_DOT	shift, and go to state 225
    TOK_BACKSLASH	shift, and go to state 226
    TOK_LEFT_BRACKET	shift, and go to state 227

    $default	reduce using rule 311 (unary_expression)

    qualifier	go to state 306



state 271

    unary_expression  ->  unary_expression . qualifier   (rule 302)
    unary_expression  ->  TOK_PLUS unary_expression .   (rule 310)

    TOK_DOT	shift, and go to state 225
    TOK_BACKSLASH	shift, and go to state 226
    TOK_LEFT_BRACKET	shift, and go to state 227

    $default	reduce using rule 310 (unary_expression)

    qualifier	go to state 306



state 272

    unary_expression  ->  unary_expression . qualifier   (rule 302)
    unary_expression  ->  TOK_NOT unary_expression .   (rule 309)

    TOK_DOT	shift, and go to state 225
    TOK_BACKSLASH	shift, and go to state 226
    TOK_LEFT_BRACKET	shift, and go to state 227

    $default	reduce using rule 309 (unary_expression)

    qualifier	go to state 306



state 273

    aggregate_initializer  ->  TOK_LEFT_BRACKET TOK_RIGHT_BRACKET .   (rule 9)

    $default	reduce using rule 9 (aggregate_initializer)



state 274

    aggregate_init_body  ->  aggregate_init_element .   (rule 12)
    aggregate_init_body  ->  aggregate_init_element . TOK_COLON expression   (rule 13)

    TOK_COLON	shift, and go to state 383

    $default	reduce using rule 12 (aggregate_init_body)



state 275

    aggregate_initializer  ->  TOK_LEFT_BRACKET aggregate_init_body . TOK_RIGHT_BRACKET   (rule 10)
    aggregate_init_body  ->  aggregate_init_body . TOK_COMMA aggregate_init_element   (rule 14)
    aggregate_init_body  ->  aggregate_init_body . TOK_COMMA aggregate_init_element TOK_COLON expression   (rule 15)

    TOK_COMMA	shift, and go to state 384
    TOK_RIGHT_BRACKET	shift, and go to state 385



state 276

    aggregate_init_element  ->  expression .   (rule 11)
    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)

    TOK_EQUAL	shift, and go to state 281
    TOK_GREATER_EQUAL	shift, and go to state 282
    TOK_GREATER_THAN	shift, and go to state 283
    TOK_IN	shift, and go to state 284
    TOK_INST_EQUAL	shift, and go to state 285
    TOK_INST_NOT_EQUAL	shift, and go to state 286
    TOK_LESS_EQUAL	shift, and go to state 287
    TOK_LESS_THAN	shift, and go to state 288
    TOK_LIKE	shift, and go to state 289
    TOK_NOT_EQUAL	shift, and go to state 290
    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293

    $default	reduce using rule 11 (aggregate_init_element)



state 277

    simple_expression  ->  simple_expression . TOK_CONCAT_OP simple_expression   (rule 107)
    simple_expression  ->  simple_expression . TOK_EXP simple_expression   (rule 108)
    simple_expression  ->  simple_expression . TOK_TIMES simple_expression   (rule 109)
    simple_expression  ->  simple_expression . TOK_DIV simple_expression   (rule 110)
    simple_expression  ->  simple_expression . TOK_REAL_DIV simple_expression   (rule 111)
    simple_expression  ->  simple_expression . TOK_MOD simple_expression   (rule 112)
    simple_expression  ->  simple_expression . TOK_PLUS simple_expression   (rule 113)
    simple_expression  ->  simple_expression . TOK_MINUS simple_expression   (rule 114)
    interval  ->  TOK_LEFT_CURL simple_expression . rel_op simple_expression rel_op simple_expression right_curl   (rule 173)

    TOK_EQUAL	shift, and go to state 386
    TOK_GREATER_EQUAL	shift, and go to state 387
    TOK_GREATER_THAN	shift, and go to state 388
    TOK_INST_EQUAL	shift, and go to state 389
    TOK_INST_NOT_EQUAL	shift, and go to state 390
    TOK_LESS_EQUAL	shift, and go to state 391
    TOK_LESS_THAN	shift, and go to state 392
    TOK_NOT_EQUAL	shift, and go to state 393
    TOK_MINUS	shift, and go to state 295
    TOK_PLUS	shift, and go to state 296
    TOK_DIV	shift, and go to state 297
    TOK_MOD	shift, and go to state 298
    TOK_REAL_DIV	shift, and go to state 299
    TOK_TIMES	shift, and go to state 300
    TOK_CONCAT_OP	shift, and go to state 301
    TOK_EXP	shift, and go to state 302

    rel_op	go to state 394



state 278

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)
    unary_expression  ->  TOK_LEFT_PAREN expression . TOK_RIGHT_PAREN   (rule 306)

    TOK_EQUAL	shift, and go to state 281
    TOK_GREATER_EQUAL	shift, and go to state 282
    TOK_GREATER_THAN	shift, and go to state 283
    TOK_IN	shift, and go to state 284
    TOK_INST_EQUAL	shift, and go to state 285
    TOK_INST_NOT_EQUAL	shift, and go to state 286
    TOK_LESS_EQUAL	shift, and go to state 287
    TOK_LESS_THAN	shift, and go to state 288
    TOK_LIKE	shift, and go to state 289
    TOK_NOT_EQUAL	shift, and go to state 290
    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293
    TOK_RIGHT_PAREN	shift, and go to state 395



state 279

    query_expression  ->  TOK_QUERY TOK_LEFT_PAREN . TOK_IDENTIFIER TOK_ALL_IN expression TOK_SUCH_THAT @10 expression TOK_RIGHT_PAREN   (rule 228)

    TOK_IDENTIFIER	shift, and go to state 396



state 280

    where_clause  ->  TOK_IDENTIFIER TOK_COLON . expression semicolon   (rule 327)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 397
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 281

    expression  ->  expression TOK_EQUAL . expression   (rule 97)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 398
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 282

    expression  ->  expression TOK_GREATER_EQUAL . expression   (rule 99)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 399
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 283

    expression  ->  expression TOK_GREATER_THAN . expression   (rule 96)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 400
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 284

    expression  ->  expression TOK_IN . expression   (rule 103)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 401
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 285

    expression  ->  expression TOK_INST_EQUAL . expression   (rule 101)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 402
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 286

    expression  ->  expression TOK_INST_NOT_EQUAL . expression   (rule 102)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 403
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 287

    expression  ->  expression TOK_LESS_EQUAL . expression   (rule 98)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 404
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 288

    expression  ->  expression TOK_LESS_THAN . expression   (rule 95)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 405
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 289

    expression  ->  expression TOK_LIKE . expression   (rule 104)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 406
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 290

    expression  ->  expression TOK_NOT_EQUAL . expression   (rule 100)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 407
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 291

    expression  ->  expression TOK_OR . expression   (rule 93)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 408
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 292

    expression  ->  expression TOK_XOR . expression   (rule 94)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 409
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 293

    expression  ->  expression TOK_AND . expression   (rule 92)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 410
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 294

    where_clause  ->  expression semicolon .   (rule 326)

    $default	reduce using rule 326 (where_clause)



state 295

    simple_expression  ->  simple_expression TOK_MINUS . simple_expression   (rule 114)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    simple_expression	go to state 411
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 296

    simple_expression  ->  simple_expression TOK_PLUS . simple_expression   (rule 113)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    simple_expression	go to state 412
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 297

    simple_expression  ->  simple_expression TOK_DIV . simple_expression   (rule 110)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    simple_expression	go to state 413
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 298

    simple_expression  ->  simple_expression TOK_MOD . simple_expression   (rule 112)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    simple_expression	go to state 414
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 299

    simple_expression  ->  simple_expression TOK_REAL_DIV . simple_expression   (rule 111)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    simple_expression	go to state 415
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 300

    simple_expression  ->  simple_expression TOK_TIMES . simple_expression   (rule 109)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    simple_expression	go to state 416
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 301

    simple_expression  ->  simple_expression TOK_CONCAT_OP . simple_expression   (rule 107)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    simple_expression	go to state 417
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 302

    simple_expression  ->  simple_expression TOK_EXP . simple_expression   (rule 108)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    simple_expression	go to state 418
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 303

    cardinality_op  ->  TOK_LEFT_CURL . expression TOK_COLON expression TOK_RIGHT_CURL   (rule 49)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 419
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 304

    expression  ->  simple_expression cardinality_op . simple_expression   (rule 105)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    simple_expression	go to state 420
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 305

    function_call  ->  function_id actual_parameters .   (rule 128)

    $default	reduce using rule 128 (function_call)



state 306

    unary_expression  ->  unary_expression qualifier .   (rule 302)

    $default	reduce using rule 302 (unary_expression)



state 307

    where_clause_list  ->  where_clause_list where_clause .   (rule 329)

    $default	reduce using rule 329 (where_clause_list)



state 308

    type_decl  ->  TOK_TYPE type_item where_rule_OPT @15 TOK_END_TYPE . semicolon   (rule 298)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 421



state 309

    supertype_decl  ->  TOK_ABSTRACT TOK_SUPERTYPE TOK_OF TOK_LEFT_PAREN . supertype_expression TOK_RIGHT_PAREN   (rule 279)

    TOK_LEFT_PAREN	shift, and go to state 312
    TOK_ONEOF	shift, and go to state 313
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_IDENTIFIER	shift, and go to state 26
    TOK_SELF	shift, and go to state 27

    identifier	go to state 314
    oneof_op	go to state 315
    supertype_expression	go to state 422
    supertype_factor	go to state 317



state 310

    defined_type_list  ->  defined_type .   (rule 201)

    $default	reduce using rule 201 (defined_type_list)



state 311

    defined_type_list  ->  defined_type_list . TOK_COMMA defined_type   (rule 202)
    subtype_decl  ->  TOK_SUBTYPE TOK_OF TOK_LEFT_PAREN defined_type_list . TOK_RIGHT_PAREN   (rule 276)

    TOK_COMMA	shift, and go to state 423
    TOK_RIGHT_PAREN	shift, and go to state 424



state 312

    supertype_factor  ->  TOK_LEFT_PAREN . supertype_expression TOK_RIGHT_PAREN   (rule 287)

    TOK_LEFT_PAREN	shift, and go to state 312
    TOK_ONEOF	shift, and go to state 313
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_IDENTIFIER	shift, and go to state 26
    TOK_SELF	shift, and go to state 27

    identifier	go to state 314
    oneof_op	go to state 315
    supertype_expression	go to state 425
    supertype_factor	go to state 317



state 313

    oneof_op  ->  TOK_ONEOF .   (rule 204)

    $default	reduce using rule 204 (oneof_op)



state 314

    supertype_factor  ->  identifier .   (rule 285)

    $default	reduce using rule 285 (supertype_factor)



state 315

    supertype_factor  ->  oneof_op . TOK_LEFT_PAREN supertype_expression_list TOK_RIGHT_PAREN   (rule 286)

    TOK_LEFT_PAREN	shift, and go to state 426



state 316

    supertype_decl  ->  TOK_SUPERTYPE TOK_OF TOK_LEFT_PAREN supertype_expression . TOK_RIGHT_PAREN   (rule 278)
    supertype_expression  ->  supertype_expression . TOK_AND supertype_factor   (rule 281)
    supertype_expression  ->  supertype_expression . TOK_ANDOR supertype_factor   (rule 282)

    TOK_AND	shift, and go to state 427
    TOK_ANDOR	shift, and go to state 428
    TOK_RIGHT_PAREN	shift, and go to state 429



state 317

    supertype_expression  ->  supertype_factor .   (rule 280)

    $default	reduce using rule 280 (supertype_expression)



state 318

    derive_decl  ->  TOK_DERIVE . derived_attribute_rep   (rule 71)

    TOK_IDENTIFIER	shift, and go to state 319
    TOK_SELF	shift, and go to state 320

    derived_attribute	go to state 430
    derived_attribute_rep	go to state 431
    attribute_decl	go to state 432



state 319

    attribute_decl  ->  TOK_IDENTIFIER .   (rule 80)

    $default	reduce using rule 80 (attribute_decl)



state 320

    attribute_decl  ->  TOK_SELF . TOK_BACKSLASH TOK_IDENTIFIER TOK_DOT TOK_IDENTIFIER   (rule 81)

    TOK_BACKSLASH	shift, and go to state 433



state 321

    entity_body  ->  explicit_attr_list derive_decl . inverse_clause unique_clause where_rule_OPT   (rule 75)

    TOK_INVERSE	shift, and go to state 434

    $default	reduce using rule 182 (inverse_clause)

    inverse_clause	go to state 435



state 322

    attribute_decl_list  ->  attribute_decl .   (rule 82)

    $default	reduce using rule 82 (attribute_decl_list)



state 323

    attribute_decl_list  ->  attribute_decl_list . TOK_COMMA attribute_decl   (rule 83)
    explicit_attribute  ->  attribute_decl_list . TOK_COLON optional attribute_type semicolon   (rule 86)

    TOK_COLON	shift, and go to state 436
    TOK_COMMA	shift, and go to state 437



state 324

    explicit_attr_list  ->  explicit_attr_list explicit_attribute .   (rule 32)

    $default	reduce using rule 32 (explicit_attr_list)



state 325

    entity_decl  ->  entity_header subsuper_decl semicolon entity_body TOK_END_ENTITY . semicolon   (rule 76)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 438



state 326

    aggregate_type  ->  TOK_AGGREGATE . TOK_OF parameter_type   (rule 16)
    aggregate_type  ->  TOK_AGGREGATE . TOK_COLON TOK_IDENTIFIER TOK_OF parameter_type   (rule 17)

    TOK_COLON	shift, and go to state 439
    TOK_OF	shift, and go to state 440



state 327

    conformant_aggregation  ->  TOK_ARRAY . TOK_OF optional_or_unique parameter_type   (rule 137)
    conformant_aggregation  ->  TOK_ARRAY . index_spec TOK_OF optional_or_unique parameter_type   (rule 138)

    TOK_LEFT_BRACKET	shift, and go to state 149
    TOK_OF	shift, and go to state 441

    index_spec	go to state 442



state 328

    conformant_aggregation  ->  TOK_BAG . TOK_OF parameter_type   (rule 139)
    conformant_aggregation  ->  TOK_BAG . index_spec TOK_OF parameter_type   (rule 140)

    TOK_LEFT_BRACKET	shift, and go to state 149
    TOK_OF	shift, and go to state 443

    index_spec	go to state 444



state 329

    generic_type  ->  TOK_GENERIC .   (rule 145)
    generic_type  ->  TOK_GENERIC . TOK_COLON TOK_IDENTIFIER   (rule 146)

    TOK_COLON	shift, and go to state 445

    $default	reduce using rule 145 (generic_type)



state 330

    conformant_aggregation  ->  TOK_LIST . TOK_OF unique parameter_type   (rule 141)
    conformant_aggregation  ->  TOK_LIST . index_spec TOK_OF unique parameter_type   (rule 142)

    TOK_LEFT_BRACKET	shift, and go to state 149
    TOK_OF	shift, and go to state 446

    index_spec	go to state 447



state 331

    conformant_aggregation  ->  TOK_SET . TOK_OF parameter_type   (rule 143)
    conformant_aggregation  ->  TOK_SET . index_spec TOK_OF parameter_type   (rule 144)

    TOK_LEFT_BRACKET	shift, and go to state 149
    TOK_OF	shift, and go to state 448

    index_spec	go to state 449



state 332

    conformant_aggregation  ->  aggregate_type .   (rule 136)

    $default	reduce using rule 136 (conformant_aggregation)



state 333

    parameter_type  ->  basic_type .   (rule 124)

    $default	reduce using rule 124 (parameter_type)



state 334

    local_variable  ->  id_list TOK_COLON parameter_type . semicolon   (rule 195)
    local_variable  ->  id_list TOK_COLON parameter_type . local_initializer semicolon   (rule 196)

    TOK_ASSIGNMENT	shift, and go to state 450
    TOK_SEMICOLON	shift, and go to state 13

    local_initializer	go to state 451
    semicolon	go to state 452



state 335

    parameter_type  ->  conformant_aggregation .   (rule 125)

    $default	reduce using rule 125 (parameter_type)



state 336

    parameter_type  ->  generic_type .   (rule 127)

    $default	reduce using rule 127 (parameter_type)



state 337

    parameter_type  ->  defined_type .   (rule 126)

    $default	reduce using rule 126 (parameter_type)



state 338

    id_list  ->  id_list TOK_COMMA TOK_IDENTIFIER .   (rule 148)

    $default	reduce using rule 148 (id_list)



state 339

    local_decl  ->  TOK_LOCAL local_body TOK_END_LOCAL semicolon .   (rule 199)

    $default	reduce using rule 199 (local_decl)



state 340

    alias_statement  ->  TOK_ALIAS TOK_IDENTIFIER TOK_FOR . general_ref semicolon @1 statement_rep TOK_END_ALIAS semicolon   (rule 23)

    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_IDENTIFIER	shift, and go to state 26
    TOK_SELF	shift, and go to state 27

    assignable	go to state 453
    identifier	go to state 137
    general_ref	go to state 454



state 341

    compound_statement  ->  TOK_BEGIN statement_rep TOK_END . semicolon   (rule 59)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 455



state 342

    case_statement  ->  TOK_CASE expression TOK_OF . case_block TOK_END_CASE semicolon   (rule 58)

    $default	reduce using rule 51 (case_action_list)

    case_action_list	go to state 456
    case_block	go to state 457



state 343

    if_statement  ->  TOK_IF expression TOK_THEN . statement_rep TOK_END_IF semicolon   (rule 152)
    if_statement  ->  TOK_IF expression TOK_THEN . statement_rep TOK_ELSE statement_rep TOK_END_IF semicolon   (rule 153)

    TOK_ALIAS	shift, and go to state 121
    TOK_BEGIN	shift, and go to state 122
    TOK_CASE	shift, and go to state 123
    TOK_ESCAPE	shift, and go to state 124
    TOK_IF	shift, and go to state 125
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_REPEAT	shift, and go to state 126
    TOK_RETURN	shift, and go to state 127
    TOK_SKIP	shift, and go to state 128
    TOK_BUILTIN_PROCEDURE	shift, and go to state 129
    TOK_IDENTIFIER	shift, and go to state 130
    TOK_SELF	shift, and go to state 27
    TOK_SEMICOLON	shift, and go to state 13

    $default	reduce using rule 269 (statement_rep)

    alias_statement	go to state 131
    assignable	go to state 132
    assignment_statement	go to state 133
    case_statement	go to state 134
    compound_statement	go to state 135
    escape_statement	go to state 136
    identifier	go to state 137
    if_statement	go to state 138
    proc_call_statement	go to state 139
    procedure_id	go to state 140
    repeat_statement	go to state 141
    return_statement	go to state 142
    semicolon	go to state 143
    skip_statement	go to state 144
    statement	go to state 145
    statement_rep	go to state 458



state 344

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)
    while_control  ->  TOK_WHILE expression .   (rule 334)

    TOK_EQUAL	shift, and go to state 281
    TOK_GREATER_EQUAL	shift, and go to state 282
    TOK_GREATER_THAN	shift, and go to state 283
    TOK_IN	shift, and go to state 284
    TOK_INST_EQUAL	shift, and go to state 285
    TOK_INST_NOT_EQUAL	shift, and go to state 286
    TOK_LESS_EQUAL	shift, and go to state 287
    TOK_LESS_THAN	shift, and go to state 288
    TOK_LIKE	shift, and go to state 289
    TOK_NOT_EQUAL	shift, and go to state 290
    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293

    $default	reduce using rule 334 (while_control)



state 345

    increment_control  ->  TOK_IDENTIFIER TOK_ASSIGNMENT . expression TOK_TO expression by_expression   (rule 155)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 459
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 346

    repeat_statement  ->  TOK_REPEAT increment_control while_control . until_control semicolon statement_rep TOK_END_REPEAT semicolon   (rule 237)

    TOK_UNTIL	shift, and go to state 347

    $default	reduce using rule 324 (until_control)

    until_control	go to state 460



state 347

    until_control  ->  TOK_UNTIL . expression   (rule 325)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 461
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 348

    repeat_statement  ->  TOK_REPEAT while_control until_control . semicolon statement_rep TOK_END_REPEAT semicolon   (rule 238)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 462



state 349

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)
    return_statement  ->  TOK_RETURN TOK_LEFT_PAREN expression . TOK_RIGHT_PAREN semicolon   (rule 240)

    TOK_EQUAL	shift, and go to state 281
    TOK_GREATER_EQUAL	shift, and go to state 282
    TOK_GREATER_THAN	shift, and go to state 283
    TOK_IN	shift, and go to state 284
    TOK_INST_EQUAL	shift, and go to state 285
    TOK_INST_NOT_EQUAL	shift, and go to state 286
    TOK_LESS_EQUAL	shift, and go to state 287
    TOK_LESS_THAN	shift, and go to state 288
    TOK_LIKE	shift, and go to state 289
    TOK_NOT_EQUAL	shift, and go to state 290
    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293
    TOK_RIGHT_PAREN	shift, and go to state 463



state 350

    qualifier  ->  TOK_DOT TOK_IDENTIFIER .   (rule 223)

    $default	reduce using rule 223 (qualifier)



state 351

    qualifier  ->  TOK_BACKSLASH TOK_IDENTIFIER .   (rule 224)

    $default	reduce using rule 224 (qualifier)



state 352

    simple_expression  ->  simple_expression . TOK_CONCAT_OP simple_expression   (rule 107)
    simple_expression  ->  simple_expression . TOK_EXP simple_expression   (rule 108)
    simple_expression  ->  simple_expression . TOK_TIMES simple_expression   (rule 109)
    simple_expression  ->  simple_expression . TOK_DIV simple_expression   (rule 110)
    simple_expression  ->  simple_expression . TOK_REAL_DIV simple_expression   (rule 111)
    simple_expression  ->  simple_expression . TOK_MOD simple_expression   (rule 112)
    simple_expression  ->  simple_expression . TOK_PLUS simple_expression   (rule 113)
    simple_expression  ->  simple_expression . TOK_MINUS simple_expression   (rule 114)
    qualifier  ->  TOK_LEFT_BRACKET simple_expression . TOK_RIGHT_BRACKET   (rule 225)
    qualifier  ->  TOK_LEFT_BRACKET simple_expression . TOK_COLON simple_expression TOK_RIGHT_BRACKET   (rule 226)

    TOK_MINUS	shift, and go to state 295
    TOK_PLUS	shift, and go to state 296
    TOK_DIV	shift, and go to state 297
    TOK_MOD	shift, and go to state 298
    TOK_REAL_DIV	shift, and go to state 299
    TOK_TIMES	shift, and go to state 300
    TOK_CONCAT_OP	shift, and go to state 301
    TOK_EXP	shift, and go to state 302
    TOK_COLON	shift, and go to state 464
    TOK_RIGHT_BRACKET	shift, and go to state 465



state 353

    assignment_statement  ->  assignable TOK_ASSIGNMENT expression . semicolon   (rule 27)
    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)

    TOK_EQUAL	shift, and go to state 281
    TOK_GREATER_EQUAL	shift, and go to state 282
    TOK_GREATER_THAN	shift, and go to state 283
    TOK_IN	shift, and go to state 284
    TOK_INST_EQUAL	shift, and go to state 285
    TOK_INST_NOT_EQUAL	shift, and go to state 286
    TOK_LESS_EQUAL	shift, and go to state 287
    TOK_LESS_THAN	shift, and go to state 288
    TOK_LIKE	shift, and go to state 289
    TOK_NOT_EQUAL	shift, and go to state 290
    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293
    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 466



state 354

    actual_parameters  ->  TOK_LEFT_PAREN TOK_RIGHT_PAREN .   (rule 8)

    $default	reduce using rule 8 (actual_parameters)



state 355

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)
    expression_list  ->  expression .   (rule 115)

    TOK_EQUAL	shift, and go to state 281
    TOK_GREATER_EQUAL	shift, and go to state 282
    TOK_GREATER_THAN	shift, and go to state 283
    TOK_IN	shift, and go to state 284
    TOK_INST_EQUAL	shift, and go to state 285
    TOK_INST_NOT_EQUAL	shift, and go to state 286
    TOK_LESS_EQUAL	shift, and go to state 287
    TOK_LESS_THAN	shift, and go to state 288
    TOK_LIKE	shift, and go to state 289
    TOK_NOT_EQUAL	shift, and go to state 290
    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293

    $default	reduce using rule 115 (expression_list)



state 356

    actual_parameters  ->  TOK_LEFT_PAREN expression_list . TOK_RIGHT_PAREN   (rule 7)
    expression_list  ->  expression_list . TOK_COMMA expression   (rule 116)

    TOK_COMMA	shift, and go to state 467
    TOK_RIGHT_PAREN	shift, and go to state 468



state 357

    proc_call_statement  ->  procedure_id actual_parameters semicolon .   (rule 214)

    $default	reduce using rule 214 (proc_call_statement)



state 358

    rule_decl  ->  rule_header action_body where_rule TOK_END_RULE semicolon .   (rule 242)

    $default	reduce using rule 242 (rule_decl)



state 359

    index_spec  ->  TOK_LEFT_BRACKET expression TOK_COLON . expression TOK_RIGHT_BRACKET   (rule 156)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 469
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 360

    optional_or_unique  ->  TOK_OPTIONAL .   (rule 206)
    optional_or_unique  ->  TOK_OPTIONAL . TOK_UNIQUE   (rule 208)

    TOK_UNIQUE	shift, and go to state 470

    $default	reduce using rule 206 (optional_or_unique)



state 361

    optional_or_unique  ->  TOK_UNIQUE .   (rule 207)
    optional_or_unique  ->  TOK_UNIQUE . TOK_OPTIONAL   (rule 209)

    TOK_OPTIONAL	shift, and go to state 471

    $default	reduce using rule 207 (optional_or_unique)



state 362

    array_type  ->  TOK_ARRAY index_spec TOK_OF optional_or_unique . attribute_type   (rule 24)

    TOK_ARRAY	shift, and go to state 79
    TOK_BAG	shift, and go to state 80
    TOK_BINARY	shift, and go to state 81
    TOK_BOOLEAN	shift, and go to state 82
    TOK_INTEGER	shift, and go to state 83
    TOK_LIST	shift, and go to state 84
    TOK_LOGICAL	shift, and go to state 85
    TOK_NUMBER	shift, and go to state 86
    TOK_REAL	shift, and go to state 87
    TOK_SET	shift, and go to state 88
    TOK_STRING	shift, and go to state 89
    TOK_IDENTIFIER	shift, and go to state 90

    aggregation_type	go to state 91
    array_type	go to state 92
    attribute_type	go to state 472
    bag_type	go to state 94
    basic_type	go to state 95
    list_type	go to state 96
    defined_type	go to state 97
    set_type	go to state 98



state 363

    limit_spec  ->  TOK_LEFT_BRACKET expression TOK_COLON . expression TOK_RIGHT_BRACKET   (rule 184)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 473
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 364

    bag_type  ->  TOK_BAG limit_spec TOK_OF attribute_type .   (rule 33)

    $default	reduce using rule 33 (bag_type)



state 365

    precision_spec  ->  TOK_LEFT_PAREN expression TOK_RIGHT_PAREN .   (rule 213)

    $default	reduce using rule 213 (precision_spec)



state 366

    list_type  ->  TOK_LIST TOK_OF unique attribute_type .   (rule 186)

    $default	reduce using rule 186 (list_type)



state 367

    list_type  ->  TOK_LIST limit_spec TOK_OF unique . attribute_type   (rule 185)

    TOK_ARRAY	shift, and go to state 79
    TOK_BAG	shift, and go to state 80
    TOK_BINARY	shift, and go to state 81
    TOK_BOOLEAN	shift, and go to state 82
    TOK_INTEGER	shift, and go to state 83
    TOK_LIST	shift, and go to state 84
    TOK_LOGICAL	shift, and go to state 85
    TOK_NUMBER	shift, and go to state 86
    TOK_REAL	shift, and go to state 87
    TOK_SET	shift, and go to state 88
    TOK_STRING	shift, and go to state 89
    TOK_IDENTIFIER	shift, and go to state 90

    aggregation_type	go to state 91
    array_type	go to state 92
    attribute_type	go to state 474
    bag_type	go to state 94
    basic_type	go to state 95
    list_type	go to state 96
    defined_type	go to state 97
    set_type	go to state 98



state 368

    set_type  ->  TOK_SET limit_spec TOK_OF attribute_type .   (rule 256)

    $default	reduce using rule 256 (set_type)



state 369

    constant_body  ->  identifier TOK_COLON attribute_type TOK_ASSIGNMENT expression semicolon .   (rule 62)

    $default	reduce using rule 62 (constant_body)



state 370

    rename  ->  TOK_IDENTIFIER TOK_AS . TOK_IDENTIFIER   (rule 159)

    TOK_IDENTIFIER	shift, and go to state 475



state 371

    rename_list  ->  rename_list TOK_COMMA . rename   (rule 161)

    TOK_IDENTIFIER	shift, and go to state 252

    rename	go to state 476



state 372

    parened_rename_list  ->  TOK_LEFT_PAREN rename_list TOK_RIGHT_PAREN .   (rule 162)

    $default	reduce using rule 162 (parened_rename_list)



state 373

    var  ->  TOK_VAR .   (rule 118)

    $default	reduce using rule 118 (var)



state 374

    formal_parameter  ->  var . id_list TOK_COLON parameter_type   (rule 119)

    TOK_IDENTIFIER	shift, and go to state 115

    id_list	go to state 477



state 375

    formal_parameter_rep  ->  formal_parameter .   (rule 122)

    $default	reduce using rule 122 (formal_parameter_rep)



state 376

    formal_parameter_list  ->  TOK_LEFT_PAREN formal_parameter_rep . TOK_RIGHT_PAREN   (rule 121)
    formal_parameter_rep  ->  formal_parameter_rep . semicolon formal_parameter   (rule 123)

    TOK_RIGHT_PAREN	shift, and go to state 478
    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 479



state 377

    function_header  ->  TOK_FUNCTION @3 TOK_IDENTIFIER @4 formal_parameter_list @5 . TOK_COLON parameter_type semicolon   (rule 133)

    TOK_COLON	shift, and go to state 480



state 378

    procedure_header  ->  TOK_PROCEDURE @8 TOK_IDENTIFIER @9 formal_parameter_list semicolon .   (rule 219)

    $default	reduce using rule 219 (procedure_header)



state 379

    rule_header  ->  TOK_RULE @11 TOK_IDENTIFIER TOK_FOR TOK_LEFT_PAREN @12 . rule_formal_parameter_list TOK_RIGHT_PAREN semicolon   (rule 248)

    TOK_IDENTIFIER	shift, and go to state 481

    rule_formal_parameter	go to state 482
    rule_formal_parameter_list	go to state 483



state 380

    enumeration_type  ->  TOK_ENUMERATION TOK_OF . nested_id_list   (rule 78)

    TOK_LEFT_PAREN	shift, and go to state 484

    nested_id_list	go to state 485



state 381

    select_type  ->  TOK_SELECT TOK_LEFT_PAREN . defined_type_list TOK_RIGHT_PAREN   (rule 254)

    TOK_IDENTIFIER	shift, and go to state 90

    defined_type	go to state 310
    defined_type_list	go to state 486



state 382

    type_item  ->  TOK_IDENTIFIER TOK_EQUAL @13 type_item_body @14 . semicolon   (rule 296)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 487



state 383

    aggregate_init_body  ->  aggregate_init_element TOK_COLON . expression   (rule 13)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 488
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 384

    aggregate_init_body  ->  aggregate_init_body TOK_COMMA . aggregate_init_element   (rule 14)
    aggregate_init_body  ->  aggregate_init_body TOK_COMMA . aggregate_init_element TOK_COLON expression   (rule 15)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    aggregate_init_element	go to state 489
    constant	go to state 189
    expression	go to state 276
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 385

    aggregate_initializer  ->  TOK_LEFT_BRACKET aggregate_init_body TOK_RIGHT_BRACKET .   (rule 10)

    $default	reduce using rule 10 (aggregate_initializer)



state 386

    rel_op  ->  TOK_EQUAL .   (rule 231)

    $default	reduce using rule 231 (rel_op)



state 387

    rel_op  ->  TOK_GREATER_EQUAL .   (rule 233)

    $default	reduce using rule 233 (rel_op)



state 388

    rel_op  ->  TOK_GREATER_THAN .   (rule 230)

    $default	reduce using rule 230 (rel_op)



state 389

    rel_op  ->  TOK_INST_EQUAL .   (rule 235)

    $default	reduce using rule 235 (rel_op)



state 390

    rel_op  ->  TOK_INST_NOT_EQUAL .   (rule 236)

    $default	reduce using rule 236 (rel_op)



state 391

    rel_op  ->  TOK_LESS_EQUAL .   (rule 232)

    $default	reduce using rule 232 (rel_op)



state 392

    rel_op  ->  TOK_LESS_THAN .   (rule 229)

    $default	reduce using rule 229 (rel_op)



state 393

    rel_op  ->  TOK_NOT_EQUAL .   (rule 234)

    $default	reduce using rule 234 (rel_op)



state 394

    interval  ->  TOK_LEFT_CURL simple_expression rel_op . simple_expression rel_op simple_expression right_curl   (rule 173)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    simple_expression	go to state 490
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 395

    unary_expression  ->  TOK_LEFT_PAREN expression TOK_RIGHT_PAREN .   (rule 306)

    $default	reduce using rule 306 (unary_expression)



state 396

    query_expression  ->  TOK_QUERY TOK_LEFT_PAREN TOK_IDENTIFIER . TOK_ALL_IN expression TOK_SUCH_THAT @10 expression TOK_RIGHT_PAREN   (rule 228)

    TOK_ALL_IN	shift, and go to state 491



state 397

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)
    where_clause  ->  TOK_IDENTIFIER TOK_COLON expression . semicolon   (rule 327)

    TOK_EQUAL	shift, and go to state 281
    TOK_GREATER_EQUAL	shift, and go to state 282
    TOK_GREATER_THAN	shift, and go to state 283
    TOK_IN	shift, and go to state 284
    TOK_INST_EQUAL	shift, and go to state 285
    TOK_INST_NOT_EQUAL	shift, and go to state 286
    TOK_LESS_EQUAL	shift, and go to state 287
    TOK_LESS_THAN	shift, and go to state 288
    TOK_LIKE	shift, and go to state 289
    TOK_NOT_EQUAL	shift, and go to state 290
    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293
    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 492



state 398

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression TOK_EQUAL expression .   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)

    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293

    $default	reduce using rule 97 (expression)



state 399

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression TOK_GREATER_EQUAL expression .   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)

    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293

    $default	reduce using rule 99 (expression)



state 400

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression TOK_GREATER_THAN expression .   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)

    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293

    $default	reduce using rule 96 (expression)



state 401

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression TOK_IN expression .   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)

    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293

    $default	reduce using rule 103 (expression)



state 402

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression TOK_INST_EQUAL expression .   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)

    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293

    $default	reduce using rule 101 (expression)



state 403

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression TOK_INST_NOT_EQUAL expression .   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)

    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293

    $default	reduce using rule 102 (expression)



state 404

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression TOK_LESS_EQUAL expression .   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)

    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293

    $default	reduce using rule 98 (expression)



state 405

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression TOK_LESS_THAN expression .   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)

    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293

    $default	reduce using rule 95 (expression)



state 406

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)
    expression  ->  expression TOK_LIKE expression .   (rule 104)

    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293

    $default	reduce using rule 104 (expression)



state 407

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression TOK_NOT_EQUAL expression .   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)

    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293

    $default	reduce using rule 100 (expression)



state 408

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression TOK_OR expression .   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)

    TOK_AND	shift, and go to state 293

    $default	reduce using rule 93 (expression)



state 409

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression TOK_XOR expression .   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)

    TOK_AND	shift, and go to state 293

    $default	reduce using rule 94 (expression)



state 410

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression TOK_AND expression .   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)


    $default	reduce using rule 92 (expression)



state 411

    simple_expression  ->  simple_expression . TOK_CONCAT_OP simple_expression   (rule 107)
    simple_expression  ->  simple_expression . TOK_EXP simple_expression   (rule 108)
    simple_expression  ->  simple_expression . TOK_TIMES simple_expression   (rule 109)
    simple_expression  ->  simple_expression . TOK_DIV simple_expression   (rule 110)
    simple_expression  ->  simple_expression . TOK_REAL_DIV simple_expression   (rule 111)
    simple_expression  ->  simple_expression . TOK_MOD simple_expression   (rule 112)
    simple_expression  ->  simple_expression . TOK_PLUS simple_expression   (rule 113)
    simple_expression  ->  simple_expression . TOK_MINUS simple_expression   (rule 114)
    simple_expression  ->  simple_expression TOK_MINUS simple_expression .   (rule 114)

    TOK_DIV	shift, and go to state 297
    TOK_MOD	shift, and go to state 298
    TOK_REAL_DIV	shift, and go to state 299
    TOK_TIMES	shift, and go to state 300
    TOK_CONCAT_OP	shift, and go to state 301
    TOK_EXP	shift, and go to state 302

    $default	reduce using rule 114 (simple_expression)



state 412

    simple_expression  ->  simple_expression . TOK_CONCAT_OP simple_expression   (rule 107)
    simple_expression  ->  simple_expression . TOK_EXP simple_expression   (rule 108)
    simple_expression  ->  simple_expression . TOK_TIMES simple_expression   (rule 109)
    simple_expression  ->  simple_expression . TOK_DIV simple_expression   (rule 110)
    simple_expression  ->  simple_expression . TOK_REAL_DIV simple_expression   (rule 111)
    simple_expression  ->  simple_expression . TOK_MOD simple_expression   (rule 112)
    simple_expression  ->  simple_expression . TOK_PLUS simple_expression   (rule 113)
    simple_expression  ->  simple_expression TOK_PLUS simple_expression .   (rule 113)
    simple_expression  ->  simple_expression . TOK_MINUS simple_expression   (rule 114)

    TOK_DIV	shift, and go to state 297
    TOK_MOD	shift, and go to state 298
    TOK_REAL_DIV	shift, and go to state 299
    TOK_TIMES	shift, and go to state 300
    TOK_CONCAT_OP	shift, and go to state 301
    TOK_EXP	shift, and go to state 302

    $default	reduce using rule 113 (simple_expression)



state 413

    simple_expression  ->  simple_expression . TOK_CONCAT_OP simple_expression   (rule 107)
    simple_expression  ->  simple_expression . TOK_EXP simple_expression   (rule 108)
    simple_expression  ->  simple_expression . TOK_TIMES simple_expression   (rule 109)
    simple_expression  ->  simple_expression . TOK_DIV simple_expression   (rule 110)
    simple_expression  ->  simple_expression TOK_DIV simple_expression .   (rule 110)
    simple_expression  ->  simple_expression . TOK_REAL_DIV simple_expression   (rule 111)
    simple_expression  ->  simple_expression . TOK_MOD simple_expression   (rule 112)
    simple_expression  ->  simple_expression . TOK_PLUS simple_expression   (rule 113)
    simple_expression  ->  simple_expression . TOK_MINUS simple_expression   (rule 114)

    TOK_EXP	shift, and go to state 302

    $default	reduce using rule 110 (simple_expression)



state 414

    simple_expression  ->  simple_expression . TOK_CONCAT_OP simple_expression   (rule 107)
    simple_expression  ->  simple_expression . TOK_EXP simple_expression   (rule 108)
    simple_expression  ->  simple_expression . TOK_TIMES simple_expression   (rule 109)
    simple_expression  ->  simple_expression . TOK_DIV simple_expression   (rule 110)
    simple_expression  ->  simple_expression . TOK_REAL_DIV simple_expression   (rule 111)
    simple_expression  ->  simple_expression . TOK_MOD simple_expression   (rule 112)
    simple_expression  ->  simple_expression TOK_MOD simple_expression .   (rule 112)
    simple_expression  ->  simple_expression . TOK_PLUS simple_expression   (rule 113)
    simple_expression  ->  simple_expression . TOK_MINUS simple_expression   (rule 114)

    TOK_EXP	shift, and go to state 302

    $default	reduce using rule 112 (simple_expression)



state 415

    simple_expression  ->  simple_expression . TOK_CONCAT_OP simple_expression   (rule 107)
    simple_expression  ->  simple_expression . TOK_EXP simple_expression   (rule 108)
    simple_expression  ->  simple_expression . TOK_TIMES simple_expression   (rule 109)
    simple_expression  ->  simple_expression . TOK_DIV simple_expression   (rule 110)
    simple_expression  ->  simple_expression . TOK_REAL_DIV simple_expression   (rule 111)
    simple_expression  ->  simple_expression TOK_REAL_DIV simple_expression .   (rule 111)
    simple_expression  ->  simple_expression . TOK_MOD simple_expression   (rule 112)
    simple_expression  ->  simple_expression . TOK_PLUS simple_expression   (rule 113)
    simple_expression  ->  simple_expression . TOK_MINUS simple_expression   (rule 114)

    TOK_EXP	shift, and go to state 302

    $default	reduce using rule 111 (simple_expression)



state 416

    simple_expression  ->  simple_expression . TOK_CONCAT_OP simple_expression   (rule 107)
    simple_expression  ->  simple_expression . TOK_EXP simple_expression   (rule 108)
    simple_expression  ->  simple_expression . TOK_TIMES simple_expression   (rule 109)
    simple_expression  ->  simple_expression TOK_TIMES simple_expression .   (rule 109)
    simple_expression  ->  simple_expression . TOK_DIV simple_expression   (rule 110)
    simple_expression  ->  simple_expression . TOK_REAL_DIV simple_expression   (rule 111)
    simple_expression  ->  simple_expression . TOK_MOD simple_expression   (rule 112)
    simple_expression  ->  simple_expression . TOK_PLUS simple_expression   (rule 113)
    simple_expression  ->  simple_expression . TOK_MINUS simple_expression   (rule 114)

    TOK_EXP	shift, and go to state 302

    $default	reduce using rule 109 (simple_expression)



state 417

    simple_expression  ->  simple_expression . TOK_CONCAT_OP simple_expression   (rule 107)
    simple_expression  ->  simple_expression TOK_CONCAT_OP simple_expression .   (rule 107)
    simple_expression  ->  simple_expression . TOK_EXP simple_expression   (rule 108)
    simple_expression  ->  simple_expression . TOK_TIMES simple_expression   (rule 109)
    simple_expression  ->  simple_expression . TOK_DIV simple_expression   (rule 110)
    simple_expression  ->  simple_expression . TOK_REAL_DIV simple_expression   (rule 111)
    simple_expression  ->  simple_expression . TOK_MOD simple_expression   (rule 112)
    simple_expression  ->  simple_expression . TOK_PLUS simple_expression   (rule 113)
    simple_expression  ->  simple_expression . TOK_MINUS simple_expression   (rule 114)

    TOK_EXP	shift, and go to state 302

    $default	reduce using rule 107 (simple_expression)



state 418

    simple_expression  ->  simple_expression . TOK_CONCAT_OP simple_expression   (rule 107)
    simple_expression  ->  simple_expression . TOK_EXP simple_expression   (rule 108)
    simple_expression  ->  simple_expression TOK_EXP simple_expression .   (rule 108)
    simple_expression  ->  simple_expression . TOK_TIMES simple_expression   (rule 109)
    simple_expression  ->  simple_expression . TOK_DIV simple_expression   (rule 110)
    simple_expression  ->  simple_expression . TOK_REAL_DIV simple_expression   (rule 111)
    simple_expression  ->  simple_expression . TOK_MOD simple_expression   (rule 112)
    simple_expression  ->  simple_expression . TOK_PLUS simple_expression   (rule 113)
    simple_expression  ->  simple_expression . TOK_MINUS simple_expression   (rule 114)

    TOK_EXP	shift, and go to state 302

    $default	reduce using rule 108 (simple_expression)



state 419

    cardinality_op  ->  TOK_LEFT_CURL expression . TOK_COLON expression TOK_RIGHT_CURL   (rule 49)
    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)

    TOK_EQUAL	shift, and go to state 281
    TOK_GREATER_EQUAL	shift, and go to state 282
    TOK_GREATER_THAN	shift, and go to state 283
    TOK_IN	shift, and go to state 284
    TOK_INST_EQUAL	shift, and go to state 285
    TOK_INST_NOT_EQUAL	shift, and go to state 286
    TOK_LESS_EQUAL	shift, and go to state 287
    TOK_LESS_THAN	shift, and go to state 288
    TOK_LIKE	shift, and go to state 289
    TOK_NOT_EQUAL	shift, and go to state 290
    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293
    TOK_COLON	shift, and go to state 493



state 420

    expression  ->  simple_expression cardinality_op simple_expression .   (rule 105)
    simple_expression  ->  simple_expression . TOK_CONCAT_OP simple_expression   (rule 107)
    simple_expression  ->  simple_expression . TOK_EXP simple_expression   (rule 108)
    simple_expression  ->  simple_expression . TOK_TIMES simple_expression   (rule 109)
    simple_expression  ->  simple_expression . TOK_DIV simple_expression   (rule 110)
    simple_expression  ->  simple_expression . TOK_REAL_DIV simple_expression   (rule 111)
    simple_expression  ->  simple_expression . TOK_MOD simple_expression   (rule 112)
    simple_expression  ->  simple_expression . TOK_PLUS simple_expression   (rule 113)
    simple_expression  ->  simple_expression . TOK_MINUS simple_expression   (rule 114)

    TOK_MINUS	shift, and go to state 295
    TOK_PLUS	shift, and go to state 296
    TOK_DIV	shift, and go to state 297
    TOK_MOD	shift, and go to state 298
    TOK_REAL_DIV	shift, and go to state 299
    TOK_TIMES	shift, and go to state 300
    TOK_CONCAT_OP	shift, and go to state 301
    TOK_EXP	shift, and go to state 302

    $default	reduce using rule 105 (expression)



state 421

    type_decl  ->  TOK_TYPE type_item where_rule_OPT @15 TOK_END_TYPE semicolon .   (rule 298)

    $default	reduce using rule 298 (type_decl)



state 422

    supertype_decl  ->  TOK_ABSTRACT TOK_SUPERTYPE TOK_OF TOK_LEFT_PAREN supertype_expression . TOK_RIGHT_PAREN   (rule 279)
    supertype_expression  ->  supertype_expression . TOK_AND supertype_factor   (rule 281)
    supertype_expression  ->  supertype_expression . TOK_ANDOR supertype_factor   (rule 282)

    TOK_AND	shift, and go to state 427
    TOK_ANDOR	shift, and go to state 428
    TOK_RIGHT_PAREN	shift, and go to state 494



state 423

    defined_type_list  ->  defined_type_list TOK_COMMA . defined_type   (rule 202)

    TOK_IDENTIFIER	shift, and go to state 90

    defined_type	go to state 495



state 424

    subtype_decl  ->  TOK_SUBTYPE TOK_OF TOK_LEFT_PAREN defined_type_list TOK_RIGHT_PAREN .   (rule 276)

    $default	reduce using rule 276 (subtype_decl)



state 425

    supertype_expression  ->  supertype_expression . TOK_AND supertype_factor   (rule 281)
    supertype_expression  ->  supertype_expression . TOK_ANDOR supertype_factor   (rule 282)
    supertype_factor  ->  TOK_LEFT_PAREN supertype_expression . TOK_RIGHT_PAREN   (rule 287)

    TOK_AND	shift, and go to state 427
    TOK_ANDOR	shift, and go to state 428
    TOK_RIGHT_PAREN	shift, and go to state 496



state 426

    supertype_factor  ->  oneof_op TOK_LEFT_PAREN . supertype_expression_list TOK_RIGHT_PAREN   (rule 286)

    TOK_LEFT_PAREN	shift, and go to state 312
    TOK_ONEOF	shift, and go to state 313
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_IDENTIFIER	shift, and go to state 26
    TOK_SELF	shift, and go to state 27

    identifier	go to state 314
    oneof_op	go to state 315
    supertype_expression	go to state 497
    supertype_expression_list	go to state 498
    supertype_factor	go to state 317



state 427

    supertype_expression  ->  supertype_expression TOK_AND . supertype_factor   (rule 281)

    TOK_LEFT_PAREN	shift, and go to state 312
    TOK_ONEOF	shift, and go to state 313
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_IDENTIFIER	shift, and go to state 26
    TOK_SELF	shift, and go to state 27

    identifier	go to state 314
    oneof_op	go to state 315
    supertype_factor	go to state 499



state 428

    supertype_expression  ->  supertype_expression TOK_ANDOR . supertype_factor   (rule 282)

    TOK_LEFT_PAREN	shift, and go to state 312
    TOK_ONEOF	shift, and go to state 313
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_IDENTIFIER	shift, and go to state 26
    TOK_SELF	shift, and go to state 27

    identifier	go to state 314
    oneof_op	go to state 315
    supertype_factor	go to state 500



state 429

    supertype_decl  ->  TOK_SUPERTYPE TOK_OF TOK_LEFT_PAREN supertype_expression TOK_RIGHT_PAREN .   (rule 278)

    $default	reduce using rule 278 (supertype_decl)



state 430

    derived_attribute_rep  ->  derived_attribute .   (rule 73)

    $default	reduce using rule 73 (derived_attribute_rep)



state 431

    derive_decl  ->  TOK_DERIVE derived_attribute_rep .   (rule 71)
    derived_attribute_rep  ->  derived_attribute_rep . derived_attribute   (rule 74)

    TOK_IDENTIFIER	shift, and go to state 319
    TOK_SELF	shift, and go to state 320

    $default	reduce using rule 71 (derive_decl)

    derived_attribute	go to state 501
    attribute_decl	go to state 432



state 432

    derived_attribute  ->  attribute_decl . TOK_COLON attribute_type initializer semicolon   (rule 72)

    TOK_COLON	shift, and go to state 502



state 433

    attribute_decl  ->  TOK_SELF TOK_BACKSLASH . TOK_IDENTIFIER TOK_DOT TOK_IDENTIFIER   (rule 81)

    TOK_IDENTIFIER	shift, and go to state 503



state 434

    inverse_clause  ->  TOK_INVERSE . inverse_attr_list   (rule 183)

    TOK_IDENTIFIER	shift, and go to state 504

    inverse_attr_list	go to state 505
    inverse_attr	go to state 506



state 435

    entity_body  ->  explicit_attr_list derive_decl inverse_clause . unique_clause where_rule_OPT   (rule 75)

    TOK_UNIQUE	shift, and go to state 507

    $default	reduce using rule 322 (unique_clause)

    unique_clause	go to state 508



state 436

    explicit_attribute  ->  attribute_decl_list TOK_COLON . optional attribute_type semicolon   (rule 86)

    TOK_OPTIONAL	shift, and go to state 509

    $default	reduce using rule 84 (optional)

    optional	go to state 510



state 437

    attribute_decl_list  ->  attribute_decl_list TOK_COMMA . attribute_decl   (rule 83)

    TOK_IDENTIFIER	shift, and go to state 319
    TOK_SELF	shift, and go to state 320

    attribute_decl	go to state 511



state 438

    entity_decl  ->  entity_header subsuper_decl semicolon entity_body TOK_END_ENTITY semicolon .   (rule 76)

    $default	reduce using rule 76 (entity_decl)



state 439

    aggregate_type  ->  TOK_AGGREGATE TOK_COLON . TOK_IDENTIFIER TOK_OF parameter_type   (rule 17)

    TOK_IDENTIFIER	shift, and go to state 512



state 440

    aggregate_type  ->  TOK_AGGREGATE TOK_OF . parameter_type   (rule 16)

    TOK_AGGREGATE	shift, and go to state 326
    TOK_ARRAY	shift, and go to state 327
    TOK_BAG	shift, and go to state 328
    TOK_BINARY	shift, and go to state 81
    TOK_BOOLEAN	shift, and go to state 82
    TOK_GENERIC	shift, and go to state 329
    TOK_INTEGER	shift, and go to state 83
    TOK_LIST	shift, and go to state 330
    TOK_LOGICAL	shift, and go to state 85
    TOK_NUMBER	shift, and go to state 86
    TOK_REAL	shift, and go to state 87
    TOK_SET	shift, and go to state 331
    TOK_STRING	shift, and go to state 89
    TOK_IDENTIFIER	shift, and go to state 90

    aggregate_type	go to state 332
    basic_type	go to state 333
    parameter_type	go to state 513
    conformant_aggregation	go to state 335
    generic_type	go to state 336
    defined_type	go to state 337



state 441

    conformant_aggregation  ->  TOK_ARRAY TOK_OF . optional_or_unique parameter_type   (rule 137)

    TOK_OPTIONAL	shift, and go to state 360
    TOK_UNIQUE	shift, and go to state 361

    $default	reduce using rule 205 (optional_or_unique)

    optional_or_unique	go to state 514



state 442

    conformant_aggregation  ->  TOK_ARRAY index_spec . TOK_OF optional_or_unique parameter_type   (rule 138)

    TOK_OF	shift, and go to state 515



state 443

    conformant_aggregation  ->  TOK_BAG TOK_OF . parameter_type   (rule 139)

    TOK_AGGREGATE	shift, and go to state 326
    TOK_ARRAY	shift, and go to state 327
    TOK_BAG	shift, and go to state 328
    TOK_BINARY	shift, and go to state 81
    TOK_BOOLEAN	shift, and go to state 82
    TOK_GENERIC	shift, and go to state 329
    TOK_INTEGER	shift, and go to state 83
    TOK_LIST	shift, and go to state 330
    TOK_LOGICAL	shift, and go to state 85
    TOK_NUMBER	shift, and go to state 86
    TOK_REAL	shift, and go to state 87
    TOK_SET	shift, and go to state 331
    TOK_STRING	shift, and go to state 89
    TOK_IDENTIFIER	shift, and go to state 90

    aggregate_type	go to state 332
    basic_type	go to state 333
    parameter_type	go to state 516
    conformant_aggregation	go to state 335
    generic_type	go to state 336
    defined_type	go to state 337



state 444

    conformant_aggregation  ->  TOK_BAG index_spec . TOK_OF parameter_type   (rule 140)

    TOK_OF	shift, and go to state 517



state 445

    generic_type  ->  TOK_GENERIC TOK_COLON . TOK_IDENTIFIER   (rule 146)

    TOK_IDENTIFIER	shift, and go to state 518



state 446

    conformant_aggregation  ->  TOK_LIST TOK_OF . unique parameter_type   (rule 141)

    TOK_UNIQUE	shift, and go to state 245

    $default	reduce using rule 312 (unique)

    unique	go to state 519



state 447

    conformant_aggregation  ->  TOK_LIST index_spec . TOK_OF unique parameter_type   (rule 142)

    TOK_OF	shift, and go to state 520



state 448

    conformant_aggregation  ->  TOK_SET TOK_OF . parameter_type   (rule 143)

    TOK_AGGREGATE	shift, and go to state 326
    TOK_ARRAY	shift, and go to state 327
    TOK_BAG	shift, and go to state 328
    TOK_BINARY	shift, and go to state 81
    TOK_BOOLEAN	shift, and go to state 82
    TOK_GENERIC	shift, and go to state 329
    TOK_INTEGER	shift, and go to state 83
    TOK_LIST	shift, and go to state 330
    TOK_LOGICAL	shift, and go to state 85
    TOK_NUMBER	shift, and go to state 86
    TOK_REAL	shift, and go to state 87
    TOK_SET	shift, and go to state 331
    TOK_STRING	shift, and go to state 89
    TOK_IDENTIFIER	shift, and go to state 90

    aggregate_type	go to state 332
    basic_type	go to state 333
    parameter_type	go to state 521
    conformant_aggregation	go to state 335
    generic_type	go to state 336
    defined_type	go to state 337



state 449

    conformant_aggregation  ->  TOK_SET index_spec . TOK_OF parameter_type   (rule 144)

    TOK_OF	shift, and go to state 522



state 450

    local_initializer  ->  TOK_ASSIGNMENT . expression   (rule 194)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 523
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 451

    local_variable  ->  id_list TOK_COLON parameter_type local_initializer . semicolon   (rule 196)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 524



state 452

    local_variable  ->  id_list TOK_COLON parameter_type semicolon .   (rule 195)

    $default	reduce using rule 195 (local_variable)



state 453

    assignable  ->  assignable . qualifier   (rule 25)
    general_ref  ->  assignable . group_ref   (rule 299)
    general_ref  ->  assignable .   (rule 300)

    TOK_DOT	shift, and go to state 225
    TOK_BACKSLASH	shift, and go to state 525
    TOK_LEFT_BRACKET	shift, and go to state 227

    $default	reduce using rule 300 (general_ref)

    group_ref	go to state 526
    qualifier	go to state 229



state 454

    alias_statement  ->  TOK_ALIAS TOK_IDENTIFIER TOK_FOR general_ref . semicolon @1 statement_rep TOK_END_ALIAS semicolon   (rule 23)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 527



state 455

    compound_statement  ->  TOK_BEGIN statement_rep TOK_END semicolon .   (rule 59)

    $default	reduce using rule 59 (compound_statement)



state 456

    case_action_list  ->  case_action_list . case_action   (rule 52)
    case_block  ->  case_action_list . case_otherwise   (rule 53)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_OTHERWISE	shift, and go to state 528
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    $default	reduce using rule 56 (case_otherwise)

    aggregate_initializer	go to state 188
    case_action	go to state 529
    case_labels	go to state 530
    case_otherwise	go to state 531
    constant	go to state 189
    expression	go to state 532
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 457

    case_statement  ->  TOK_CASE expression TOK_OF case_block . TOK_END_CASE semicolon   (rule 58)

    TOK_END_CASE	shift, and go to state 533



state 458

    if_statement  ->  TOK_IF expression TOK_THEN statement_rep . TOK_END_IF semicolon   (rule 152)
    if_statement  ->  TOK_IF expression TOK_THEN statement_rep . TOK_ELSE statement_rep TOK_END_IF semicolon   (rule 153)

    TOK_ELSE	shift, and go to state 534
    TOK_END_IF	shift, and go to state 535



state 459

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)
    increment_control  ->  TOK_IDENTIFIER TOK_ASSIGNMENT expression . TOK_TO expression by_expression   (rule 155)

    TOK_EQUAL	shift, and go to state 281
    TOK_GREATER_EQUAL	shift, and go to state 282
    TOK_GREATER_THAN	shift, and go to state 283
    TOK_IN	shift, and go to state 284
    TOK_INST_EQUAL	shift, and go to state 285
    TOK_INST_NOT_EQUAL	shift, and go to state 286
    TOK_LESS_EQUAL	shift, and go to state 287
    TOK_LESS_THAN	shift, and go to state 288
    TOK_LIKE	shift, and go to state 289
    TOK_NOT_EQUAL	shift, and go to state 290
    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293
    TOK_TO	shift, and go to state 536



state 460

    repeat_statement  ->  TOK_REPEAT increment_control while_control until_control . semicolon statement_rep TOK_END_REPEAT semicolon   (rule 237)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 537



state 461

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)
    until_control  ->  TOK_UNTIL expression .   (rule 325)

    TOK_EQUAL	shift, and go to state 281
    TOK_GREATER_EQUAL	shift, and go to state 282
    TOK_GREATER_THAN	shift, and go to state 283
    TOK_IN	shift, and go to state 284
    TOK_INST_EQUAL	shift, and go to state 285
    TOK_INST_NOT_EQUAL	shift, and go to state 286
    TOK_LESS_EQUAL	shift, and go to state 287
    TOK_LESS_THAN	shift, and go to state 288
    TOK_LIKE	shift, and go to state 289
    TOK_NOT_EQUAL	shift, and go to state 290
    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293

    $default	reduce using rule 325 (until_control)



state 462

    repeat_statement  ->  TOK_REPEAT while_control until_control semicolon . statement_rep TOK_END_REPEAT semicolon   (rule 238)

    TOK_ALIAS	shift, and go to state 121
    TOK_BEGIN	shift, and go to state 122
    TOK_CASE	shift, and go to state 123
    TOK_ESCAPE	shift, and go to state 124
    TOK_IF	shift, and go to state 125
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_REPEAT	shift, and go to state 126
    TOK_RETURN	shift, and go to state 127
    TOK_SKIP	shift, and go to state 128
    TOK_BUILTIN_PROCEDURE	shift, and go to state 129
    TOK_IDENTIFIER	shift, and go to state 130
    TOK_SELF	shift, and go to state 27
    TOK_SEMICOLON	shift, and go to state 13

    $default	reduce using rule 269 (statement_rep)

    alias_statement	go to state 131
    assignable	go to state 132
    assignment_statement	go to state 133
    case_statement	go to state 134
    compound_statement	go to state 135
    escape_statement	go to state 136
    identifier	go to state 137
    if_statement	go to state 138
    proc_call_statement	go to state 139
    procedure_id	go to state 140
    repeat_statement	go to state 141
    return_statement	go to state 142
    semicolon	go to state 143
    skip_statement	go to state 144
    statement	go to state 145
    statement_rep	go to state 538



state 463

    return_statement  ->  TOK_RETURN TOK_LEFT_PAREN expression TOK_RIGHT_PAREN . semicolon   (rule 240)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 539



state 464

    qualifier  ->  TOK_LEFT_BRACKET simple_expression TOK_COLON . simple_expression TOK_RIGHT_BRACKET   (rule 226)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    simple_expression	go to state 540
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 465

    qualifier  ->  TOK_LEFT_BRACKET simple_expression TOK_RIGHT_BRACKET .   (rule 225)

    $default	reduce using rule 225 (qualifier)



state 466

    assignment_statement  ->  assignable TOK_ASSIGNMENT expression semicolon .   (rule 27)

    $default	reduce using rule 27 (assignment_statement)



state 467

    expression_list  ->  expression_list TOK_COMMA . expression   (rule 116)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 541
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 468

    actual_parameters  ->  TOK_LEFT_PAREN expression_list TOK_RIGHT_PAREN .   (rule 7)

    $default	reduce using rule 7 (actual_parameters)



state 469

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)
    index_spec  ->  TOK_LEFT_BRACKET expression TOK_COLON expression . TOK_RIGHT_BRACKET   (rule 156)

    TOK_EQUAL	shift, and go to state 281
    TOK_GREATER_EQUAL	shift, and go to state 282
    TOK_GREATER_THAN	shift, and go to state 283
    TOK_IN	shift, and go to state 284
    TOK_INST_EQUAL	shift, and go to state 285
    TOK_INST_NOT_EQUAL	shift, and go to state 286
    TOK_LESS_EQUAL	shift, and go to state 287
    TOK_LESS_THAN	shift, and go to state 288
    TOK_LIKE	shift, and go to state 289
    TOK_NOT_EQUAL	shift, and go to state 290
    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293
    TOK_RIGHT_BRACKET	shift, and go to state 542



state 470

    optional_or_unique  ->  TOK_OPTIONAL TOK_UNIQUE .   (rule 208)

    $default	reduce using rule 208 (optional_or_unique)



state 471

    optional_or_unique  ->  TOK_UNIQUE TOK_OPTIONAL .   (rule 209)

    $default	reduce using rule 209 (optional_or_unique)



state 472

    array_type  ->  TOK_ARRAY index_spec TOK_OF optional_or_unique attribute_type .   (rule 24)

    $default	reduce using rule 24 (array_type)



state 473

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)
    limit_spec  ->  TOK_LEFT_BRACKET expression TOK_COLON expression . TOK_RIGHT_BRACKET   (rule 184)

    TOK_EQUAL	shift, and go to state 281
    TOK_GREATER_EQUAL	shift, and go to state 282
    TOK_GREATER_THAN	shift, and go to state 283
    TOK_IN	shift, and go to state 284
    TOK_INST_EQUAL	shift, and go to state 285
    TOK_INST_NOT_EQUAL	shift, and go to state 286
    TOK_LESS_EQUAL	shift, and go to state 287
    TOK_LESS_THAN	shift, and go to state 288
    TOK_LIKE	shift, and go to state 289
    TOK_NOT_EQUAL	shift, and go to state 290
    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293
    TOK_RIGHT_BRACKET	shift, and go to state 543



state 474

    list_type  ->  TOK_LIST limit_spec TOK_OF unique attribute_type .   (rule 185)

    $default	reduce using rule 185 (list_type)



state 475

    rename  ->  TOK_IDENTIFIER TOK_AS TOK_IDENTIFIER .   (rule 159)

    $default	reduce using rule 159 (rename)



state 476

    rename_list  ->  rename_list TOK_COMMA rename .   (rule 161)

    $default	reduce using rule 161 (rename_list)



state 477

    formal_parameter  ->  var id_list . TOK_COLON parameter_type   (rule 119)
    id_list  ->  id_list . TOK_COMMA TOK_IDENTIFIER   (rule 148)

    TOK_COLON	shift, and go to state 544
    TOK_COMMA	shift, and go to state 208



state 478

    formal_parameter_list  ->  TOK_LEFT_PAREN formal_parameter_rep TOK_RIGHT_PAREN .   (rule 121)

    $default	reduce using rule 121 (formal_parameter_list)



state 479

    formal_parameter_rep  ->  formal_parameter_rep semicolon . formal_parameter   (rule 123)

    TOK_VAR	shift, and go to state 373

    $default	reduce using rule 117 (var)

    var 	go to state 374
    formal_parameter	go to state 545



state 480

    function_header  ->  TOK_FUNCTION @3 TOK_IDENTIFIER @4 formal_parameter_list @5 TOK_COLON . parameter_type semicolon   (rule 133)

    TOK_AGGREGATE	shift, and go to state 326
    TOK_ARRAY	shift, and go to state 327
    TOK_BAG	shift, and go to state 328
    TOK_BINARY	shift, and go to state 81
    TOK_BOOLEAN	shift, and go to state 82
    TOK_GENERIC	shift, and go to state 329
    TOK_INTEGER	shift, and go to state 83
    TOK_LIST	shift, and go to state 330
    TOK_LOGICAL	shift, and go to state 85
    TOK_NUMBER	shift, and go to state 86
    TOK_REAL	shift, and go to state 87
    TOK_SET	shift, and go to state 331
    TOK_STRING	shift, and go to state 89
    TOK_IDENTIFIER	shift, and go to state 90

    aggregate_type	go to state 332
    basic_type	go to state 333
    parameter_type	go to state 546
    conformant_aggregation	go to state 335
    generic_type	go to state 336
    defined_type	go to state 337



state 481

    rule_formal_parameter  ->  TOK_IDENTIFIER .   (rule 243)

    $default	reduce using rule 243 (rule_formal_parameter)



state 482

    rule_formal_parameter_list  ->  rule_formal_parameter .   (rule 244)

    $default	reduce using rule 244 (rule_formal_parameter_list)



state 483

    rule_formal_parameter_list  ->  rule_formal_parameter_list . TOK_COMMA rule_formal_parameter   (rule 245)
    rule_header  ->  TOK_RULE @11 TOK_IDENTIFIER TOK_FOR TOK_LEFT_PAREN @12 rule_formal_parameter_list . TOK_RIGHT_PAREN semicolon   (rule 248)

    TOK_COMMA	shift, and go to state 547
    TOK_RIGHT_PAREN	shift, and go to state 548



state 484

    nested_id_list  ->  TOK_LEFT_PAREN . id_list TOK_RIGHT_PAREN   (rule 203)

    TOK_IDENTIFIER	shift, and go to state 115

    id_list	go to state 549



state 485

    enumeration_type  ->  TOK_ENUMERATION TOK_OF nested_id_list .   (rule 78)

    $default	reduce using rule 78 (enumeration_type)



state 486

    defined_type_list  ->  defined_type_list . TOK_COMMA defined_type   (rule 202)
    select_type  ->  TOK_SELECT TOK_LEFT_PAREN defined_type_list . TOK_RIGHT_PAREN   (rule 254)

    TOK_COMMA	shift, and go to state 423
    TOK_RIGHT_PAREN	shift, and go to state 550



state 487

    type_item  ->  TOK_IDENTIFIER TOK_EQUAL @13 type_item_body @14 semicolon .   (rule 296)

    $default	reduce using rule 296 (type_item)



state 488

    aggregate_init_body  ->  aggregate_init_element TOK_COLON expression .   (rule 13)
    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)

    TOK_EQUAL	shift, and go to state 281
    TOK_GREATER_EQUAL	shift, and go to state 282
    TOK_GREATER_THAN	shift, and go to state 283
    TOK_IN	shift, and go to state 284
    TOK_INST_EQUAL	shift, and go to state 285
    TOK_INST_NOT_EQUAL	shift, and go to state 286
    TOK_LESS_EQUAL	shift, and go to state 287
    TOK_LESS_THAN	shift, and go to state 288
    TOK_LIKE	shift, and go to state 289
    TOK_NOT_EQUAL	shift, and go to state 290
    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293

    $default	reduce using rule 13 (aggregate_init_body)



state 489

    aggregate_init_body  ->  aggregate_init_body TOK_COMMA aggregate_init_element .   (rule 14)
    aggregate_init_body  ->  aggregate_init_body TOK_COMMA aggregate_init_element . TOK_COLON expression   (rule 15)

    TOK_COLON	shift, and go to state 551

    $default	reduce using rule 14 (aggregate_init_body)



state 490

    simple_expression  ->  simple_expression . TOK_CONCAT_OP simple_expression   (rule 107)
    simple_expression  ->  simple_expression . TOK_EXP simple_expression   (rule 108)
    simple_expression  ->  simple_expression . TOK_TIMES simple_expression   (rule 109)
    simple_expression  ->  simple_expression . TOK_DIV simple_expression   (rule 110)
    simple_expression  ->  simple_expression . TOK_REAL_DIV simple_expression   (rule 111)
    simple_expression  ->  simple_expression . TOK_MOD simple_expression   (rule 112)
    simple_expression  ->  simple_expression . TOK_PLUS simple_expression   (rule 113)
    simple_expression  ->  simple_expression . TOK_MINUS simple_expression   (rule 114)
    interval  ->  TOK_LEFT_CURL simple_expression rel_op simple_expression . rel_op simple_expression right_curl   (rule 173)

    TOK_EQUAL	shift, and go to state 386
    TOK_GREATER_EQUAL	shift, and go to state 387
    TOK_GREATER_THAN	shift, and go to state 388
    TOK_INST_EQUAL	shift, and go to state 389
    TOK_INST_NOT_EQUAL	shift, and go to state 390
    TOK_LESS_EQUAL	shift, and go to state 391
    TOK_LESS_THAN	shift, and go to state 392
    TOK_NOT_EQUAL	shift, and go to state 393
    TOK_MINUS	shift, and go to state 295
    TOK_PLUS	shift, and go to state 296
    TOK_DIV	shift, and go to state 297
    TOK_MOD	shift, and go to state 298
    TOK_REAL_DIV	shift, and go to state 299
    TOK_TIMES	shift, and go to state 300
    TOK_CONCAT_OP	shift, and go to state 301
    TOK_EXP	shift, and go to state 302

    rel_op	go to state 552



state 491

    query_expression  ->  TOK_QUERY TOK_LEFT_PAREN TOK_IDENTIFIER TOK_ALL_IN . expression TOK_SUCH_THAT @10 expression TOK_RIGHT_PAREN   (rule 228)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 553
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 492

    where_clause  ->  TOK_IDENTIFIER TOK_COLON expression semicolon .   (rule 327)

    $default	reduce using rule 327 (where_clause)



state 493

    cardinality_op  ->  TOK_LEFT_CURL expression TOK_COLON . expression TOK_RIGHT_CURL   (rule 49)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 554
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 494

    supertype_decl  ->  TOK_ABSTRACT TOK_SUPERTYPE TOK_OF TOK_LEFT_PAREN supertype_expression TOK_RIGHT_PAREN .   (rule 279)

    $default	reduce using rule 279 (supertype_decl)



state 495

    defined_type_list  ->  defined_type_list TOK_COMMA defined_type .   (rule 202)

    $default	reduce using rule 202 (defined_type_list)



state 496

    supertype_factor  ->  TOK_LEFT_PAREN supertype_expression TOK_RIGHT_PAREN .   (rule 287)

    $default	reduce using rule 287 (supertype_factor)



state 497

    supertype_expression  ->  supertype_expression . TOK_AND supertype_factor   (rule 281)
    supertype_expression  ->  supertype_expression . TOK_ANDOR supertype_factor   (rule 282)
    supertype_expression_list  ->  supertype_expression .   (rule 283)

    TOK_AND	shift, and go to state 427
    TOK_ANDOR	shift, and go to state 428

    $default	reduce using rule 283 (supertype_expression_list)



state 498

    supertype_expression_list  ->  supertype_expression_list . TOK_COMMA supertype_expression   (rule 284)
    supertype_factor  ->  oneof_op TOK_LEFT_PAREN supertype_expression_list . TOK_RIGHT_PAREN   (rule 286)

    TOK_COMMA	shift, and go to state 555
    TOK_RIGHT_PAREN	shift, and go to state 556



state 499

    supertype_expression  ->  supertype_expression TOK_AND supertype_factor .   (rule 281)

    $default	reduce using rule 281 (supertype_expression)



state 500

    supertype_expression  ->  supertype_expression TOK_ANDOR supertype_factor .   (rule 282)

    $default	reduce using rule 282 (supertype_expression)



state 501

    derived_attribute_rep  ->  derived_attribute_rep derived_attribute .   (rule 74)

    $default	reduce using rule 74 (derived_attribute_rep)



state 502

    derived_attribute  ->  attribute_decl TOK_COLON . attribute_type initializer semicolon   (rule 72)

    TOK_ARRAY	shift, and go to state 79
    TOK_BAG	shift, and go to state 80
    TOK_BINARY	shift, and go to state 81
    TOK_BOOLEAN	shift, and go to state 82
    TOK_INTEGER	shift, and go to state 83
    TOK_LIST	shift, and go to state 84
    TOK_LOGICAL	shift, and go to state 85
    TOK_NUMBER	shift, and go to state 86
    TOK_REAL	shift, and go to state 87
    TOK_SET	shift, and go to state 88
    TOK_STRING	shift, and go to state 89
    TOK_IDENTIFIER	shift, and go to state 90

    aggregation_type	go to state 91
    array_type	go to state 92
    attribute_type	go to state 557
    bag_type	go to state 94
    basic_type	go to state 95
    list_type	go to state 96
    defined_type	go to state 97
    set_type	go to state 98



state 503

    attribute_decl  ->  TOK_SELF TOK_BACKSLASH TOK_IDENTIFIER . TOK_DOT TOK_IDENTIFIER   (rule 81)

    TOK_DOT	shift, and go to state 558



state 504

    inverse_attr  ->  TOK_IDENTIFIER . TOK_COLON set_or_bag_of_entity TOK_FOR TOK_IDENTIFIER semicolon   (rule 181)

    TOK_COLON	shift, and go to state 559



state 505

    inverse_attr_list  ->  inverse_attr_list . inverse_attr   (rule 180)
    inverse_clause  ->  TOK_INVERSE inverse_attr_list .   (rule 183)

    TOK_IDENTIFIER	shift, and go to state 504

    $default	reduce using rule 183 (inverse_clause)

    inverse_attr	go to state 560



state 506

    inverse_attr_list  ->  inverse_attr .   (rule 179)

    $default	reduce using rule 179 (inverse_attr_list)



state 507

    unique_clause  ->  TOK_UNIQUE . labelled_attrib_list_list   (rule 323)

    TOK_IDENTIFIER	shift, and go to state 561
    TOK_SELF	shift, and go to state 562

    qualified_attr	go to state 563
    qualified_attr_list	go to state 564
    labelled_attrib_list	go to state 565
    labelled_attrib_list_list	go to state 566



state 508

    entity_body  ->  explicit_attr_list derive_decl inverse_clause unique_clause . where_rule_OPT   (rule 75)

    TOK_WHERE	shift, and go to state 107

    $default	reduce using rule 331 (where_rule_OPT)

    where_rule	go to state 108
    where_rule_OPT	go to state 567



state 509

    optional  ->  TOK_OPTIONAL .   (rule 85)

    $default	reduce using rule 85 (optional)



state 510

    explicit_attribute  ->  attribute_decl_list TOK_COLON optional . attribute_type semicolon   (rule 86)

    TOK_ARRAY	shift, and go to state 79
    TOK_BAG	shift, and go to state 80
    TOK_BINARY	shift, and go to state 81
    TOK_BOOLEAN	shift, and go to state 82
    TOK_INTEGER	shift, and go to state 83
    TOK_LIST	shift, and go to state 84
    TOK_LOGICAL	shift, and go to state 85
    TOK_NUMBER	shift, and go to state 86
    TOK_REAL	shift, and go to state 87
    TOK_SET	shift, and go to state 88
    TOK_STRING	shift, and go to state 89
    TOK_IDENTIFIER	shift, and go to state 90

    aggregation_type	go to state 91
    array_type	go to state 92
    attribute_type	go to state 568
    bag_type	go to state 94
    basic_type	go to state 95
    list_type	go to state 96
    defined_type	go to state 97
    set_type	go to state 98



state 511

    attribute_decl_list  ->  attribute_decl_list TOK_COMMA attribute_decl .   (rule 83)

    $default	reduce using rule 83 (attribute_decl_list)



state 512

    aggregate_type  ->  TOK_AGGREGATE TOK_COLON TOK_IDENTIFIER . TOK_OF parameter_type   (rule 17)

    TOK_OF	shift, and go to state 569



state 513

    aggregate_type  ->  TOK_AGGREGATE TOK_OF parameter_type .   (rule 16)

    $default	reduce using rule 16 (aggregate_type)



state 514

    conformant_aggregation  ->  TOK_ARRAY TOK_OF optional_or_unique . parameter_type   (rule 137)

    TOK_AGGREGATE	shift, and go to state 326
    TOK_ARRAY	shift, and go to state 327
    TOK_BAG	shift, and go to state 328
    TOK_BINARY	shift, and go to state 81
    TOK_BOOLEAN	shift, and go to state 82
    TOK_GENERIC	shift, and go to state 329
    TOK_INTEGER	shift, and go to state 83
    TOK_LIST	shift, and go to state 330
    TOK_LOGICAL	shift, and go to state 85
    TOK_NUMBER	shift, and go to state 86
    TOK_REAL	shift, and go to state 87
    TOK_SET	shift, and go to state 331
    TOK_STRING	shift, and go to state 89
    TOK_IDENTIFIER	shift, and go to state 90

    aggregate_type	go to state 332
    basic_type	go to state 333
    parameter_type	go to state 570
    conformant_aggregation	go to state 335
    generic_type	go to state 336
    defined_type	go to state 337



state 515

    conformant_aggregation  ->  TOK_ARRAY index_spec TOK_OF . optional_or_unique parameter_type   (rule 138)

    TOK_OPTIONAL	shift, and go to state 360
    TOK_UNIQUE	shift, and go to state 361

    $default	reduce using rule 205 (optional_or_unique)

    optional_or_unique	go to state 571



state 516

    conformant_aggregation  ->  TOK_BAG TOK_OF parameter_type .   (rule 139)

    $default	reduce using rule 139 (conformant_aggregation)



state 517

    conformant_aggregation  ->  TOK_BAG index_spec TOK_OF . parameter_type   (rule 140)

    TOK_AGGREGATE	shift, and go to state 326
    TOK_ARRAY	shift, and go to state 327
    TOK_BAG	shift, and go to state 328
    TOK_BINARY	shift, and go to state 81
    TOK_BOOLEAN	shift, and go to state 82
    TOK_GENERIC	shift, and go to state 329
    TOK_INTEGER	shift, and go to state 83
    TOK_LIST	shift, and go to state 330
    TOK_LOGICAL	shift, and go to state 85
    TOK_NUMBER	shift, and go to state 86
    TOK_REAL	shift, and go to state 87
    TOK_SET	shift, and go to state 331
    TOK_STRING	shift, and go to state 89
    TOK_IDENTIFIER	shift, and go to state 90

    aggregate_type	go to state 332
    basic_type	go to state 333
    parameter_type	go to state 572
    conformant_aggregation	go to state 335
    generic_type	go to state 336
    defined_type	go to state 337



state 518

    generic_type  ->  TOK_GENERIC TOK_COLON TOK_IDENTIFIER .   (rule 146)

    $default	reduce using rule 146 (generic_type)



state 519

    conformant_aggregation  ->  TOK_LIST TOK_OF unique . parameter_type   (rule 141)

    TOK_AGGREGATE	shift, and go to state 326
    TOK_ARRAY	shift, and go to state 327
    TOK_BAG	shift, and go to state 328
    TOK_BINARY	shift, and go to state 81
    TOK_BOOLEAN	shift, and go to state 82
    TOK_GENERIC	shift, and go to state 329
    TOK_INTEGER	shift, and go to state 83
    TOK_LIST	shift, and go to state 330
    TOK_LOGICAL	shift, and go to state 85
    TOK_NUMBER	shift, and go to state 86
    TOK_REAL	shift, and go to state 87
    TOK_SET	shift, and go to state 331
    TOK_STRING	shift, and go to state 89
    TOK_IDENTIFIER	shift, and go to state 90

    aggregate_type	go to state 332
    basic_type	go to state 333
    parameter_type	go to state 573
    conformant_aggregation	go to state 335
    generic_type	go to state 336
    defined_type	go to state 337



state 520

    conformant_aggregation  ->  TOK_LIST index_spec TOK_OF . unique parameter_type   (rule 142)

    TOK_UNIQUE	shift, and go to state 245

    $default	reduce using rule 312 (unique)

    unique	go to state 574



state 521

    conformant_aggregation  ->  TOK_SET TOK_OF parameter_type .   (rule 143)

    $default	reduce using rule 143 (conformant_aggregation)



state 522

    conformant_aggregation  ->  TOK_SET index_spec TOK_OF . parameter_type   (rule 144)

    TOK_AGGREGATE	shift, and go to state 326
    TOK_ARRAY	shift, and go to state 327
    TOK_BAG	shift, and go to state 328
    TOK_BINARY	shift, and go to state 81
    TOK_BOOLEAN	shift, and go to state 82
    TOK_GENERIC	shift, and go to state 329
    TOK_INTEGER	shift, and go to state 83
    TOK_LIST	shift, and go to state 330
    TOK_LOGICAL	shift, and go to state 85
    TOK_NUMBER	shift, and go to state 86
    TOK_REAL	shift, and go to state 87
    TOK_SET	shift, and go to state 331
    TOK_STRING	shift, and go to state 89
    TOK_IDENTIFIER	shift, and go to state 90

    aggregate_type	go to state 332
    basic_type	go to state 333
    parameter_type	go to state 575
    conformant_aggregation	go to state 335
    generic_type	go to state 336
    defined_type	go to state 337



state 523

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)
    local_initializer  ->  TOK_ASSIGNMENT expression .   (rule 194)

    TOK_EQUAL	shift, and go to state 281
    TOK_GREATER_EQUAL	shift, and go to state 282
    TOK_GREATER_THAN	shift, and go to state 283
    TOK_IN	shift, and go to state 284
    TOK_INST_EQUAL	shift, and go to state 285
    TOK_INST_NOT_EQUAL	shift, and go to state 286
    TOK_LESS_EQUAL	shift, and go to state 287
    TOK_LESS_THAN	shift, and go to state 288
    TOK_LIKE	shift, and go to state 289
    TOK_NOT_EQUAL	shift, and go to state 290
    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293

    $default	reduce using rule 194 (local_initializer)



state 524

    local_variable  ->  id_list TOK_COLON parameter_type local_initializer semicolon .   (rule 196)

    $default	reduce using rule 196 (local_variable)



state 525

    group_ref  ->  TOK_BACKSLASH . TOK_IDENTIFIER   (rule 222)
    qualifier  ->  TOK_BACKSLASH . TOK_IDENTIFIER   (rule 224)

    TOK_IDENTIFIER	shift, and go to state 576



state 526

    general_ref  ->  assignable group_ref .   (rule 299)

    $default	reduce using rule 299 (general_ref)



state 527

    alias_statement  ->  TOK_ALIAS TOK_IDENTIFIER TOK_FOR general_ref semicolon . @1 statement_rep TOK_END_ALIAS semicolon   (rule 23)

    $default	reduce using rule 22 (@1)

    @1  	go to state 577



state 528

    case_otherwise  ->  TOK_OTHERWISE . TOK_COLON statement   (rule 57)

    TOK_COLON	shift, and go to state 578



state 529

    case_action_list  ->  case_action_list case_action .   (rule 52)

    $default	reduce using rule 52 (case_action_list)



state 530

    case_action  ->  case_labels . TOK_COLON statement   (rule 50)
    case_labels  ->  case_labels . TOK_COMMA expression   (rule 55)

    TOK_COLON	shift, and go to state 579
    TOK_COMMA	shift, and go to state 580



state 531

    case_block  ->  case_action_list case_otherwise .   (rule 53)

    $default	reduce using rule 53 (case_block)



state 532

    case_labels  ->  expression .   (rule 54)
    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)

    TOK_EQUAL	shift, and go to state 281
    TOK_GREATER_EQUAL	shift, and go to state 282
    TOK_GREATER_THAN	shift, and go to state 283
    TOK_IN	shift, and go to state 284
    TOK_INST_EQUAL	shift, and go to state 285
    TOK_INST_NOT_EQUAL	shift, and go to state 286
    TOK_LESS_EQUAL	shift, and go to state 287
    TOK_LESS_THAN	shift, and go to state 288
    TOK_LIKE	shift, and go to state 289
    TOK_NOT_EQUAL	shift, and go to state 290
    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293

    $default	reduce using rule 54 (case_labels)



state 533

    case_statement  ->  TOK_CASE expression TOK_OF case_block TOK_END_CASE . semicolon   (rule 58)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 581



state 534

    if_statement  ->  TOK_IF expression TOK_THEN statement_rep TOK_ELSE . statement_rep TOK_END_IF semicolon   (rule 153)

    TOK_ALIAS	shift, and go to state 121
    TOK_BEGIN	shift, and go to state 122
    TOK_CASE	shift, and go to state 123
    TOK_ESCAPE	shift, and go to state 124
    TOK_IF	shift, and go to state 125
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_REPEAT	shift, and go to state 126
    TOK_RETURN	shift, and go to state 127
    TOK_SKIP	shift, and go to state 128
    TOK_BUILTIN_PROCEDURE	shift, and go to state 129
    TOK_IDENTIFIER	shift, and go to state 130
    TOK_SELF	shift, and go to state 27
    TOK_SEMICOLON	shift, and go to state 13

    $default	reduce using rule 269 (statement_rep)

    alias_statement	go to state 131
    assignable	go to state 132
    assignment_statement	go to state 133
    case_statement	go to state 134
    compound_statement	go to state 135
    escape_statement	go to state 136
    identifier	go to state 137
    if_statement	go to state 138
    proc_call_statement	go to state 139
    procedure_id	go to state 140
    repeat_statement	go to state 141
    return_statement	go to state 142
    semicolon	go to state 143
    skip_statement	go to state 144
    statement	go to state 145
    statement_rep	go to state 582



state 535

    if_statement  ->  TOK_IF expression TOK_THEN statement_rep TOK_END_IF . semicolon   (rule 152)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 583



state 536

    increment_control  ->  TOK_IDENTIFIER TOK_ASSIGNMENT expression TOK_TO . expression by_expression   (rule 155)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 584
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 537

    repeat_statement  ->  TOK_REPEAT increment_control while_control until_control semicolon . statement_rep TOK_END_REPEAT semicolon   (rule 237)

    TOK_ALIAS	shift, and go to state 121
    TOK_BEGIN	shift, and go to state 122
    TOK_CASE	shift, and go to state 123
    TOK_ESCAPE	shift, and go to state 124
    TOK_IF	shift, and go to state 125
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_REPEAT	shift, and go to state 126
    TOK_RETURN	shift, and go to state 127
    TOK_SKIP	shift, and go to state 128
    TOK_BUILTIN_PROCEDURE	shift, and go to state 129
    TOK_IDENTIFIER	shift, and go to state 130
    TOK_SELF	shift, and go to state 27
    TOK_SEMICOLON	shift, and go to state 13

    $default	reduce using rule 269 (statement_rep)

    alias_statement	go to state 131
    assignable	go to state 132
    assignment_statement	go to state 133
    case_statement	go to state 134
    compound_statement	go to state 135
    escape_statement	go to state 136
    identifier	go to state 137
    if_statement	go to state 138
    proc_call_statement	go to state 139
    procedure_id	go to state 140
    repeat_statement	go to state 141
    return_statement	go to state 142
    semicolon	go to state 143
    skip_statement	go to state 144
    statement	go to state 145
    statement_rep	go to state 585



state 538

    repeat_statement  ->  TOK_REPEAT while_control until_control semicolon statement_rep . TOK_END_REPEAT semicolon   (rule 238)

    TOK_END_REPEAT	shift, and go to state 586



state 539

    return_statement  ->  TOK_RETURN TOK_LEFT_PAREN expression TOK_RIGHT_PAREN semicolon .   (rule 240)

    $default	reduce using rule 240 (return_statement)



state 540

    simple_expression  ->  simple_expression . TOK_CONCAT_OP simple_expression   (rule 107)
    simple_expression  ->  simple_expression . TOK_EXP simple_expression   (rule 108)
    simple_expression  ->  simple_expression . TOK_TIMES simple_expression   (rule 109)
    simple_expression  ->  simple_expression . TOK_DIV simple_expression   (rule 110)
    simple_expression  ->  simple_expression . TOK_REAL_DIV simple_expression   (rule 111)
    simple_expression  ->  simple_expression . TOK_MOD simple_expression   (rule 112)
    simple_expression  ->  simple_expression . TOK_PLUS simple_expression   (rule 113)
    simple_expression  ->  simple_expression . TOK_MINUS simple_expression   (rule 114)
    qualifier  ->  TOK_LEFT_BRACKET simple_expression TOK_COLON simple_expression . TOK_RIGHT_BRACKET   (rule 226)

    TOK_MINUS	shift, and go to state 295
    TOK_PLUS	shift, and go to state 296
    TOK_DIV	shift, and go to state 297
    TOK_MOD	shift, and go to state 298
    TOK_REAL_DIV	shift, and go to state 299
    TOK_TIMES	shift, and go to state 300
    TOK_CONCAT_OP	shift, and go to state 301
    TOK_EXP	shift, and go to state 302
    TOK_RIGHT_BRACKET	shift, and go to state 587



state 541

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)
    expression_list  ->  expression_list TOK_COMMA expression .   (rule 116)

    TOK_EQUAL	shift, and go to state 281
    TOK_GREATER_EQUAL	shift, and go to state 282
    TOK_GREATER_THAN	shift, and go to state 283
    TOK_IN	shift, and go to state 284
    TOK_INST_EQUAL	shift, and go to state 285
    TOK_INST_NOT_EQUAL	shift, and go to state 286
    TOK_LESS_EQUAL	shift, and go to state 287
    TOK_LESS_THAN	shift, and go to state 288
    TOK_LIKE	shift, and go to state 289
    TOK_NOT_EQUAL	shift, and go to state 290
    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293

    $default	reduce using rule 116 (expression_list)



state 542

    index_spec  ->  TOK_LEFT_BRACKET expression TOK_COLON expression TOK_RIGHT_BRACKET .   (rule 156)

    $default	reduce using rule 156 (index_spec)



state 543

    limit_spec  ->  TOK_LEFT_BRACKET expression TOK_COLON expression TOK_RIGHT_BRACKET .   (rule 184)

    $default	reduce using rule 184 (limit_spec)



state 544

    formal_parameter  ->  var id_list TOK_COLON . parameter_type   (rule 119)

    TOK_AGGREGATE	shift, and go to state 326
    TOK_ARRAY	shift, and go to state 327
    TOK_BAG	shift, and go to state 328
    TOK_BINARY	shift, and go to state 81
    TOK_BOOLEAN	shift, and go to state 82
    TOK_GENERIC	shift, and go to state 329
    TOK_INTEGER	shift, and go to state 83
    TOK_LIST	shift, and go to state 330
    TOK_LOGICAL	shift, and go to state 85
    TOK_NUMBER	shift, and go to state 86
    TOK_REAL	shift, and go to state 87
    TOK_SET	shift, and go to state 331
    TOK_STRING	shift, and go to state 89
    TOK_IDENTIFIER	shift, and go to state 90

    aggregate_type	go to state 332
    basic_type	go to state 333
    parameter_type	go to state 588
    conformant_aggregation	go to state 335
    generic_type	go to state 336
    defined_type	go to state 337



state 545

    formal_parameter_rep  ->  formal_parameter_rep semicolon formal_parameter .   (rule 123)

    $default	reduce using rule 123 (formal_parameter_rep)



state 546

    function_header  ->  TOK_FUNCTION @3 TOK_IDENTIFIER @4 formal_parameter_list @5 TOK_COLON parameter_type . semicolon   (rule 133)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 589



state 547

    rule_formal_parameter_list  ->  rule_formal_parameter_list TOK_COMMA . rule_formal_parameter   (rule 245)

    TOK_IDENTIFIER	shift, and go to state 481

    rule_formal_parameter	go to state 590



state 548

    rule_header  ->  TOK_RULE @11 TOK_IDENTIFIER TOK_FOR TOK_LEFT_PAREN @12 rule_formal_parameter_list TOK_RIGHT_PAREN . semicolon   (rule 248)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 591



state 549

    id_list  ->  id_list . TOK_COMMA TOK_IDENTIFIER   (rule 148)
    nested_id_list  ->  TOK_LEFT_PAREN id_list . TOK_RIGHT_PAREN   (rule 203)

    TOK_COMMA	shift, and go to state 208
    TOK_RIGHT_PAREN	shift, and go to state 592



state 550

    select_type  ->  TOK_SELECT TOK_LEFT_PAREN defined_type_list TOK_RIGHT_PAREN .   (rule 254)

    $default	reduce using rule 254 (select_type)



state 551

    aggregate_init_body  ->  aggregate_init_body TOK_COMMA aggregate_init_element TOK_COLON . expression   (rule 15)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 593
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 552

    interval  ->  TOK_LEFT_CURL simple_expression rel_op simple_expression rel_op . simple_expression right_curl   (rule 173)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    simple_expression	go to state 594
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 553

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)
    query_expression  ->  TOK_QUERY TOK_LEFT_PAREN TOK_IDENTIFIER TOK_ALL_IN expression . TOK_SUCH_THAT @10 expression TOK_RIGHT_PAREN   (rule 228)

    TOK_EQUAL	shift, and go to state 281
    TOK_GREATER_EQUAL	shift, and go to state 282
    TOK_GREATER_THAN	shift, and go to state 283
    TOK_IN	shift, and go to state 284
    TOK_INST_EQUAL	shift, and go to state 285
    TOK_INST_NOT_EQUAL	shift, and go to state 286
    TOK_LESS_EQUAL	shift, and go to state 287
    TOK_LESS_THAN	shift, and go to state 288
    TOK_LIKE	shift, and go to state 289
    TOK_NOT_EQUAL	shift, and go to state 290
    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293
    TOK_SUCH_THAT	shift, and go to state 595



state 554

    cardinality_op  ->  TOK_LEFT_CURL expression TOK_COLON expression . TOK_RIGHT_CURL   (rule 49)
    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)

    TOK_EQUAL	shift, and go to state 281
    TOK_GREATER_EQUAL	shift, and go to state 282
    TOK_GREATER_THAN	shift, and go to state 283
    TOK_IN	shift, and go to state 284
    TOK_INST_EQUAL	shift, and go to state 285
    TOK_INST_NOT_EQUAL	shift, and go to state 286
    TOK_LESS_EQUAL	shift, and go to state 287
    TOK_LESS_THAN	shift, and go to state 288
    TOK_LIKE	shift, and go to state 289
    TOK_NOT_EQUAL	shift, and go to state 290
    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293
    TOK_RIGHT_CURL	shift, and go to state 596



state 555

    supertype_expression_list  ->  supertype_expression_list TOK_COMMA . supertype_expression   (rule 284)

    TOK_LEFT_PAREN	shift, and go to state 312
    TOK_ONEOF	shift, and go to state 313
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_IDENTIFIER	shift, and go to state 26
    TOK_SELF	shift, and go to state 27

    identifier	go to state 314
    oneof_op	go to state 315
    supertype_expression	go to state 597
    supertype_factor	go to state 317



state 556

    supertype_factor  ->  oneof_op TOK_LEFT_PAREN supertype_expression_list TOK_RIGHT_PAREN .   (rule 286)

    $default	reduce using rule 286 (supertype_factor)



state 557

    derived_attribute  ->  attribute_decl TOK_COLON attribute_type . initializer semicolon   (rule 72)

    TOK_ASSIGNMENT	shift, and go to state 598

    initializer	go to state 599



state 558

    attribute_decl  ->  TOK_SELF TOK_BACKSLASH TOK_IDENTIFIER TOK_DOT . TOK_IDENTIFIER   (rule 81)

    TOK_IDENTIFIER	shift, and go to state 600



state 559

    inverse_attr  ->  TOK_IDENTIFIER TOK_COLON . set_or_bag_of_entity TOK_FOR TOK_IDENTIFIER semicolon   (rule 181)

    TOK_BAG	shift, and go to state 601
    TOK_SET	shift, and go to state 602
    TOK_IDENTIFIER	shift, and go to state 90

    set_or_bag_of_entity	go to state 603
    defined_type	go to state 604



state 560

    inverse_attr_list  ->  inverse_attr_list inverse_attr .   (rule 180)

    $default	reduce using rule 180 (inverse_attr_list)



state 561

    qualified_attr  ->  TOK_IDENTIFIER .   (rule 314)
    labelled_attrib_list  ->  TOK_IDENTIFIER . TOK_COLON qualified_attr_list semicolon   (rule 319)

    TOK_COLON	shift, and go to state 605

    $default	reduce using rule 314 (qualified_attr)



state 562

    qualified_attr  ->  TOK_SELF . TOK_BACKSLASH TOK_IDENTIFIER TOK_DOT TOK_IDENTIFIER   (rule 315)

    TOK_BACKSLASH	shift, and go to state 606



state 563

    qualified_attr_list  ->  qualified_attr .   (rule 316)

    $default	reduce using rule 316 (qualified_attr_list)



state 564

    qualified_attr_list  ->  qualified_attr_list . TOK_COMMA qualified_attr   (rule 317)
    labelled_attrib_list  ->  qualified_attr_list . semicolon   (rule 318)

    TOK_COMMA	shift, and go to state 607
    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 608



state 565

    labelled_attrib_list_list  ->  labelled_attrib_list .   (rule 320)

    $default	reduce using rule 320 (labelled_attrib_list_list)



state 566

    labelled_attrib_list_list  ->  labelled_attrib_list_list . labelled_attrib_list   (rule 321)
    unique_clause  ->  TOK_UNIQUE labelled_attrib_list_list .   (rule 323)

    TOK_IDENTIFIER	shift, and go to state 561
    TOK_SELF	shift, and go to state 562

    $default	reduce using rule 323 (unique_clause)

    qualified_attr	go to state 563
    qualified_attr_list	go to state 564
    labelled_attrib_list	go to state 609



state 567

    entity_body  ->  explicit_attr_list derive_decl inverse_clause unique_clause where_rule_OPT .   (rule 75)

    $default	reduce using rule 75 (entity_body)



state 568

    explicit_attribute  ->  attribute_decl_list TOK_COLON optional attribute_type . semicolon   (rule 86)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 610



state 569

    aggregate_type  ->  TOK_AGGREGATE TOK_COLON TOK_IDENTIFIER TOK_OF . parameter_type   (rule 17)

    TOK_AGGREGATE	shift, and go to state 326
    TOK_ARRAY	shift, and go to state 327
    TOK_BAG	shift, and go to state 328
    TOK_BINARY	shift, and go to state 81
    TOK_BOOLEAN	shift, and go to state 82
    TOK_GENERIC	shift, and go to state 329
    TOK_INTEGER	shift, and go to state 83
    TOK_LIST	shift, and go to state 330
    TOK_LOGICAL	shift, and go to state 85
    TOK_NUMBER	shift, and go to state 86
    TOK_REAL	shift, and go to state 87
    TOK_SET	shift, and go to state 331
    TOK_STRING	shift, and go to state 89
    TOK_IDENTIFIER	shift, and go to state 90

    aggregate_type	go to state 332
    basic_type	go to state 333
    parameter_type	go to state 611
    conformant_aggregation	go to state 335
    generic_type	go to state 336
    defined_type	go to state 337



state 570

    conformant_aggregation  ->  TOK_ARRAY TOK_OF optional_or_unique parameter_type .   (rule 137)

    $default	reduce using rule 137 (conformant_aggregation)



state 571

    conformant_aggregation  ->  TOK_ARRAY index_spec TOK_OF optional_or_unique . parameter_type   (rule 138)

    TOK_AGGREGATE	shift, and go to state 326
    TOK_ARRAY	shift, and go to state 327
    TOK_BAG	shift, and go to state 328
    TOK_BINARY	shift, and go to state 81
    TOK_BOOLEAN	shift, and go to state 82
    TOK_GENERIC	shift, and go to state 329
    TOK_INTEGER	shift, and go to state 83
    TOK_LIST	shift, and go to state 330
    TOK_LOGICAL	shift, and go to state 85
    TOK_NUMBER	shift, and go to state 86
    TOK_REAL	shift, and go to state 87
    TOK_SET	shift, and go to state 331
    TOK_STRING	shift, and go to state 89
    TOK_IDENTIFIER	shift, and go to state 90

    aggregate_type	go to state 332
    basic_type	go to state 333
    parameter_type	go to state 612
    conformant_aggregation	go to state 335
    generic_type	go to state 336
    defined_type	go to state 337



state 572

    conformant_aggregation  ->  TOK_BAG index_spec TOK_OF parameter_type .   (rule 140)

    $default	reduce using rule 140 (conformant_aggregation)



state 573

    conformant_aggregation  ->  TOK_LIST TOK_OF unique parameter_type .   (rule 141)

    $default	reduce using rule 141 (conformant_aggregation)



state 574

    conformant_aggregation  ->  TOK_LIST index_spec TOK_OF unique . parameter_type   (rule 142)

    TOK_AGGREGATE	shift, and go to state 326
    TOK_ARRAY	shift, and go to state 327
    TOK_BAG	shift, and go to state 328
    TOK_BINARY	shift, and go to state 81
    TOK_BOOLEAN	shift, and go to state 82
    TOK_GENERIC	shift, and go to state 329
    TOK_INTEGER	shift, and go to state 83
    TOK_LIST	shift, and go to state 330
    TOK_LOGICAL	shift, and go to state 85
    TOK_NUMBER	shift, and go to state 86
    TOK_REAL	shift, and go to state 87
    TOK_SET	shift, and go to state 331
    TOK_STRING	shift, and go to state 89
    TOK_IDENTIFIER	shift, and go to state 90

    aggregate_type	go to state 332
    basic_type	go to state 333
    parameter_type	go to state 613
    conformant_aggregation	go to state 335
    generic_type	go to state 336
    defined_type	go to state 337



state 575

    conformant_aggregation  ->  TOK_SET index_spec TOK_OF parameter_type .   (rule 144)

    $default	reduce using rule 144 (conformant_aggregation)



state 576

    group_ref  ->  TOK_BACKSLASH TOK_IDENTIFIER .   (rule 222)
    qualifier  ->  TOK_BACKSLASH TOK_IDENTIFIER .   (rule 224)

    $default	reduce using rule 224 (qualifier)



state 577

    alias_statement  ->  TOK_ALIAS TOK_IDENTIFIER TOK_FOR general_ref semicolon @1 . statement_rep TOK_END_ALIAS semicolon   (rule 23)

    TOK_ALIAS	shift, and go to state 121
    TOK_BEGIN	shift, and go to state 122
    TOK_CASE	shift, and go to state 123
    TOK_ESCAPE	shift, and go to state 124
    TOK_IF	shift, and go to state 125
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_REPEAT	shift, and go to state 126
    TOK_RETURN	shift, and go to state 127
    TOK_SKIP	shift, and go to state 128
    TOK_BUILTIN_PROCEDURE	shift, and go to state 129
    TOK_IDENTIFIER	shift, and go to state 130
    TOK_SELF	shift, and go to state 27
    TOK_SEMICOLON	shift, and go to state 13

    $default	reduce using rule 269 (statement_rep)

    alias_statement	go to state 131
    assignable	go to state 132
    assignment_statement	go to state 133
    case_statement	go to state 134
    compound_statement	go to state 135
    escape_statement	go to state 136
    identifier	go to state 137
    if_statement	go to state 138
    proc_call_statement	go to state 139
    procedure_id	go to state 140
    repeat_statement	go to state 141
    return_statement	go to state 142
    semicolon	go to state 143
    skip_statement	go to state 144
    statement	go to state 145
    statement_rep	go to state 614



state 578

    case_otherwise  ->  TOK_OTHERWISE TOK_COLON . statement   (rule 57)

    TOK_ALIAS	shift, and go to state 121
    TOK_BEGIN	shift, and go to state 122
    TOK_CASE	shift, and go to state 123
    TOK_ESCAPE	shift, and go to state 124
    TOK_IF	shift, and go to state 125
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_REPEAT	shift, and go to state 126
    TOK_RETURN	shift, and go to state 127
    TOK_SKIP	shift, and go to state 128
    TOK_BUILTIN_PROCEDURE	shift, and go to state 129
    TOK_IDENTIFIER	shift, and go to state 130
    TOK_SELF	shift, and go to state 27

    alias_statement	go to state 131
    assignable	go to state 132
    assignment_statement	go to state 133
    case_statement	go to state 134
    compound_statement	go to state 135
    escape_statement	go to state 136
    identifier	go to state 137
    if_statement	go to state 138
    proc_call_statement	go to state 139
    procedure_id	go to state 140
    repeat_statement	go to state 141
    return_statement	go to state 142
    skip_statement	go to state 144
    statement	go to state 615



state 579

    case_action  ->  case_labels TOK_COLON . statement   (rule 50)

    TOK_ALIAS	shift, and go to state 121
    TOK_BEGIN	shift, and go to state 122
    TOK_CASE	shift, and go to state 123
    TOK_ESCAPE	shift, and go to state 124
    TOK_IF	shift, and go to state 125
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_REPEAT	shift, and go to state 126
    TOK_RETURN	shift, and go to state 127
    TOK_SKIP	shift, and go to state 128
    TOK_BUILTIN_PROCEDURE	shift, and go to state 129
    TOK_IDENTIFIER	shift, and go to state 130
    TOK_SELF	shift, and go to state 27

    alias_statement	go to state 131
    assignable	go to state 132
    assignment_statement	go to state 133
    case_statement	go to state 134
    compound_statement	go to state 135
    escape_statement	go to state 136
    identifier	go to state 137
    if_statement	go to state 138
    proc_call_statement	go to state 139
    procedure_id	go to state 140
    repeat_statement	go to state 141
    return_statement	go to state 142
    skip_statement	go to state 144
    statement	go to state 616



state 580

    case_labels  ->  case_labels TOK_COMMA . expression   (rule 55)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 617
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 581

    case_statement  ->  TOK_CASE expression TOK_OF case_block TOK_END_CASE semicolon .   (rule 58)

    $default	reduce using rule 58 (case_statement)



state 582

    if_statement  ->  TOK_IF expression TOK_THEN statement_rep TOK_ELSE statement_rep . TOK_END_IF semicolon   (rule 153)

    TOK_END_IF	shift, and go to state 618



state 583

    if_statement  ->  TOK_IF expression TOK_THEN statement_rep TOK_END_IF semicolon .   (rule 152)

    $default	reduce using rule 152 (if_statement)



state 584

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)
    increment_control  ->  TOK_IDENTIFIER TOK_ASSIGNMENT expression TOK_TO expression . by_expression   (rule 155)

    TOK_EQUAL	shift, and go to state 281
    TOK_GREATER_EQUAL	shift, and go to state 282
    TOK_GREATER_THAN	shift, and go to state 283
    TOK_IN	shift, and go to state 284
    TOK_INST_EQUAL	shift, and go to state 285
    TOK_INST_NOT_EQUAL	shift, and go to state 286
    TOK_LESS_EQUAL	shift, and go to state 287
    TOK_LESS_THAN	shift, and go to state 288
    TOK_LIKE	shift, and go to state 289
    TOK_NOT_EQUAL	shift, and go to state 290
    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293
    TOK_BY	shift, and go to state 619

    $default	reduce using rule 47 (by_expression)

    by_expression	go to state 620



state 585

    repeat_statement  ->  TOK_REPEAT increment_control while_control until_control semicolon statement_rep . TOK_END_REPEAT semicolon   (rule 237)

    TOK_END_REPEAT	shift, and go to state 621



state 586

    repeat_statement  ->  TOK_REPEAT while_control until_control semicolon statement_rep TOK_END_REPEAT . semicolon   (rule 238)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 622



state 587

    qualifier  ->  TOK_LEFT_BRACKET simple_expression TOK_COLON simple_expression TOK_RIGHT_BRACKET .   (rule 226)

    $default	reduce using rule 226 (qualifier)



state 588

    formal_parameter  ->  var id_list TOK_COLON parameter_type .   (rule 119)

    $default	reduce using rule 119 (formal_parameter)



state 589

    function_header  ->  TOK_FUNCTION @3 TOK_IDENTIFIER @4 formal_parameter_list @5 TOK_COLON parameter_type semicolon .   (rule 133)

    $default	reduce using rule 133 (function_header)



state 590

    rule_formal_parameter_list  ->  rule_formal_parameter_list TOK_COMMA rule_formal_parameter .   (rule 245)

    $default	reduce using rule 245 (rule_formal_parameter_list)



state 591

    rule_header  ->  TOK_RULE @11 TOK_IDENTIFIER TOK_FOR TOK_LEFT_PAREN @12 rule_formal_parameter_list TOK_RIGHT_PAREN semicolon .   (rule 248)

    $default	reduce using rule 248 (rule_header)



state 592

    nested_id_list  ->  TOK_LEFT_PAREN id_list TOK_RIGHT_PAREN .   (rule 203)

    $default	reduce using rule 203 (nested_id_list)



state 593

    aggregate_init_body  ->  aggregate_init_body TOK_COMMA aggregate_init_element TOK_COLON expression .   (rule 15)
    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)

    TOK_EQUAL	shift, and go to state 281
    TOK_GREATER_EQUAL	shift, and go to state 282
    TOK_GREATER_THAN	shift, and go to state 283
    TOK_IN	shift, and go to state 284
    TOK_INST_EQUAL	shift, and go to state 285
    TOK_INST_NOT_EQUAL	shift, and go to state 286
    TOK_LESS_EQUAL	shift, and go to state 287
    TOK_LESS_THAN	shift, and go to state 288
    TOK_LIKE	shift, and go to state 289
    TOK_NOT_EQUAL	shift, and go to state 290
    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293

    $default	reduce using rule 15 (aggregate_init_body)



state 594

    simple_expression  ->  simple_expression . TOK_CONCAT_OP simple_expression   (rule 107)
    simple_expression  ->  simple_expression . TOK_EXP simple_expression   (rule 108)
    simple_expression  ->  simple_expression . TOK_TIMES simple_expression   (rule 109)
    simple_expression  ->  simple_expression . TOK_DIV simple_expression   (rule 110)
    simple_expression  ->  simple_expression . TOK_REAL_DIV simple_expression   (rule 111)
    simple_expression  ->  simple_expression . TOK_MOD simple_expression   (rule 112)
    simple_expression  ->  simple_expression . TOK_PLUS simple_expression   (rule 113)
    simple_expression  ->  simple_expression . TOK_MINUS simple_expression   (rule 114)
    interval  ->  TOK_LEFT_CURL simple_expression rel_op simple_expression rel_op simple_expression . right_curl   (rule 173)

    TOK_MINUS	shift, and go to state 295
    TOK_PLUS	shift, and go to state 296
    TOK_DIV	shift, and go to state 297
    TOK_MOD	shift, and go to state 298
    TOK_REAL_DIV	shift, and go to state 299
    TOK_TIMES	shift, and go to state 300
    TOK_CONCAT_OP	shift, and go to state 301
    TOK_EXP	shift, and go to state 302
    TOK_RIGHT_CURL	shift, and go to state 623

    right_curl	go to state 624



state 595

    query_expression  ->  TOK_QUERY TOK_LEFT_PAREN TOK_IDENTIFIER TOK_ALL_IN expression TOK_SUCH_THAT . @10 expression TOK_RIGHT_PAREN   (rule 228)

    $default	reduce using rule 227 (@10)

    @10 	go to state 625



state 596

    cardinality_op  ->  TOK_LEFT_CURL expression TOK_COLON expression TOK_RIGHT_CURL .   (rule 49)

    $default	reduce using rule 49 (cardinality_op)



state 597

    supertype_expression  ->  supertype_expression . TOK_AND supertype_factor   (rule 281)
    supertype_expression  ->  supertype_expression . TOK_ANDOR supertype_factor   (rule 282)
    supertype_expression_list  ->  supertype_expression_list TOK_COMMA supertype_expression .   (rule 284)

    TOK_AND	shift, and go to state 427
    TOK_ANDOR	shift, and go to state 428

    $default	reduce using rule 284 (supertype_expression_list)



state 598

    initializer  ->  TOK_ASSIGNMENT . expression   (rule 157)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 626
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 599

    derived_attribute  ->  attribute_decl TOK_COLON attribute_type initializer . semicolon   (rule 72)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 627



state 600

    attribute_decl  ->  TOK_SELF TOK_BACKSLASH TOK_IDENTIFIER TOK_DOT TOK_IDENTIFIER .   (rule 81)

    $default	reduce using rule 81 (attribute_decl)



state 601

    set_or_bag_of_entity  ->  TOK_BAG . limit_spec TOK_OF defined_type   (rule 177)
    set_or_bag_of_entity  ->  TOK_BAG . TOK_OF defined_type   (rule 178)

    TOK_LEFT_BRACKET	shift, and go to state 151
    TOK_OF	shift, and go to state 628

    limit_spec	go to state 629



state 602

    set_or_bag_of_entity  ->  TOK_SET . TOK_OF defined_type   (rule 175)
    set_or_bag_of_entity  ->  TOK_SET . limit_spec TOK_OF defined_type   (rule 176)

    TOK_LEFT_BRACKET	shift, and go to state 151
    TOK_OF	shift, and go to state 630

    limit_spec	go to state 631



state 603

    inverse_attr  ->  TOK_IDENTIFIER TOK_COLON set_or_bag_of_entity . TOK_FOR TOK_IDENTIFIER semicolon   (rule 181)

    TOK_FOR	shift, and go to state 632



state 604

    set_or_bag_of_entity  ->  defined_type .   (rule 174)

    $default	reduce using rule 174 (set_or_bag_of_entity)



state 605

    labelled_attrib_list  ->  TOK_IDENTIFIER TOK_COLON . qualified_attr_list semicolon   (rule 319)

    TOK_IDENTIFIER	shift, and go to state 633
    TOK_SELF	shift, and go to state 562

    qualified_attr	go to state 563
    qualified_attr_list	go to state 634



state 606

    qualified_attr  ->  TOK_SELF TOK_BACKSLASH . TOK_IDENTIFIER TOK_DOT TOK_IDENTIFIER   (rule 315)

    TOK_IDENTIFIER	shift, and go to state 635



state 607

    qualified_attr_list  ->  qualified_attr_list TOK_COMMA . qualified_attr   (rule 317)

    TOK_IDENTIFIER	shift, and go to state 633
    TOK_SELF	shift, and go to state 562

    qualified_attr	go to state 636



state 608

    labelled_attrib_list  ->  qualified_attr_list semicolon .   (rule 318)

    $default	reduce using rule 318 (labelled_attrib_list)



state 609

    labelled_attrib_list_list  ->  labelled_attrib_list_list labelled_attrib_list .   (rule 321)

    $default	reduce using rule 321 (labelled_attrib_list_list)



state 610

    explicit_attribute  ->  attribute_decl_list TOK_COLON optional attribute_type semicolon .   (rule 86)

    $default	reduce using rule 86 (explicit_attribute)



state 611

    aggregate_type  ->  TOK_AGGREGATE TOK_COLON TOK_IDENTIFIER TOK_OF parameter_type .   (rule 17)

    $default	reduce using rule 17 (aggregate_type)



state 612

    conformant_aggregation  ->  TOK_ARRAY index_spec TOK_OF optional_or_unique parameter_type .   (rule 138)

    $default	reduce using rule 138 (conformant_aggregation)



state 613

    conformant_aggregation  ->  TOK_LIST index_spec TOK_OF unique parameter_type .   (rule 142)

    $default	reduce using rule 142 (conformant_aggregation)



state 614

    alias_statement  ->  TOK_ALIAS TOK_IDENTIFIER TOK_FOR general_ref semicolon @1 statement_rep . TOK_END_ALIAS semicolon   (rule 23)

    TOK_END_ALIAS	shift, and go to state 637



state 615

    case_otherwise  ->  TOK_OTHERWISE TOK_COLON statement .   (rule 57)

    $default	reduce using rule 57 (case_otherwise)



state 616

    case_action  ->  case_labels TOK_COLON statement .   (rule 50)

    $default	reduce using rule 50 (case_action)



state 617

    case_labels  ->  case_labels TOK_COMMA expression .   (rule 55)
    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)

    TOK_EQUAL	shift, and go to state 281
    TOK_GREATER_EQUAL	shift, and go to state 282
    TOK_GREATER_THAN	shift, and go to state 283
    TOK_IN	shift, and go to state 284
    TOK_INST_EQUAL	shift, and go to state 285
    TOK_INST_NOT_EQUAL	shift, and go to state 286
    TOK_LESS_EQUAL	shift, and go to state 287
    TOK_LESS_THAN	shift, and go to state 288
    TOK_LIKE	shift, and go to state 289
    TOK_NOT_EQUAL	shift, and go to state 290
    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293

    $default	reduce using rule 55 (case_labels)



state 618

    if_statement  ->  TOK_IF expression TOK_THEN statement_rep TOK_ELSE statement_rep TOK_END_IF . semicolon   (rule 153)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 638



state 619

    by_expression  ->  TOK_BY . expression   (rule 48)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 639
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 620

    increment_control  ->  TOK_IDENTIFIER TOK_ASSIGNMENT expression TOK_TO expression by_expression .   (rule 155)

    $default	reduce using rule 155 (increment_control)



state 621

    repeat_statement  ->  TOK_REPEAT increment_control while_control until_control semicolon statement_rep TOK_END_REPEAT . semicolon   (rule 237)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 640



state 622

    repeat_statement  ->  TOK_REPEAT while_control until_control semicolon statement_rep TOK_END_REPEAT semicolon .   (rule 238)

    $default	reduce using rule 238 (repeat_statement)



state 623

    right_curl  ->  TOK_RIGHT_CURL .   (rule 241)

    $default	reduce using rule 241 (right_curl)



state 624

    interval  ->  TOK_LEFT_CURL simple_expression rel_op simple_expression rel_op simple_expression right_curl .   (rule 173)

    $default	reduce using rule 173 (interval)



state 625

    query_expression  ->  TOK_QUERY TOK_LEFT_PAREN TOK_IDENTIFIER TOK_ALL_IN expression TOK_SUCH_THAT @10 . expression TOK_RIGHT_PAREN   (rule 228)

    TOK_MINUS	shift, and go to state 171
    TOK_PLUS	shift, and go to state 172
    TOK_NOT	shift, and go to state 173
    TOK_LEFT_BRACKET	shift, and go to state 174
    TOK_E	shift, and go to state 175
    TOK_LEFT_CURL	shift, and go to state 176
    TOK_LEFT_PAREN	shift, and go to state 177
    TOK_PI	shift, and go to state 178
    TOK_QUERY	shift, and go to state 179
    TOK_QUESTION_MARK	shift, and go to state 25
    TOK_STRING_LITERAL	shift, and go to state 180
    TOK_STRING_LITERAL_ENCODED	shift, and go to state 181
    TOK_BUILTIN_FUNCTION	shift, and go to state 182
    TOK_IDENTIFIER	shift, and go to state 214
    TOK_SELF	shift, and go to state 27
    TOK_INTEGER_LITERAL	shift, and go to state 184
    TOK_REAL_LITERAL	shift, and go to state 185
    TOK_LOGICAL_LITERAL	shift, and go to state 186
    TOK_BINARY_LITERAL	shift, and go to state 187

    aggregate_initializer	go to state 188
    constant	go to state 189
    expression	go to state 641
    simple_expression	go to state 191
    function_call	go to state 192
    function_id	go to state 193
    identifier	go to state 194
    interval	go to state 195
    literal	go to state 196
    query_expression	go to state 197
    unary_expression	go to state 198



state 626

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)
    initializer  ->  TOK_ASSIGNMENT expression .   (rule 157)

    TOK_EQUAL	shift, and go to state 281
    TOK_GREATER_EQUAL	shift, and go to state 282
    TOK_GREATER_THAN	shift, and go to state 283
    TOK_IN	shift, and go to state 284
    TOK_INST_EQUAL	shift, and go to state 285
    TOK_INST_NOT_EQUAL	shift, and go to state 286
    TOK_LESS_EQUAL	shift, and go to state 287
    TOK_LESS_THAN	shift, and go to state 288
    TOK_LIKE	shift, and go to state 289
    TOK_NOT_EQUAL	shift, and go to state 290
    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293

    $default	reduce using rule 157 (initializer)



state 627

    derived_attribute  ->  attribute_decl TOK_COLON attribute_type initializer semicolon .   (rule 72)

    $default	reduce using rule 72 (derived_attribute)



state 628

    set_or_bag_of_entity  ->  TOK_BAG TOK_OF . defined_type   (rule 178)

    TOK_IDENTIFIER	shift, and go to state 90

    defined_type	go to state 642



state 629

    set_or_bag_of_entity  ->  TOK_BAG limit_spec . TOK_OF defined_type   (rule 177)

    TOK_OF	shift, and go to state 643



state 630

    set_or_bag_of_entity  ->  TOK_SET TOK_OF . defined_type   (rule 175)

    TOK_IDENTIFIER	shift, and go to state 90

    defined_type	go to state 644



state 631

    set_or_bag_of_entity  ->  TOK_SET limit_spec . TOK_OF defined_type   (rule 176)

    TOK_OF	shift, and go to state 645



state 632

    inverse_attr  ->  TOK_IDENTIFIER TOK_COLON set_or_bag_of_entity TOK_FOR . TOK_IDENTIFIER semicolon   (rule 181)

    TOK_IDENTIFIER	shift, and go to state 646



state 633

    qualified_attr  ->  TOK_IDENTIFIER .   (rule 314)

    $default	reduce using rule 314 (qualified_attr)



state 634

    qualified_attr_list  ->  qualified_attr_list . TOK_COMMA qualified_attr   (rule 317)
    labelled_attrib_list  ->  TOK_IDENTIFIER TOK_COLON qualified_attr_list . semicolon   (rule 319)

    TOK_COMMA	shift, and go to state 607
    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 647



state 635

    qualified_attr  ->  TOK_SELF TOK_BACKSLASH TOK_IDENTIFIER . TOK_DOT TOK_IDENTIFIER   (rule 315)

    TOK_DOT	shift, and go to state 648



state 636

    qualified_attr_list  ->  qualified_attr_list TOK_COMMA qualified_attr .   (rule 317)

    $default	reduce using rule 317 (qualified_attr_list)



state 637

    alias_statement  ->  TOK_ALIAS TOK_IDENTIFIER TOK_FOR general_ref semicolon @1 statement_rep TOK_END_ALIAS . semicolon   (rule 23)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 649



state 638

    if_statement  ->  TOK_IF expression TOK_THEN statement_rep TOK_ELSE statement_rep TOK_END_IF semicolon .   (rule 153)

    $default	reduce using rule 153 (if_statement)



state 639

    by_expression  ->  TOK_BY expression .   (rule 48)
    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)

    TOK_EQUAL	shift, and go to state 281
    TOK_GREATER_EQUAL	shift, and go to state 282
    TOK_GREATER_THAN	shift, and go to state 283
    TOK_IN	shift, and go to state 284
    TOK_INST_EQUAL	shift, and go to state 285
    TOK_INST_NOT_EQUAL	shift, and go to state 286
    TOK_LESS_EQUAL	shift, and go to state 287
    TOK_LESS_THAN	shift, and go to state 288
    TOK_LIKE	shift, and go to state 289
    TOK_NOT_EQUAL	shift, and go to state 290
    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293

    $default	reduce using rule 48 (by_expression)



state 640

    repeat_statement  ->  TOK_REPEAT increment_control while_control until_control semicolon statement_rep TOK_END_REPEAT semicolon .   (rule 237)

    $default	reduce using rule 237 (repeat_statement)



state 641

    expression  ->  expression . TOK_AND expression   (rule 92)
    expression  ->  expression . TOK_OR expression   (rule 93)
    expression  ->  expression . TOK_XOR expression   (rule 94)
    expression  ->  expression . TOK_LESS_THAN expression   (rule 95)
    expression  ->  expression . TOK_GREATER_THAN expression   (rule 96)
    expression  ->  expression . TOK_EQUAL expression   (rule 97)
    expression  ->  expression . TOK_LESS_EQUAL expression   (rule 98)
    expression  ->  expression . TOK_GREATER_EQUAL expression   (rule 99)
    expression  ->  expression . TOK_NOT_EQUAL expression   (rule 100)
    expression  ->  expression . TOK_INST_EQUAL expression   (rule 101)
    expression  ->  expression . TOK_INST_NOT_EQUAL expression   (rule 102)
    expression  ->  expression . TOK_IN expression   (rule 103)
    expression  ->  expression . TOK_LIKE expression   (rule 104)
    query_expression  ->  TOK_QUERY TOK_LEFT_PAREN TOK_IDENTIFIER TOK_ALL_IN expression TOK_SUCH_THAT @10 expression . TOK_RIGHT_PAREN   (rule 228)

    TOK_EQUAL	shift, and go to state 281
    TOK_GREATER_EQUAL	shift, and go to state 282
    TOK_GREATER_THAN	shift, and go to state 283
    TOK_IN	shift, and go to state 284
    TOK_INST_EQUAL	shift, and go to state 285
    TOK_INST_NOT_EQUAL	shift, and go to state 286
    TOK_LESS_EQUAL	shift, and go to state 287
    TOK_LESS_THAN	shift, and go to state 288
    TOK_LIKE	shift, and go to state 289
    TOK_NOT_EQUAL	shift, and go to state 290
    TOK_OR	shift, and go to state 291
    TOK_XOR	shift, and go to state 292
    TOK_AND	shift, and go to state 293
    TOK_RIGHT_PAREN	shift, and go to state 650



state 642

    set_or_bag_of_entity  ->  TOK_BAG TOK_OF defined_type .   (rule 178)

    $default	reduce using rule 178 (set_or_bag_of_entity)



state 643

    set_or_bag_of_entity  ->  TOK_BAG limit_spec TOK_OF . defined_type   (rule 177)

    TOK_IDENTIFIER	shift, and go to state 90

    defined_type	go to state 651



state 644

    set_or_bag_of_entity  ->  TOK_SET TOK_OF defined_type .   (rule 175)

    $default	reduce using rule 175 (set_or_bag_of_entity)



state 645

    set_or_bag_of_entity  ->  TOK_SET limit_spec TOK_OF . defined_type   (rule 176)

    TOK_IDENTIFIER	shift, and go to state 90

    defined_type	go to state 652



state 646

    inverse_attr  ->  TOK_IDENTIFIER TOK_COLON set_or_bag_of_entity TOK_FOR TOK_IDENTIFIER . semicolon   (rule 181)

    TOK_SEMICOLON	shift, and go to state 13

    semicolon	go to state 653



state 647

    labelled_attrib_list  ->  TOK_IDENTIFIER TOK_COLON qualified_attr_list semicolon .   (rule 319)

    $default	reduce using rule 319 (labelled_attrib_list)



state 648

    qualified_attr  ->  TOK_SELF TOK_BACKSLASH TOK_IDENTIFIER TOK_DOT . TOK_IDENTIFIER   (rule 315)

    TOK_IDENTIFIER	shift, and go to state 654



state 649

    alias_statement  ->  TOK_ALIAS TOK_IDENTIFIER TOK_FOR general_ref semicolon @1 statement_rep TOK_END_ALIAS semicolon .   (rule 23)

    $default	reduce using rule 23 (alias_statement)



state 650

    query_expression  ->  TOK_QUERY TOK_LEFT_PAREN TOK_IDENTIFIER TOK_ALL_IN expression TOK_SUCH_THAT @10 expression TOK_RIGHT_PAREN .   (rule 228)

    $default	reduce using rule 228 (query_expression)



state 651

    set_or_bag_of_entity  ->  TOK_BAG limit_spec TOK_OF defined_type .   (rule 177)

    $default	reduce using rule 177 (set_or_bag_of_entity)



state 652

    set_or_bag_of_entity  ->  TOK_SET limit_spec TOK_OF defined_type .   (rule 176)

    $default	reduce using rule 176 (set_or_bag_of_entity)



state 653

    inverse_attr  ->  TOK_IDENTIFIER TOK_COLON set_or_bag_of_entity TOK_FOR TOK_IDENTIFIER semicolon .   (rule 181)

    $default	reduce using rule 181 (inverse_attr)



state 654

    qualified_attr  ->  TOK_SELF TOK_BACKSLASH TOK_IDENTIFIER TOK_DOT TOK_IDENTIFIER .   (rule 315)

    $default	reduce using rule 315 (qualified_attr)



state 655

    $   	go to state 656



state 656

    $   	go to state 657



state 657

    $default	accept
