# Minimum required version of CMake
CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
IF(COMMAND CMAKE_POLICY)
	CMAKE_POLICY(SET CMP0003 NEW)
ENDIF(COMMAND CMAKE_POLICY)

# set CMake project name
PROJECT(FLEX)

SET(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/CMake)
find_package(REGEX)

SET(TARGET_LIBS ${TARGET_LIBS} ${REGEX_LIBRARY})

SET(flex_SOURCES
	ccl.c
	dfa.c
	ecs.c
	scanflags.c
	gen.c
	main.c
	misc.c
	nfa.c
	sym.c
	tblcmp.c
	yylex.c
	options.c
	scanopt.c
	buf.c
	tables.c
	tables_shared.c
	filter.c
	regex.c
)
SET(flex_bootstrap_SOURCES
	scan.c   # scan.l
	parse.c  # parse.y
	skel.c   # flex.skl
)

SET(VERSION "2.5.35")

if(NOT WIN32)
	find_library(M_LIBRARY NAMES m PATHS /usr/lib /usr/local/lib)
ELSE(NOT WIN32)
	set(M_LIBRARY "")
endif(NOT WIN32)

include_directories(
	${CMAKE_CURRENT_SOURCE_DIR}
	${CMAKE_CURRENT_BINARY_DIR}
	)

add_definitions(
	-DHAVE_CONFIG_H
	)

INCLUDE(CheckIncludeFile)
SET(STDC_HEADERS 1)
SET(M4 ${CMAKE_BINARY_DIR}/${BIN_DIR}/m4)
CHECK_INCLUDE_FILE(alloca.h HAVE_ALLOCA_H)

configure_file(conf.in ${CMAKE_CURRENT_BINARY_DIR}/config.h)



add_executable(flex ${flex_SOURCES} ${flex_bootstrap_SOURCES})
if(M_LIBRARY)
	SET(TARGET_LIBS ${TARGET_LIBS} ${M_LIBRARY})
endif(M_LIBRARY)
target_link_libraries(flex ${TARGET_LIBS})
