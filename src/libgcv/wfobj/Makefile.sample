BRLCAD = $(HOME)/brlcad
LIBDIR = $(HOME)/build/lib

vpath obj-g_new.c $(BRLCAD)/src/conv

INCLUDES = -I . -I $(BRLCAD)/include -I $(BRLCAD)/src/other/openNURBS/
CFLAGS = -g $(INCLUDES)

# need to define one of the symbols in obj_parser_state.h to get shared_ptr
# SHARED_PTR_TR1_STD if we have GCC 4.1
# SHARED_PTR_STD     if we have GCC 4.3+
# SHARED_PTR_BOOST   if we have boost library
CPPFLAGS = $(CFLAGS) -D SHARED_PTR_TR1_MEMORY

# Linux won't look in the local lib dir we specify
# unless we build it into the executable
LIB_RPATH = -Wl,-rpath -Wl,$(LIBDIR)
LIBS = $(LIB_RPATH) -L$(LIBDIR) -lbu -lbn -lwdb



.PHONY : clean cleaner cleanest install obj_grammar.h

obj-g : obj-g_new.o obj_grammar.o obj_parser.o obj_rules.o re2c_utils.o
	$(CXX) $(LIBS) -o $@ $^

obj-g_new.o : obj-g_new.c obj_parser.h
	$(CXX) $(CPPFLAGS) -c -o $@ $<

obj_grammar.o : obj_grammar.cpp
	$(CXX) $(CPPFLAGS) -c -o $@ $<

obj_parser.o : obj_parser.cpp obj_parser.h obj_parser_state.h obj_grammar.h obj_rules.h
re2c_utils.o : re2c_utils.c re2c_utils.h

obj_grammar.cpp obj_tokens.h : obj_grammar.yy
	lemon -q $<
	cp obj_grammar.c obj_grammar.cpp
	mv obj_grammar.h obj_tokens.h
	cp obj_grammar.h.in obj_grammar.h

obj_grammar.yy : obj_parser.h obj_parser_state.h obj_grammar.h.in obj_rules.h

obj_rules.cpp : obj_rules.re
	re2c -Fc -o obj_rules.cpp $^

obj_rules.re : obj_grammar.h obj_parser_state.h obj_rules.h re2c_utils.h

obj_rules.h obj_rules.re re2c_utils.c : re2c_utils.h

clean :
	-rm -f obj-g_new.o obj_parser.o obj_rules.o obj_grammar.o re2c_utils.o

cleaner : clean
	-rm -f obj_grammar.h obj_tokens.h
	-rm -f obj_grammar.c obj_grammar.cpp
	-rm -f obj_rules.cpp

cleanest : cleaner
	-rm -f obj-g

install :
	cp obj-g $(HOME)/bin
