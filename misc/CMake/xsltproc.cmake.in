set(ENV{XML_DEBUG_CATALOG} 1)
# It is necessary to ensure that the target directory exists *before* calling xsltproc
# when building in parallel, due to a bug/limitation in xsltproc
get_filename_component(output_dir "@outfile@" PATH)
execute_process(COMMAND "@CMAKE_COMMAND@" -E make_directory "${output_dir}/")
execute_process(COMMAND "@XSLTPROC_EXECUTABLE@" -nonet -xinclude -o "@outfile@" "@CURRENT_XSL_STYLESHEET@" "@CMAKE_CURRENT_SOURCE_DIR@/@filename@" RESULT_VARIABLE CMDRESULT)

# For some reason, xsltproc doesn't always seem to respect the
# output variable when doing man pages.  Add a backup check
# to move the man page to the right location if xsltproc insists 
# on putting it in the current directory.
get_filename_component(output_name "@outfile@" NAME)
if(EXISTS "@CMAKE_CURRENT_BINARY_DIR@/${output_name}")
	if(NOT "@CMAKE_CURRENT_BINARY_DIR@/${output_name}" STREQUAL "@outfile@")
	  execute_process(COMMAND "@CMAKE_COMMAND@" -E copy "@CMAKE_CURRENT_BINARY_DIR@/${output_name}" "@outfile@")
	  execute_process(COMMAND "@CMAKE_COMMAND@" -E remove "@CMAKE_CURRENT_BINARY_DIR@/${output_name}" )
	endif(NOT "@CMAKE_CURRENT_BINARY_DIR@/${output_name}" STREQUAL "@outfile@")
endif(EXISTS "@CMAKE_CURRENT_BINARY_DIR@/${output_name}")
if(CMDRESULT)
  message(FATAL_ERROR "xsltproc build failure: ${CMDRESULT}")
endif(CMDRESULT)

