# Empty elements in lists are of no interest
IF(COMMAND CMAKE_POLICY)
	CMAKE_POLICY(SET CMP0007 OLD)
ENDIF(COMMAND CMAKE_POLICY)

SET(SVN_TREE_MODIFIED 0)

MESSAGE(" --- Building file list from Subversion manifests: ...")
SET(SVN_FILES "")
FIND_PROGRAM(SVN_EXEC svn)
EXECUTE_PROCESS(COMMAND ${SVN_EXEC} info -R @CMAKE_SOURCE_DIR@ OUTPUT_VARIABLE SVN_RAWOUT)
STRING(REGEX REPLACE ";" "semicolon" SVN_RAWOUT "${SVN_RAWOUT}")
STRING(REGEX REPLACE "\r?\n" ";" SVN_RAWOUT "${SVN_RAWOUT}")
FOREACH(ITEM ${SVN_RAWOUT})
	IF(${ITEM} MATCHES "^Path: ")
		STRING(REGEX REPLACE "Path: " "" entry "${ITEM}")
		STRING(REGEX REPLACE "@CMAKE_SOURCE_DIR@/" "" entry "${entry}")
		LIST(APPEND SVN_FILES ${entry})
	ENDIF(${ITEM} MATCHES "^Path: ")
ENDFOREACH(ITEM ${SVN_RAWOUT})
EXECUTE_PROCESS(COMMAND ${SVN_EXEC} status @CMAKE_SOURCE_DIR@ OUTPUT_VARIABLE SVN_RAWSTATUS)
STRING(REGEX REPLACE "@CMAKE_SOURCE_DIR@/" "" SVN_RAWSTATUS "${SVN_RAWSTATUS}")
STRING(REGEX REPLACE "\r?\n" ";" SVN_STATUS "${SVN_RAWSTATUS}")
FOREACH(ITEM ${SVN_STATUS})
	IF(${ITEM} MATCHES "^M")
		SET(SVN_TREE_MODIFIED 1)
	ENDIF(${ITEM} MATCHES "^M")
	IF(${ITEM} MATCHES "^D")
		STRING(REGEX REPLACE "D[\\t\\ ]*" "" item_path "${ITEM}")
		LIST(REMOVE_ITEM SVN_FILES ${item_path})
	ENDIF(${ITEM} MATCHES "^D")
ENDFOREACH(ITEM ${SVN_STATUS})
FILE(WRITE @CMAKE_BINARY_DIR@/svn_files_list.txt "${SVN_FILES}")

IF(SVN_TREE_MODIFIED)
	MESSAGE("\n**** NOTE:  Subversion reports modified source files present in the source tree.\n     Distcheck proceeding, but tarball is not suitable for release.\n")
	# TODO - mess with tarball naming so they're not releasable
ENDIF(SVN_TREE_MODIFIED)

MESSAGE(" --- Building file list from Subversion manifests: Done") 

# Go with a function here because we want local variable scope
function(check_directory dir)
	SET(DIR_FILES_LIST "")
	SET(ACTIVE_PATHS "")
	IF(EXISTS @CMAKE_BINARY_DIR@/${dir}/cmakefiles.cmake)
		FILE(STRINGS @CMAKE_BINARY_DIR@/${dir}/cmakefiles.cmake DIR_FILES_LIST)
		LIST(REMOVE_DUPLICATES DIR_FILES_LIST)
		LIST(SORT DIR_FILES_LIST)
	ENDIF(EXISTS @CMAKE_BINARY_DIR@/${dir}/cmakefiles.cmake)
	IF(EXISTS @CMAKE_BINARY_DIR@/${dir}/cmakepaths.cmake)
		FILE(STRINGS @CMAKE_BINARY_DIR@/${dir}/cmakepaths.cmake ACTIVE_PATHS)
		LIST(REMOVE_DUPLICATES ACTIVE_PATHS)
	ENDIF(EXISTS @CMAKE_BINARY_DIR@/${dir}/cmakepaths.cmake)
	FOREACH(ITEM ${DIR_FILES_LIST})
		IF(IS_DIRECTORY @CMAKE_SOURCE_DIR@/${dir}/${ITEM})
			SET(IGNORED_FILES_RAW "")
			FILE(GLOB_RECURSE IGNORED_FILES_RAW RELATIVE @CMAKE_SOURCE_DIR@ "@CMAKE_SOURCE_DIR@/${dir}/${ITEM}/*")
			SET(IGNORED_FILES "")
			FOREACH(SUBITEM ${IGNORED_FILES_RAW})
				IF(NOT SUBITEM MATCHES "\\.svn")
					list(APPEND IGNORED_FILES ${SUBITEM})
					get_filename_component(subitem_path ${SUBITEM} PATH)
					list(APPEND IGNORED_FILES ${subitem_path})
					get_filename_component(subitem_path ${subitem_path} PATH)
					list(APPEND IGNORED_FILES ${subitem_path})
				ENDIF(NOT SUBITEM MATCHES "\\.svn")
			ENDFOREACH(SUBITEM ${IGNORED_FILES})
			IF(IGNORED_FILES)
				LIST(REMOVE_DUPLICATES IGNORED_FILES)
				FILE(APPEND @CMAKE_BINARY_DIR@/build_files_list.txt ";${IGNORED_FILES}")
			ENDIF(IGNORED_FILES)
		ENDIF(IS_DIRECTORY @CMAKE_SOURCE_DIR@/${dir}/${ITEM})
		FILE(APPEND @CMAKE_BINARY_DIR@/build_files_list.txt ";${dir}/${ITEM}")
	ENDFOREACH(ITEM ${DIR_FILES_LIST})
	IF(ACTIVE_PATHS)
		FOREACH(dir_path ${ACTIVE_PATHS})
			IF(EXISTS @CMAKE_BINARY_DIR@/${dir}/${dir_path}/cmakefiles.cmake OR EXISTS @CMAKE_BINARY_DIR@/${dir}/${dir_path}/cmakepaths.cmake)
				check_directory(${dir}/${dir_path})
				FILE(APPEND @CMAKE_BINARY_DIR@/build_files_list.txt ";${dir}/${dir_path}")
			ENDIF()
		ENDFOREACH(dir_path)
	ENDIF(ACTIVE_PATHS)
endfunction(check_directory)

# Start of test run - functions and macros are defined, now run them

FILE(READ @CMAKE_BINARY_DIR@/build_files_list.txt "INITIAL_LIST")
FOREACH(ITEM ${INITIAL_LIST})
	STRING(REGEX REPLACE "@CMAKE_SOURCE_DIR@/" "" ITEM ${ITEM})
	LIST(APPEND CLEANED_INITIAL ${ITEM})
ENDFOREACH(ITEM ${INITIAL_LIST})
FILE(WRITE @CMAKE_BINARY_DIR@/build_files_list.txt "${CLEANED_INITIAL}")

MESSAGE("Checking source archive is in sync with build system: ...")

# First, handle toplevel directory
FILE(STRINGS @CMAKE_BINARY_DIR@/cmakefiles.cmake DIR_FILES_LIST)
FILE(STRINGS @CMAKE_BINARY_DIR@/cmakepaths.cmake ACTIVE_PATHS)
LIST(REMOVE_DUPLICATES ACTIVE_PATHS)
LIST(REMOVE_DUPLICATES DIR_FILES_LIST)
LIST(SORT DIR_FILES_LIST)
FOREACH(ITEM ${DIR_FILES_LIST})
	IF(IS_DIRECTORY @CMAKE_SOURCE_DIR@/${ITEM})
		SET(IGNORED_FILES_RAW "")
		FILE(GLOB_RECURSE IGNORED_FILES_RAW RELATIVE @CMAKE_SOURCE_DIR@ "@CMAKE_SOURCE_DIR@/${ITEM}/*")
		SET(IGNORED_FILES "")
		FOREACH(SUBITEM ${IGNORED_FILES_RAW})
			IF(NOT SUBITEM MATCHES "\\.svn")
				list(APPEND IGNORED_FILES ${SUBITEM})
			ENDIF(NOT SUBITEM MATCHES "\\.svn")
		ENDFOREACH(SUBITEM ${IGNORED_FILES})
		FILE(APPEND @CMAKE_BINARY_DIR@/build_files_list.txt ";${IGNORED_FILES}")
	ENDIF(IS_DIRECTORY @CMAKE_SOURCE_DIR@/${ITEM})
	FILE(APPEND @CMAKE_BINARY_DIR@/build_files_list.txt ";${ITEM}")
ENDFOREACH(ITEM ${DIR_FILES_LIST})

# Then, handle any subdirectories that are active (TODO - remove global property in toplevel made unnecessary by this approach)
IF(ACTIVE_PATHS)
	FOREACH(dir_path ${ACTIVE_PATHS})
		FILE(APPEND @CMAKE_BINARY_DIR@/build_files_list.txt ";${dir_path}")
		check_directory(${dir_path})
	ENDFOREACH(dir_path ${ACTIVE_PATHS})
ENDIF(ACTIVE_PATHS)

MACRO(CLEAR_LIST dirlist pattern)
	FOREACH(ITEM ${${dirlist}})
		IF(${ITEM} MATCHES "${pattern}$")
			LIST(REMOVE_ITEM ${dirlist} ${ITEM})
		ENDIF(${ITEM} MATCHES "${pattern}$")
	ENDFOREACH(ITEM ${${dirlist}})
ENDMACRO(CLEAR_LIST)


FILE(READ @CMAKE_BINARY_DIR@/build_files_list.txt BUILD_FILES)
FILE(READ @CMAKE_BINARY_DIR@/svn_files_list.txt SVN_FILES)
LIST(REMOVE_DUPLICATES BUILD_FILES)
LIST(REMOVE_ITEM SVN_FILES @CMAKE_SOURCE_DIR@)
STRING(REGEX REPLACE "/\\." "/tmpdot" BUILD_FILES "${BUILD_FILES}")
STRING(REGEX REPLACE "/\\." "/tmpdot" SVN_FILES "${SVN_FILES}")
LIST(SORT BUILD_FILES)
LIST(SORT SVN_FILES)
STRING(REGEX REPLACE ";" "\n" BUILD_FILES "${BUILD_FILES}")
STRING(REGEX REPLACE ";" "\n" SVN_FILES "${SVN_FILES}")
FILE(WRITE @CMAKE_BINARY_DIR@/build_files_list.txt ${BUILD_FILES})
FILE(WRITE @CMAKE_BINARY_DIR@/svn_files_list.txt ${SVN_FILES})
STRING(REGEX REPLACE "\n" ";" BUILD_FILES "${BUILD_FILES}")
STRING(REGEX REPLACE "\n" ";" SVN_FILES "${SVN_FILES}")

EXECUTE_PROCESS(COMMAND @CMAKE_BINARY_DIR@/@BIN_DIR@/comm -3 @CMAKE_BINARY_DIR@/build_files_list.txt @CMAKE_BINARY_DIR@/svn_files_list.txt OUTPUT_VARIABLE COMM_RAWOUT)
STRING(REGEX REPLACE "\n" ";" COMM_OUT "${COMM_RAWOUT}")
STRING(REGEX REPLACE "/tmpdot" "/\\\\." COMM_OUT "${COMM_OUT}")
STRING(REGEX REPLACE "\\\\" "" COMM_OUT "${COMM_OUT}")

FOREACH(ITEM ${COMM_OUT})
	LIST(FIND BUILD_FILES ${ITEM} INBUILD)
	LIST(FIND SVN_FILES ${ITEM} INSVN)
	IF(INBUILD STREQUAL "-1" AND NOT INSVN STREQUAL "-1")
		LIST(APPEND SVN_FILES_NOT_IN_BUILD ${ITEM})
		LIST(REMOVE_ITEM COMM_OUT ${ITEM})
	ENDIF(INBUILD STREQUAL "-1" AND NOT INSVN STREQUAL "-1")
	IF(INSVN STREQUAL "-1" AND NOT INBUILD STREQUAL "-1")
		LIST(APPEND BUILD_FILES_NOT_IN_SVN ${ITEM})
		LIST(REMOVE_ITEM COMM_OUT ${ITEM})
	ENDIF(INSVN STREQUAL "-1" AND NOT INBUILD STREQUAL "-1")
ENDFOREACH(ITEM ${COMM_OUT})

IF(SVN_FILES_NOT_IN_BUILD)
	STRING(REGEX REPLACE ";" "\n" SVN_FILES_NOT_IN_BUILD "${SVN_FILES_NOT_IN_BUILD}")
	MESSAGE(FATAL_ERROR "Files listed in subversion but not accounted for in build logic: \n${SVN_FILES_NOT_IN_BUILD}\n")
ENDIF(SVN_FILES_NOT_IN_BUILD)

IF(BUILD_FILES_NOT_IN_SVN)
	STRING(REGEX REPLACE ";" "\n" BUILD_FILES_NOT_IN_SVN "${BUILD_FILES_NOT_IN_SVN}")
	MESSAGE(FATAL_ERROR "Files present in the build logic but not accounted for in Subversion: \n${BUILD_FILES_NOT_IN_SVN}\n")
ENDIF(BUILD_FILES_NOT_IN_SVN)

IF(COMM_OUT)
	MESSAGE("Files present in the source tree but not used by the build logic or accounted for in Subversion: \n${COMM_OUT}\n")
ENDIF(COMM_OUT)

# TODO - The following lines aren't active yet, and may need more sophisticated logic in the case of multiple
# distcheck runs to avoid repeated appendings, but should "tweak" CPack based on the distcheck results.  May
# need to remove _CPack_Packages directory, not sure
FILE(APPEND @CMAKE_BINARY_DIR@/CPackConfig.cmake "SET(CPACK_IGNORE_FILES \"\${CPACK_IGNORE_FILES};${PROBLEM_FILES}\")\n")
FILE(APPEND @CMAKE_BINARY_DIR@/CPackSourceConfig.cmake "SET(CPACK_IGNORE_FILES \"\${CPACK_IGNORE_FILES};${PROBLEM_FILES}\")\n")
FILE(APPEND @CMAKE_BINARY_DIR@/CPackConfig.cmake "SET(CPACK_SOURCE_IGNORE_FILES \"\${CPACK_SOURCE_IGNORE_FILES};${PROBLEM_FILES}\")\n")
FILE(APPEND @CMAKE_BINARY_DIR@/CPackSourceConfig.cmake "SET(CPACK_SOURCE_IGNORE_FILES \"\${CPACK_SOURCE_IGNORE_FILES};${PROBLEM_FILES}\")\n")


# If we got this far, it worked
MESSAGE("Checking source archive is in sync with build system: Passed")

